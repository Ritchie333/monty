@expand=#DEF(#GRAFIX(a) #UDGARRAY2,7,4,2(($a);($a+1);($a+$10);($a+$11)))
@expand=#DEF(#GRAFIXDH(a) #UDGARRAY2,7,4,2(($a);($a+1);($a+$10);($a+$11);($a+$80);($a+$81);($a+$90);($a+$91)))
@expand=#DEF(#GRAFIXSTR(a)(s) #GRAFIX($a)(${s}_a*)#GRAFIX($a+$20)(${s}_b*)#GRAFIX($a+$40)(${s}_c*)#GRAFIX($a+$60)(${s}_d*) #UDGARRAY*(${s}_a;${s}_b;${s}_c;${s}_d)($s))
@expand=#DEF(#GRAFIXDHSTR(a)(s) #GRAFIXDH($a)(${s}_a*)#GRAFIXDH($a+$20)(${s}_b*)#GRAFIXDH($a+$40)(${s}_c*)#GRAFIXDH($a+$60)(${s}_d*) #UDGARRAY*(${s}_a;${s}_b;${s}_c;${s}_d)($s))
@expand=#DEF(#UDGSTR(a) #UDG($a+1,#PEEK$a) #UDG($a+10,#PEEK($a+9)) #UDG($a+$13,#PEEK($a+$12)) #UDG($a+$1C,#PEEK($a+$1B)) #UDG($a+$25,#PEEK($a+$24)) #UDG($a+$2E,#PEEK($a+$2D)) #UDG($a+$37,#PEEK($a+$36)) #UDG($a+$40,#PEEK($a+$3F)) )

@expand=#DEF(#UDGBYTES(a,n)
@expand=+#IF($n==0)(#EVAL(#PEEK($a)/$20))
@expand=+#IF($n==1)(#EVAL((#PEEK($a)&$1f)/4))
@expand=+#IF($n==2)(#EVAL(((#PEEK($a)&$3)*2)+(#PEEK($a+1)/$80)))
@expand=+#IF($n==3)(#EVAL(((#PEEK($a+1)&$7f)/$10)))
@expand=+#IF($n==4)(#EVAL(((#PEEK($a+1)&$f)/2)))
@expand=+#IF($n==5)(#EVAL(((#PEEK($a+1)&1)*4)+(#PEEK($a+2)/$40)))
@expand=+#IF($n==6)(#EVAL((#PEEK($a+2)&$3f)/8))
@expand=+#IF($n==7)(#EVAL(((#PEEK($a+2)&$7))))
@expand=+)

@expand=#DEF(#UDGADDR(a,n) #EVAL($a+$124+#UDGBYTES($a+(($n/8)*3),($n%8))*9))
@expand=#DEF(#UDGXSTR(a,n) #UDG(#UDGADDR($a,$n)+1,#PEEK(#UDGADDR($a,$n))))
@expand=#DEF(#UDGXSCR(a)(s) #UDGS32,20,2(${s})(#UDGXSTR(#PC,32*$y+$x)(*${s})${s}) )
@expand=#DEF(#UDGSADDR(y,x) #UDG($7C00+((#PEEK($F14D+(28*$y+$x))-$80)*8),#PEEK($F37D+(28*$y+$x))))

; Loading screen
;
; #UDGTABLE { #SCR2(loading) } TABLE#
b$4000 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4008 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4010 DEFB $00,$00,$00,$1F,$80,$00,$30,$00
 $4018 DEFB $00,$00,$00,$18,$00,$00,$00,$00
 $4020 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4028 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4030 DEFB $00,$00,$00,$FF,$7F,$01,$F7,$00
 $4038 DEFB $00,$00,$01,$8C,$00,$00,$00,$00
 $4040 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4048 DEFB $00,$1F,$FF,$00,$00,$00,$00,$00
 $4050 DEFB $00,$00,$00,$7F,$E7,$FF,$3F,$87
 $4058 DEFB $F0,$1E,$7F,$BE,$3E,$0F,$80,$00
 $4060 DEFB $00,$00,$00,$00,$00,$3C,$0C,$07
 $4068 DEFB $E0,$1C,$AA,$AA,$00,$00,$00,$00
 $4070 DEFB $00,$00,$00,$3F,$F0,$00,$7F,$B8
 $4078 DEFB $7C,$1F,$00,$F7,$F7,$F7,$00,$00
 $4080 DEFB $00,$00,$00,$00,$03,$9F,$FE,$E8
 $4088 DEFB $04,$0A,$2D,$E6,$00,$00,$00,$00
 $4090 DEFB $00,$00,$00,$7F,$E0,$00,$FC,$FF
 $4098 DEFB $80,$00,$00,$01,$FF,$FC,$00,$00
 $40A0 DEFB $00,$00,$00,$00,$1F,$E5,$00,$00
 $40A8 DEFB $54,$00,$07,$04,$F4,$00,$00,$00
 $40B0 DEFB $00,$00,$01,$FF,$00,$00,$03,$FF
 $40B8 DEFB $F7,$FF,$FB,$E0,$00,$00,$00,$00
 $40C0 DEFB $00,$00,$00,$00,$3B,$FF,$FF,$FF
 $40C8 DEFB $FF,$80,$04,$FC,$BC,$00,$00,$00
 $40D0 DEFB $00,$00,$00,$03,$9F,$C1,$9F,$FE
 $40D8 DEFB $F0,$00,$00,$00,$00,$00,$00,$00
 $40E0 DEFB $00,$00,$00,$0F,$FF,$FF,$FF,$FF
 $40E8 DEFB $FF,$F0,$7F,$3C,$7E,$00,$00,$00
 $40F0 DEFB $00,$01,$70,$00,$00,$00,$1F,$F8
 $40F8 DEFB $00,$00,$00,$00,$F3,$C0,$00,$00
 $4100 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4108 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4110 DEFB $00,$00,$00,$3F,$C0,$00,$78,$00
 $4118 DEFB $00,$00,$00,$1C,$00,$00,$00,$00
 $4120 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4128 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4130 DEFB $00,$00,$00,$FF,$7F,$03,$EF,$00
 $4138 DEFB $00,$00,$07,$F3,$F0,$00,$00,$00
 $4140 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4148 DEFB $00,$1F,$FF,$80,$00,$00,$00,$00
 $4150 DEFB $00,$00,$00,$7F,$E3,$FF,$3F,$9F
 $4158 DEFB $FE,$3F,$7F,$DE,$3E,$0F,$80,$00
 $4160 DEFB $00,$00,$00,$00,$00,$70,$06,$08
 $4168 DEFB $30,$11,$45,$14,$00,$00,$00,$00
 $4170 DEFB $00,$00,$00,$3F,$F0,$00,$7F,$B8
 $4178 DEFB $FC,$1F,$01,$F7,$F7,$EF,$00,$00
 $4180 DEFB $00,$00,$00,$00,$03,$7F,$FF,$6F
 $4188 DEFB $F8,$05,$87,$8E,$00,$00,$00,$00
 $4190 DEFB $00,$00,$00,$7F,$E0,$00,$FC,$7F
 $4198 DEFB $00,$00,$03,$F3,$FF,$78,$00,$00
 $41A0 DEFB $00,$00,$00,$00,$1F,$88,$00,$00
 $41A8 DEFB $A8,$00,$07,$1D,$2E,$00,$00,$00
 $41B0 DEFB $00,$00,$00,$F8,$00,$00,$7D,$FF
 $41B8 DEFB $FB,$FF,$F7,$80,$00,$00,$00,$00
 $41C0 DEFB $00,$00,$00,$00,$07,$FF,$FF,$FF
 $41C8 DEFB $FF,$80,$1C,$FC,$9C,$00,$00,$00
 $41D0 DEFB $00,$00,$00,$07,$EF,$C0,$7F,$FE
 $41D8 DEFB $C0,$00,$00,$00,$00,$00,$00,$00
 $41E0 DEFB $00,$00,$01,$53,$FF,$FF,$FF,$FF
 $41E8 DEFB $FF,$F0,$BF,$78,$7F,$C0,$00,$00
 $41F0 DEFB $00,$01,$68,$00,$00,$00,$3F,$F8
 $41F8 DEFB $00,$00,$00,$00,$F3,$C0,$00,$00
 $4200 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4208 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4210 DEFB $00,$00,$00,$7F,$E0,$00,$7C,$00
 $4218 DEFB $00,$00,$00,$3E,$00,$00,$00,$00
 $4220 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4228 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4230 DEFB $00,$00,$00,$7F,$BF,$03,$EF,$00
 $4238 DEFB $00,$00,$07,$FF,$F8,$00,$00,$00
 $4240 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4248 DEFB $00,$1F,$FF,$C0,$00,$00,$00,$00
 $4250 DEFB $00,$00,$00,$7F,$E1,$FE,$3F,$BF
 $4258 DEFB $FF,$BF,$7F,$EE,$3F,$1F,$80,$00
 $4260 DEFB $00,$00,$00,$00,$00,$60,$03,$B0
 $4268 DEFB $88,$0A,$28,$A0,$00,$00,$00,$00
 $4270 DEFB $00,$00,$00,$3F,$F0,$00,$7F,$70
 $4278 DEFB $F8,$1F,$03,$EF,$E3,$0F,$00,$00
 $4280 DEFB $00,$00,$00,$00,$02,$FF,$FF,$70
 $4288 DEFB $00,$00,$03,$CC,$00,$00,$00,$00
 $4290 DEFB $00,$00,$00,$FF,$E0,$00,$FC,$1C
 $4298 DEFB $00,$00,$7F,$F3,$FF,$B0,$00,$00
 $42A0 DEFB $00,$00,$00,$00,$1F,$50,$00,$00
 $42A8 DEFB $F4,$00,$07,$0D,$DE,$00,$00,$00
 $42B0 DEFB $00,$00,$00,$00,$00,$01,$FE,$FF
 $42B8 DEFB $FB,$FF,$F4,$00,$00,$00,$00,$00
 $42C0 DEFB $00,$00,$00,$00,$3F,$FF,$FF,$FF
 $42C8 DEFB $FF,$C0,$3E,$FC,$C8,$00,$00,$00
 $42D0 DEFB $00,$00,$00,$07,$F7,$D3,$FF,$FE
 $42D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $42E0 DEFB $00,$00,$02,$04,$FF,$FF,$FF,$FF
 $42E8 DEFB $FF,$F0,$B9,$70,$3D,$E0,$00,$00
 $42F0 DEFB $00,$00,$A0,$00,$00,$00,$3F,$C7
 $42F8 DEFB $BB,$F9,$EF,$BD,$F0,$3E,$F0,$00
 $4300 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4308 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4310 DEFB $00,$00,$00,$79,$E0,$00,$FC,$00
 $4318 DEFB $00,$00,$00,$3E,$00,$00,$00,$00
 $4320 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4328 DEFB $00,$0E,$00,$00,$00,$00,$00,$00
 $4330 DEFB $00,$00,$00,$7F,$BF,$83,$DF,$00
 $4338 DEFB $00,$00,$03,$FF,$F0,$00,$00,$00
 $4340 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4348 DEFB $00,$1F,$FF,$00,$00,$00,$00,$00
 $4350 DEFB $00,$00,$00,$7F,$E0,$FE,$3F,$BF
 $4358 DEFB $FF,$DF,$E3,$EE,$3F,$1F,$80,$00
 $4360 DEFB $00,$00,$00,$00,$00,$E0,$01,$D2
 $4368 DEFB $C8,$15,$55,$50,$00,$00,$00,$00
 $4370 DEFB $00,$00,$00,$7F,$E0,$00,$7F,$71
 $4378 DEFB $F0,$3E,$03,$EF,$C0,$0F,$00,$00
 $4380 DEFB $00,$00,$00,$00,$01,$FF,$FF,$BF
 $4388 DEFB $F0,$00,$03,$83,$80,$00,$00,$00
 $4390 DEFB $00,$00,$00,$FF,$E0,$00,$FC,$00
 $4398 DEFB $00,$0F,$FF,$FB,$FF,$A0,$00,$00
 $43A0 DEFB $00,$00,$00,$00,$3E,$80,$00,$00
 $43A8 DEFB $F8,$00,$07,$0E,$AE,$00,$00,$00
 $43B0 DEFB $00,$00,$00,$00,$00,$01,$FE,$FF
 $43B8 DEFB $FD,$FF,$F0,$00,$00,$00,$00,$00
 $43C0 DEFB $00,$00,$00,$00,$3F,$FF,$FF,$FF
 $43C8 DEFB $FF,$C0,$7E,$FE,$E0,$00,$00,$00
 $43D0 DEFB $00,$00,$00,$0F,$F7,$DB,$FF,$F0
 $43D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $43E0 DEFB $00,$00,$04,$72,$FF,$FF,$FF,$FF
 $43E8 DEFB $FF,$F8,$DB,$70,$3E,$F8,$00,$00
 $43F0 DEFB $00,$00,$BC,$00,$00,$00,$3E,$07
 $43F8 DEFB $FB,$FC,$FF,$FD,$F7,$DF,$F8,$00
 $4400 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4408 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4410 DEFB $00,$00,$00,$FE,$F0,$00,$FE,$00
 $4418 DEFB $00,$00,$00,$3E,$00,$00,$00,$00
 $4420 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4428 DEFB $00,$0F,$80,$00,$00,$00,$00,$00
 $4430 DEFB $00,$00,$00,$7F,$BF,$C7,$BF,$00
 $4438 DEFB $00,$00,$00,$7F,$80,$00,$00,$00
 $4440 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4448 DEFB $00,$1F,$FC,$A0,$00,$00,$00,$00
 $4450 DEFB $00,$00,$00,$3F,$E0,$FE,$3F,$BF
 $4458 DEFB $83,$E7,$81,$F6,$3F,$3F,$80,$00
 $4460 DEFB $00,$00,$00,$00,$00,$C0,$00,$D6
 $4468 DEFB $C4,$0A,$28,$A0,$00,$00,$00,$00
 $4470 DEFB $00,$00,$00,$7F,$E0,$00,$7F,$7F
 $4478 DEFB $F0,$3E,$03,$E7,$00,$0E,$00,$00
 $4480 DEFB $00,$00,$00,$00,$03,$FF,$FF,$FC
 $4488 DEFB $00,$00,$01,$07,$C0,$00,$00,$00
 $4490 DEFB $00,$00,$00,$FF,$C0,$00,$78,$00
 $4498 DEFB $00,$6F,$FF,$FD,$FF,$00,$00,$00
 $44A0 DEFB $00,$00,$00,$00,$3D,$00,$00,$00
 $44A8 DEFB $F8,$00,$07,$0E,$6E,$00,$00,$00
 $44B0 DEFB $00,$00,$00,$00,$07,$83,$FE,$FE
 $44B8 DEFB $FD,$FF,$80,$00,$00,$00,$00,$00
 $44C0 DEFB $00,$00,$00,$00,$3F,$FF,$FF,$FF
 $44C8 DEFB $FF,$E0,$7E,$FE,$E0,$00,$00,$00
 $44D0 DEFB $00,$00,$00,$0F,$FB,$B9,$FF,$00
 $44D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $44E0 DEFB $00,$00,$03,$FD,$FF,$FF,$FF,$FF
 $44E8 DEFB $FF,$F8,$FE,$E0,$3B,$FC,$00,$00
 $44F0 DEFB $00,$00,$5C,$00,$00,$00,$7D,$F3
 $44F8 DEFB $F7,$BD,$EF,$BD,$F7,$BE,$F8,$00
 $4500 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4508 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4510 DEFB $00,$00,$00,$FE,$F8,$00,$FE,$00
 $4518 DEFB $00,$00,$00,$7E,$00,$00,$00,$00
 $4520 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4528 DEFB $00,$0F,$E0,$00,$00,$00,$00,$00
 $4530 DEFB $00,$00,$00,$7F,$DF,$E7,$BF,$80
 $4538 DEFB $00,$00,$00,$0C,$00,$03,$00,$00
 $4540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4548 DEFB $00,$1F,$F1,$50,$00,$00,$00,$00
 $4550 DEFB $00,$00,$00,$3F,$E0,$7C,$7F,$BF
 $4558 DEFB $7C,$7B,$80,$F6,$1F,$FF,$80,$00
 $4560 DEFB $00,$00,$00,$00,$01,$80,$FE,$D6
 $4568 DEFB $D4,$11,$45,$00,$00,$00,$00,$00
 $4570 DEFB $00,$00,$00,$7F,$E0,$00,$FE,$FF
 $4578 DEFB $E0,$3E,$01,$C0,$00,$3E,$00,$00
 $4580 DEFB $00,$00,$00,$00,$07,$FF,$00,$02
 $4588 DEFB $A8,$00,$03,$0B,$B0,$00,$00,$00
 $4590 DEFB $00,$00,$00,$FF,$C0,$00,$70,$00
 $4598 DEFB $03,$F7,$F7,$FC,$F0,$00,$00,$00
 $45A0 DEFB $00,$00,$00,$00,$3A,$00,$00,$00
 $45A8 DEFB $F8,$00,$07,$07,$6E,$00,$00,$00
 $45B0 DEFB $00,$00,$00,$00,$1F,$C3,$FF,$7F
 $45B8 DEFB $7C,$FC,$00,$00,$00,$00,$00,$00
 $45C0 DEFB $00,$00,$00,$00,$7F,$FF,$FF,$FF
 $45C8 DEFB $FF,$E0,$7F,$FF,$F0,$00,$00,$00
 $45D0 DEFB $00,$00,$00,$1B,$F9,$F0,$70,$00
 $45D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $45E0 DEFB $00,$00,$0F,$FE,$FF,$FF,$FF,$FF
 $45E8 DEFB $FF,$F8,$FF,$80,$36,$7E,$00,$00
 $45F0 DEFB $00,$00,$50,$00,$00,$00,$7D,$F7
 $45F8 DEFB $8F,$3D,$CF,$3D,$E7,$BC,$F8,$00
 $4600 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4608 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4610 DEFB $00,$00,$00,$FF,$7C,$01,$FE,$00
 $4618 DEFB $00,$00,$00,$7E,$00,$00,$00,$00
 $4620 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4628 DEFB $00,$1F,$F0,$00,$00,$00,$00,$00
 $4630 DEFB $00,$00,$00,$7F,$DF,$F7,$BF,$80
 $4638 DEFB $00,$00,$00,$7C,$1E,$07,$00,$00
 $4640 DEFB $00,$00,$00,$00,$00,$07,$E0,$00
 $4648 DEFB $00,$1F,$88,$A0,$00,$00,$00,$00
 $4650 DEFB $00,$00,$00,$3F,$E0,$38,$7F,$BE
 $4658 DEFB $3E,$07,$00,$F6,$2F,$FB,$80,$00
 $4660 DEFB $00,$00,$00,$00,$01,$87,$FE,$D2
 $4668 DEFB $D4,$0A,$AA,$80,$00,$00,$00,$00
 $4670 DEFB $00,$00,$00,$7F,$E0,$00,$FE,$FF
 $4678 DEFB $C0,$3E,$00,$00,$07,$F8,$00,$00
 $4680 DEFB $00,$00,$00,$00,$07,$FE,$55,$55
 $4688 DEFB $50,$00,$03,$1B,$70,$00,$00,$00
 $4690 DEFB $00,$00,$01,$FF,$C0,$00,$00,$00
 $4698 DEFB $07,$F7,$FB,$FC,$00,$00,$00,$00
 $46A0 DEFB $00,$00,$00,$00,$3C,$00,$00,$00
 $46A8 DEFB $FE,$00,$07,$07,$46,$00,$00,$00
 $46B0 DEFB $00,$00,$00,$00,$3F,$C3,$FF,$7F
 $46B8 DEFB $78,$00,$00,$00,$00,$00,$00,$00
 $46C0 DEFB $00,$00,$00,$03,$7F,$FF,$FF,$FF
 $46C8 DEFB $FF,$E7,$FF,$FF,$F0,$00,$00,$00
 $46D0 DEFB $00,$00,$00,$3D,$FF,$E0,$00,$00
 $46D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $46E0 DEFB $00,$00,$1F,$FF,$FF,$FF,$FF,$FF
 $46E8 DEFB $FF,$F8,$FF,$00,$3C,$1F,$00,$00
 $46F0 DEFB $00,$00,$0C,$00,$00,$00,$F8,$F7
 $46F8 DEFB $8F,$FD,$DF,$7D,$E7,$FD,$F0,$00
 $4700 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4708 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4710 DEFB $00,$00,$00,$FF,$7E,$01,$FE,$00
 $4718 DEFB $00,$00,$00,$7E,$00,$00,$00,$00
 $4720 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4728 DEFB $00,$1F,$FC,$00,$00,$00,$00,$00
 $4730 DEFB $00,$00,$00,$7F,$EF,$FF,$3F,$80
 $4738 DEFB $00,$0C,$3E,$7C,$3E,$07,$80,$00
 $4740 DEFB $00,$00,$00,$00,$00,$1F,$18,$00
 $4748 DEFB $00,$1E,$55,$14,$00,$00,$00,$00
 $4750 DEFB $00,$00,$00,$3F,$F0,$00,$7F,$B8
 $4758 DEFB $3E,$1F,$00,$F7,$F7,$F7,$80,$00
 $4760 DEFB $00,$00,$00,$00,$01,$8F,$FE,$68
 $4768 DEFB $94,$11,$45,$43,$00,$00,$00,$00
 $4770 DEFB $00,$00,$00,$7F,$E0,$00,$FC,$FF
 $4778 DEFB $C0,$1C,$00,$00,$FB,$FE,$00,$00
 $4780 DEFB $00,$00,$00,$00,$0F,$F8,$80,$02
 $4788 DEFB $A8,$00,$07,$18,$F8,$00,$00,$00
 $4790 DEFB $00,$00,$01,$FF,$80,$00,$00,$1F
 $4798 DEFB $C7,$FF,$FB,$F8,$00,$00,$00,$00
 $47A0 DEFB $00,$00,$00,$00,$38,$00,$00,$00
 $47A8 DEFB $FF,$00,$03,$07,$8E,$00,$00,$00
 $47B0 DEFB $00,$00,$00,$00,$3F,$C3,$EF,$FF
 $47B8 DEFB $78,$00,$00,$00,$00,$00,$00,$00
 $47C0 DEFB $00,$00,$00,$03,$7F,$FF,$FF,$FF
 $47C8 DEFB $FF,$EF,$7F,$FF,$F8,$00,$00,$00
 $47D0 DEFB $00,$00,$30,$60,$FF,$00,$00,$00
 $47D8 DEFB $00,$00,$00,$01,$F0,$00,$00,$00
 $47E0 DEFB $00,$00,$7F,$FF,$FF,$FF,$FF,$FF
 $47E8 DEFB $C1,$F8,$FF,$00,$38,$0F,$00,$00
 $47F0 DEFB $00,$00,$08,$70,$00,$00,$F9,$F7
 $47F8 DEFB $8F,$FB,$DF,$7D,$E7,$FD,$F0,$00
 $4800 DEFB $00,$00,$7F,$FF,$00,$FF,$FF,$FF
 $4808 DEFB $C1,$F8,$FE,$00,$38,$17,$00,$00
 $4810 DEFB $00,$00,$07,$00,$00,$00,$FB,$EF
 $4818 DEFB $0F,$03,$DF,$7B,$CF,$FD,$F0,$00
 $4820 DEFB $00,$03,$FF,$FF,$C0,$FF,$FE,$FF
 $4828 DEFB $E6,$FC,$00,$00,$06,$00,$00,$00
 $4830 DEFB $00,$00,$27,$F6,$80,$3E,$07,$FB
 $4838 DEFB $FD,$FF,$BF,$F7,$DF,$DF,$E0,$00
 $4840 DEFB $00,$1F,$BF,$FF,$F0,$00,$08,$00
 $4848 DEFB $00,$3F,$D8,$00,$00,$00,$00,$00
 $4850 DEFB $00,$00,$02,$7D,$28,$7F,$CF,$9F
 $4858 DEFB $7F,$FF,$7B,$EF,$BF,$7F,$80,$00
 $4860 DEFB $00,$7F,$20,$00,$06,$1E,$FF,$F1
 $4868 DEFB $FE,$04,$FF,$C0,$00,$00,$00,$00
 $4870 DEFB $00,$00,$00,$27,$FF,$80,$00,$00
 $4878 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4880 DEFB $00,$01,$9E,$00,$10,$3F,$E1,$E7
 $4888 DEFB $9C,$00,$00,$00,$00,$00,$00,$00
 $4890 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4898 DEFB $00,$01,$F8,$00,$00,$00,$00,$00
 $48A0 DEFB $01,$FF,$FF,$FF,$FF,$C0,$03,$CF
 $48A8 DEFB $FC,$00,$00,$00,$00,$00,$00,$00
 $48B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $48B8 DEFB $F0,$03,$FF,$FF,$F8,$80,$00,$00
 $48C0 DEFB $03,$FF,$FF,$FF,$FF,$EF,$F0,$F0
 $48C8 DEFB $F8,$00,$00,$3F,$FF,$E0,$FC,$00
 $48D0 DEFB $00,$00,$00,$00,$00,$00,$03,$FF
 $48D8 DEFB $F0,$30,$FF,$FF,$FF,$00,$00,$00
 $48E0 DEFB $01,$FF,$FD,$BF,$C0,$7E,$F7,$84
 $48E8 DEFB $E0,$00,$00,$1F,$FF,$FF,$97,$FC
 $48F0 DEFB $00,$00,$00,$00,$00,$00,$00,$13
 $48F8 DEFB $FF,$FF,$F0,$3F,$F7,$F8,$40,$00
 $4900 DEFB $00,$00,$FF,$FF,$00,$FF,$FF,$E0
 $4908 DEFB $80,$F8,$FC,$00,$38,$7B,$00,$00
 $4910 DEFB $00,$00,$38,$F8,$00,$00,$FF,$EF
 $4918 DEFB $0F,$FB,$DF,$7B,$CF,$7D,$F0,$00
 $4920 DEFB $00,$05,$FF,$FF,$C0,$FF,$FE,$FF
 $4928 DEFB $98,$FE,$00,$00,$00,$00,$00,$00
 $4930 DEFB $00,$00,$27,$F7,$80,$7D,$F3,$F0
 $4938 DEFB $FC,$FF,$BF,$F7,$BF,$DF,$E0,$00
 $4940 DEFB $00,$1F,$BF,$FF,$F4,$00,$08,$00
 $4948 DEFB $00,$1F,$D7,$00,$00,$00,$00,$00
 $4950 DEFB $00,$00,$02,$7D,$80,$00,$00,$00
 $4958 DEFB $07,$C0,$00,$00,$00,$00,$00,$00
 $4960 DEFB $00,$7F,$20,$00,$01,$1E,$FF,$F1
 $4968 DEFB $FC,$08,$87,$00,$00,$00,$00,$00
 $4970 DEFB $00,$00,$00,$27,$FE,$00,$00,$00
 $4978 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4980 DEFB $00,$09,$FF,$00,$10,$3F,$C0,$E7
 $4988 DEFB $9C,$00,$00,$00,$00,$00,$00,$00
 $4990 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4998 DEFB $00,$03,$FC,$00,$00,$00,$00,$00
 $49A0 DEFB $01,$FF,$FF,$FF,$FF,$F0,$0C,$8F
 $49A8 DEFB $FC,$00,$00,$00,$F8,$00,$00,$00
 $49B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $49B8 DEFB $3C,$0F,$FF,$FF,$F8,$80,$00,$00
 $49C0 DEFB $03,$FF,$FF,$DF,$FF,$EF,$F0,$F0
 $49C8 DEFB $F8,$00,$00,$3F,$FF,$F1,$BE,$00
 $49D0 DEFB $00,$00,$00,$00,$00,$00,$01,$FF
 $49D8 DEFB $F8,$D8,$FF,$FF,$FF,$94,$00,$00
 $49E0 DEFB $01,$FF,$FD,$BF,$80,$80,$F7,$C4
 $49E8 DEFB $E0,$00,$00,$0F,$FF,$D7,$AF,$FE
 $49F0 DEFB $00,$00,$00,$00,$00,$00,$00,$2F
 $49F8 DEFB $FF,$37,$F4,$BF,$F7,$FF,$00,$00
 $4A00 DEFB $00,$01,$FF,$FF,$00,$FF,$FF,$DF
 $4A08 DEFB $80,$78,$F0,$00,$39,$FF,$00,$00
 $4A10 DEFB $00,$00,$C7,$F0,$00,$00,$FF,$EF
 $4A18 DEFB $0F,$FB,$9E,$7B,$CF,$79,$E0,$00
 $4A20 DEFB $00,$05,$FF,$FF,$E0,$FF,$FE,$FF
 $4A28 DEFB $00,$FF,$00,$00,$00,$00,$00,$00
 $4A30 DEFB $00,$00,$13,$FE,$40,$7D,$F7,$80
 $4A38 DEFB $7D,$F7,$BD,$F7,$BE,$1E,$00,$00
 $4A40 DEFB $00,$3F,$BF,$FF,$F6,$00,$10,$00
 $4A48 DEFB $E0,$9F,$E8,$00,$00,$00,$00,$00
 $4A50 DEFB $00,$00,$01,$3E,$90,$00,$00,$00
 $4A58 DEFB $07,$C0,$00,$00,$00,$00,$00,$00
 $4A60 DEFB $00,$7F,$20,$00,$01,$1C,$F0,$F0
 $4A68 DEFB $FC,$11,$00,$00,$00,$00,$00,$00
 $4A70 DEFB $00,$00,$00,$13,$F8,$00,$00,$00
 $4A78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4A80 DEFB $00,$19,$FF,$C0,$20,$7F,$E1,$E7
 $4A88 DEFB $2C,$00,$00,$00,$00,$00,$00,$00
 $4A90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4A98 DEFB $00,$03,$FF,$00,$01,$00,$00,$00
 $4AA0 DEFB $01,$FF,$FF,$FF,$FF,$F0,$3C,$5F
 $4AA8 DEFB $FC,$00,$00,$03,$FC,$00,$00,$00
 $4AB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4AB8 DEFB $0E,$1F,$FF,$FF,$F8,$80,$00,$00
 $4AC0 DEFB $03,$FF,$FF,$BF,$FF,$9F,$F0,$F8
 $4AC8 DEFB $F8,$00,$00,$3F,$FF,$F3,$DF,$00
 $4AD0 DEFB $00,$00,$00,$00,$00,$00,$01,$FF
 $4AD8 DEFB $F8,$DC,$FF,$FF,$FF,$A4,$00,$00
 $4AE0 DEFB $00,$FF,$FD,$7F,$01,$00,$EF,$C4
 $4AE8 DEFB $E0,$00,$00,$0F,$FE,$BB,$DF,$FF
 $4AF0 DEFB $00,$00,$00,$00,$00,$00,$00,$7F
 $4AF8 DEFB $FF,$0F,$F4,$DF,$C9,$FC,$00,$00
 $4B00 DEFB $00,$01,$FF,$FF,$00,$FF,$FF,$BE
 $4B08 DEFB $00,$78,$F0,$00,$3B,$FE,$00,$00
 $4B10 DEFB $00,$01,$3F,$87,$00,$00,$7F,$CF
 $4B18 DEFB $87,$F1,$CF,$3F,$EF,$BC,$F0,$00
 $4B20 DEFB $00,$05,$FF,$FF,$E0,$FF,$FE,$FE
 $4B28 DEFB $00,$FF,$00,$00,$00,$00,$00,$00
 $4B30 DEFB $00,$00,$13,$F9,$C0,$F8,$F7,$8F
 $4B38 DEFB $FD,$E7,$BD,$F7,$BC,$1F,$80,$00
 $4B40 DEFB $00,$3F,$BF,$FF,$F7,$80,$20,$18
 $4B48 DEFB $F8,$CF,$E0,$00,$00,$00,$00,$00
 $4B50 DEFB $00,$00,$01,$3E,$CC,$00,$00,$00
 $4B58 DEFB $07,$E0,$00,$00,$00,$00,$00,$00
 $4B60 DEFB $00,$7F,$10,$00,$02,$1C,$C0,$30
 $4B68 DEFB $FE,$01,$00,$00,$00,$00,$00,$00
 $4B70 DEFB $00,$00,$00,$11,$E0,$00,$00,$00
 $4B78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4B80 DEFB $00,$79,$FF,$F0,$20,$7F,$C2,$E7
 $4B88 DEFB $2C,$00,$00,$00,$00,$00,$00,$00
 $4B90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4B98 DEFB $00,$07,$FF,$FC,$01,$80,$00,$00
 $4BA0 DEFB $01,$FF,$FF,$FF,$FF,$E8,$C8,$3F
 $4BA8 DEFB $FC,$00,$00,$07,$FE,$00,$00,$00
 $4BB0 DEFB $00,$00,$FF,$FF,$FF,$F8,$00,$00
 $4BB8 DEFB $17,$3F,$FF,$FF,$FC,$00,$00,$00
 $4BC0 DEFB $03,$FF,$FF,$7F,$FE,$07,$F0,$F8
 $4BC8 DEFB $F8,$00,$00,$3F,$FF,$FB,$EF,$80
 $4BD0 DEFB $00,$00,$00,$00,$00,$00,$00,$FF
 $4BD8 DEFB $FC,$EF,$01,$FF,$FF,$A8,$00,$00
 $4BE0 DEFB $00,$FF,$FD,$7F,$02,$00,$ED,$CC
 $4BE8 DEFB $E0,$00,$00,$0F,$E5,$75,$EF,$FF
 $4BF0 DEFB $80,$00,$00,$00,$00,$00,$00,$7F
 $4BF8 DEFB $FE,$7F,$BB,$E1,$06,$FF,$00,$00
 $4C00 DEFB $00,$01,$FF,$FF,$80,$FF,$FF,$7E
 $4C08 DEFB $06,$78,$E0,$00,$3B,$FC,$00,$00
 $4C10 DEFB $00,$00,$5C,$38,$00,$00,$00,$00
 $4C18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4C20 DEFB $00,$0E,$FF,$FF,$E0,$FF,$FD,$FC
 $4C28 DEFB $00,$FF,$08,$00,$00,$00,$00,$00
 $4C30 DEFB $00,$00,$09,$F7,$00,$F9,$F7,$9E
 $4C38 DEFB $FD,$E7,$FD,$F7,$FC,$1F,$C0,$00
 $4C40 DEFB $00,$7F,$BF,$FF,$F7,$C0,$40,$38
 $4C48 DEFB $FC,$E7,$F0,$00,$00,$00,$00,$00
 $4C50 DEFB $00,$00,$00,$9F,$78,$00,$00,$00
 $4C58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4C60 DEFB $00,$7F,$10,$00,$05,$88,$80,$02
 $4C68 DEFB $7E,$00,$00,$00,$00,$00,$00,$00
 $4C70 DEFB $00,$00,$00,$08,$80,$00,$00,$00
 $4C78 DEFB $00,$00,$40,$00,$00,$00,$00,$00
 $4C80 DEFB $01,$FD,$FF,$FC,$20,$7F,$E0,$E7
 $4C88 DEFB $9C,$00,$00,$00,$00,$00,$00,$00
 $4C90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4C98 DEFB $00,$07,$FF,$FF,$81,$80,$00,$00
 $4CA0 DEFB $03,$FF,$FF,$FF,$FF,$EC,$27,$CF
 $4CA8 DEFB $FC,$00,$00,$0F,$FF,$00,$00,$00
 $4CB0 DEFB $00,$00,$03,$FF,$FF,$80,$00,$00
 $4CB8 DEFB $1B,$BF,$FF,$FF,$FC,$00,$00,$00
 $4CC0 DEFB $03,$FF,$FF,$7F,$F8,$03,$FE,$80
 $4CC8 DEFB $F8,$00,$00,$3F,$FF,$FD,$F7,$C0
 $4CD0 DEFB $00,$00,$00,$00,$00,$00,$00,$7C
 $4CD8 DEFB $FC,$EF,$00,$3F,$F0,$70,$00,$00
 $4CE0 DEFB $00,$7F,$FE,$FE,$04,$00,$EE,$D2
 $4CE8 DEFB $C0,$00,$00,$07,$EA,$AA,$6F,$FF
 $4CF0 DEFB $C0,$00,$00,$00,$00,$00,$00,$FF
 $4CF8 DEFB $FF,$5F,$BC,$17,$8F,$7D,$80,$00
 $4D00 DEFB $00,$03,$FF,$FF,$80,$FF,$FF,$7E
 $4D08 DEFB $06,$B8,$80,$00,$1D,$F8,$00,$00
 $4D10 DEFB $00,$00,$43,$C6,$00,$1F,$F8,$00
 $4D18 DEFB $00,$00,$3E,$03,$C0,$00,$00,$00
 $4D20 DEFB $00,$0E,$FF,$FF,$E0,$FF,$FD,$FC
 $4D28 DEFB $00,$FF,$89,$00,$00,$00,$00,$00
 $4D30 DEFB $00,$00,$09,$F6,$80,$FB,$EF,$1E
 $4D38 DEFB $FB,$EF,$FB,$EF,$FC,$8F,$C0,$00
 $4D40 DEFB $00,$7F,$BF,$FF,$F7,$C0,$80,$78
 $4D48 DEFB $FF,$79,$70,$00,$00,$00,$00,$00
 $4D50 DEFB $00,$00,$00,$9F,$66,$7F,$FF,$FF
 $4D58 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$80,$00
 $4D60 DEFB $00,$7F,$08,$00,$04,$60,$0E,$06
 $4D68 DEFB $3E,$00,$00,$00,$00,$00,$00,$00
 $4D70 DEFB $00,$00,$00,$04,$00,$00,$00,$00
 $4D78 DEFB $00,$00,$E0,$00,$00,$00,$00,$00
 $4D80 DEFB $01,$FD,$FF,$FF,$E0,$7F,$C1,$E7
 $4D88 DEFB $FC,$00,$00,$00,$00,$00,$00,$00
 $4D90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4D98 DEFB $00,$07,$FF,$FF,$C1,$80,$00,$00
 $4DA0 DEFB $03,$FF,$FF,$FF,$FF,$EF,$F0,$1F
 $4DA8 DEFB $FC,$00,$00,$1F,$FF,$80,$00,$00
 $4DB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4DB8 DEFB $0D,$BF,$FF,$FF,$FE,$00,$00,$00
 $4DC0 DEFB $03,$FF,$FE,$FF,$F0,$03,$F7,$88
 $4DC8 DEFB $F8,$00,$00,$3F,$FF,$FD,$FB,$E0
 $4DD0 DEFB $00,$00,$00,$00,$00,$00,$00,$3E
 $4DD8 DEFB $FE,$FF,$00,$1F,$E0,$FE,$00,$00
 $4DE0 DEFB $00,$7F,$FE,$F8,$04,$E0,$EB,$C2
 $4DE8 DEFB $C0,$00,$00,$00,$57,$7D,$77,$FF
 $4DF0 DEFB $C0,$00,$00,$00,$00,$00,$00,$FF
 $4DF8 DEFB $FD,$3F,$DF,$FF,$9F,$7E,$80,$00
 $4E00 DEFB $00,$03,$FF,$FF,$C0,$FF,$FF,$7E
 $4E08 DEFB $00,$B8,$80,$00,$1F,$E0,$00,$00
 $4E10 DEFB $00,$00,$0E,$3F,$00,$3F,$F8,$00
 $4E18 DEFB $00,$00,$1E,$03,$C0,$00,$00,$00
 $4E20 DEFB $00,$0F,$7F,$FF,$E0,$FF,$FB,$FC
 $4E28 DEFB $01,$7F,$92,$00,$00,$00,$00,$00
 $4E30 DEFB $00,$00,$04,$FA,$10,$FF,$EF,$1F
 $4E38 DEFB $FB,$FF,$FB,$EF,$7F,$FF,$C0,$00
 $4E40 DEFB $00,$7F,$BF,$FF,$F7,$C0,$80,$F8
 $4E48 DEFB $FF,$1A,$BC,$00,$00,$00,$00,$00
 $4E50 DEFB $00,$00,$00,$4F,$9F,$00,$00,$00
 $4E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4E60 DEFB $00,$7F,$04,$00,$10,$1F,$2B,$07
 $4E68 DEFB $3C,$00,$00,$00,$00,$00,$00,$00
 $4E70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4E78 DEFB $00,$00,$E0,$00,$00,$00,$00,$00
 $4E80 DEFB $01,$FF,$FF,$FF,$E0,$7F,$C7,$C7
 $4E88 DEFB $FC,$00,$00,$00,$00,$00,$00,$00
 $4E90 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4E98 DEFB $C0,$07,$FF,$FF,$E1,$80,$00,$00
 $4EA0 DEFB $03,$FF,$FF,$FF,$FF,$EF,$F0,$0F
 $4EA8 DEFB $FC,$00,$00,$3F,$FF,$C0,$00,$00
 $4EB0 DEFB $00,$00,$00,$00,$00,$00,$01,$FC
 $4EB8 DEFB $0D,$DF,$FF,$FF,$FF,$00,$00,$00
 $4EC0 DEFB $03,$FF,$FE,$FF,$E0,$01,$F7,$88
 $4EC8 DEFB $F0,$00,$00,$1F,$FF,$FE,$F5,$F0
 $4ED0 DEFB $00,$00,$00,$00,$00,$00,$00,$3F
 $4ED8 DEFB $FF,$7F,$06,$0F,$C0,$F8,$00,$00
 $4EE0 DEFB $00,$3F,$FE,$F0,$0D,$30,$EF,$D2
 $4EE8 DEFB $80,$00,$00,$01,$BA,$EB,$BB,$FF
 $4EF0 DEFB $E0,$00,$00,$00,$00,$00,$00,$FF
 $4EF8 DEFB $FD,$6F,$DF,$FF,$EE,$FD,$00,$00
 $4F00 DEFB $00,$03,$FF,$FF,$C0,$FF,$FF,$7F
 $4F08 DEFB $81,$1C,$00,$00,$1F,$80,$00,$00
 $4F10 DEFB $00,$00,$71,$75,$00,$3F,$C7,$BB
 $4F18 DEFB $FD,$F7,$3E,$60,$0F,$8F,$E0,$00
 $4F20 DEFB $00,$1F,$7F,$FF,$E0,$FF,$FB,$FE
 $4F28 DEFB $01,$3F,$94,$00,$00,$00,$00,$00
 $4F30 DEFB $00,$00,$04,$7B,$40,$FF,$EF,$1F
 $4F38 DEFB $FB,$FF,$73,$CF,$7F,$FF,$C0,$00
 $4F40 DEFB $00,$7F,$BF,$FF,$F7,$C0,$83,$F8
 $4F48 DEFB $FF,$23,$BF,$C0,$00,$00,$00,$00
 $4F50 DEFB $00,$00,$00,$4F,$7F,$FF,$FF,$FF
 $4F58 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$00,$00
 $4F60 DEFB $00,$7F,$0C,$00,$10,$1F,$A1,$87
 $4F68 DEFB $90,$00,$00,$00,$00,$00,$00,$00
 $4F70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $4F78 DEFB $00,$01,$F0,$00,$00,$00,$00,$00
 $4F80 DEFB $01,$FF,$FF,$FF,$F1,$FF,$83,$C7
 $4F88 DEFB $FC,$00,$00,$00,$00,$00,$00,$00
 $4F90 DEFB $00,$00,$00,$00,$00,$00,$00,$01
 $4F98 DEFB $E0,$03,$FF,$FF,$F3,$80,$00,$00
 $4FA0 DEFB $03,$FF,$FF,$FF,$FF,$EF,$F0,$0F
 $4FA8 DEFB $FC,$00,$00,$3F,$FF,$E0,$70,$00
 $4FB0 DEFB $00,$00,$00,$00,$00,$00,$03,$FF
 $4FB8 DEFB $0E,$EF,$FF,$FF,$FF,$00,$00,$00
 $4FC0 DEFB $01,$FF,$FE,$FF,$E0,$01,$F7,$88
 $4FC8 DEFB $F0,$00,$00,$1F,$FF,$FF,$6B,$F8
 $4FD0 DEFB $00,$00,$00,$00,$00,$00,$00,$1C
 $4FD8 DEFB $FF,$9F,$01,$07,$80,$FF,$80,$00
 $4FE0 DEFB $00,$3F,$FE,$E0,$11,$D0,$E9,$C2
 $4FE8 DEFB $80,$00,$00,$02,$7F,$FC,$0D,$FF
 $4FF0 DEFB $F0,$00,$00,$00,$00,$00,$00,$FF
 $4FF8 DEFB $FB,$1F,$EF,$FF,$6E,$F0,$C0,$00
 $5000 DEFB $00,$1F,$FE,$C0,$13,$60,$18,$0F
 $5008 DEFB $00,$00,$00,$05,$1F,$7F,$F6,$FF
 $5010 DEFB $F0,$00,$00,$00,$00,$00,$00,$FF
 $5018 DEFB $F7,$80,$F3,$C3,$76,$F8,$00,$00
 $5020 DEFB $00,$00,$01,$69,$AB,$FF,$3F,$FE
 $5028 DEFB $00,$07,$FF,$FF,$80,$CF,$BF,$F0
 $5030 DEFB $00,$00,$00,$00,$00,$01,$FF,$F1
 $5038 DEFB $DF,$40,$FD,$FD,$D0,$00,$00,$00
 $5040 DEFB $00,$00,$00,$01,$FF,$FF,$FE,$00
 $5048 DEFB $00,$00,$07,$FF,$FE,$FF,$FC,$86
 $5050 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5058 DEFB $C3,$FF,$FF,$E0,$C0,$1E,$00,$00
 $5060 DEFB $00,$00,$00,$10,$00,$FF,$80,$00
 $5068 DEFB $00,$00,$AA,$7F,$AB,$F1,$57,$D9
 $5070 DEFB $00,$00,$00,$00,$07,$E0,$00,$00
 $5078 DEFB $FF,$F0,$FF,$FF,$00,$00,$00,$00
 $5080 DEFB $00,$00,$00,$3F,$60,$00,$00,$00
 $5088 DEFB $5F,$FF,$00,$05,$FF,$FF,$80,$EB
 $5090 DEFB $E8,$00,$00,$00,$0F,$E0,$00,$FF
 $5098 DEFB $C0,$00,$03,$E0,$00,$00,$00,$00
 $50A0 DEFB $00,$00,$00,$78,$FF,$FF,$FC,$00
 $50A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50B0 DEFB $F8,$00,$00,$00,$0F,$80,$00,$3F
 $50B8 DEFB $FF,$80,$FF,$FF,$80,$0F,$C0,$00
 $50C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50D0 DEFB $00,$00,$00,$00,$3F,$3C,$00,$00
 $50D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $50E8 DEFB $00,$00,$00,$FC,$00,$C3,$00,$C6
 $50F0 DEFB $7C,$FC,$FC,$7C,$FC,$00,$00,$00
 $50F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5100 DEFB $00,$0F,$FE,$C0,$27,$C1,$1F,$F3
 $5108 DEFB $00,$00,$00,$0A,$7F,$7F,$FB,$FF
 $5110 DEFB $F0,$00,$00,$00,$00,$00,$00,$FF
 $5118 DEFB $F7,$C0,$FC,$3C,$75,$DE,$00,$00
 $5120 DEFB $00,$00,$00,$68,$FF,$FF,$3F,$F8
 $5128 DEFB $00,$07,$FF,$FF,$FF,$83,$BF,$F8
 $5130 DEFB $00,$00,$00,$00,$00,$01,$DF,$F8
 $5138 DEFB $3F,$80,$FE,$02,$C7,$FE,$00,$00
 $5140 DEFB $00,$00,$00,$01,$FF,$FF,$FC,$00
 $5148 DEFB $00,$00,$01,$FE,$7C,$FF,$F9,$11
 $5150 DEFB $80,$00,$00,$00,$00,$00,$00,$00
 $5158 DEFB $E0,$FF,$FF,$C1,$3F,$E6,$80,$00
 $5160 DEFB $00,$00,$00,$18,$00,$FF,$00,$00
 $5168 DEFB $00,$2A,$55,$7F,$A5,$F2,$BF,$E6
 $5170 DEFB $00,$00,$00,$00,$07,$F0,$00,$01
 $5178 DEFB $FF,$80,$7F,$FF,$00,$00,$00,$00
 $5180 DEFB $00,$00,$00,$7F,$78,$00,$00,$00
 $5188 DEFB $3F,$FF,$00,$04,$7F,$FE,$00,$E5
 $5190 DEFB $F0,$00,$00,$00,$1F,$C0,$00,$7F
 $5198 DEFB $80,$00,$07,$C0,$00,$00,$00,$00
 $51A0 DEFB $00,$00,$00,$3A,$7F,$FF,$FC,$00
 $51A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51B0 DEFB $00,$00,$00,$00,$0F,$80,$00,$00
 $51B8 DEFB $00,$01,$FF,$FF,$FE,$7F,$80,$00
 $51C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $51E8 DEFB $00,$00,$00,$FE,$00,$E7,$00,$C6
 $51F0 DEFB $FE,$FE,$FE,$FE,$FE,$00,$00,$00
 $51F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5200 DEFB $00,$07,$FE,$80,$4C,$01,$1F,$8F
 $5208 DEFB $00,$00,$00,$1C,$FF,$7F,$FC,$3F
 $5210 DEFB $F0,$00,$00,$00,$00,$00,$00,$7F
 $5218 DEFB $EF,$E0,$FF,$F8,$3B,$E7,$00,$00
 $5220 DEFB $00,$00,$00,$57,$07,$FF,$01,$E0
 $5228 DEFB $00,$07,$FF,$FF,$FF,$80,$DF,$FC
 $5230 DEFB $00,$00,$00,$00,$00,$01,$9F,$FC
 $5238 DEFB $7E,$00,$7F,$FE,$1F,$FF,$60,$00
 $5240 DEFB $00,$00,$00,$03,$FF,$FF,$F8,$00
 $5248 DEFB $00,$00,$00,$7D,$9C,$FF,$F2,$63
 $5250 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5258 DEFB $F8,$7F,$FF,$C6,$FF,$F9,$C0,$00
 $5260 DEFB $00,$00,$00,$1E,$78,$FE,$00,$00
 $5268 DEFB $01,$55,$AA,$BF,$D9,$FF,$FF,$8A
 $5270 DEFB $00,$00,$00,$00,$07,$FC,$00,$03
 $5278 DEFB $FF,$80,$3F,$FE,$00,$00,$00,$00
 $5280 DEFB $00,$00,$00,$7F,$7E,$00,$00,$00
 $5288 DEFB $3F,$FF,$00,$09,$87,$F8,$00,$ED
 $5290 DEFB $F0,$00,$00,$00,$1F,$80,$00,$3F
 $5298 DEFB $00,$00,$0F,$C0,$00,$00,$00,$00
 $52A0 DEFB $00,$00,$00,$01,$BF,$FF,$F8,$00
 $52A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52B0 DEFB $00,$00,$00,$00,$1F,$00,$00,$00
 $52B8 DEFB $00,$01,$FF,$FF,$FF,$FF,$00,$00
 $52C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $52E8 DEFB $00,$00,$00,$C6,$00,$FF,$00,$C6
 $52F0 DEFB $C6,$C6,$C6,$C6,$C6,$00,$00,$00
 $52F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5300 DEFB $00,$01,$F9,$80,$40,$03,$18,$7F
 $5308 DEFB $00,$00,$00,$0B,$FF,$7F,$E3,$BF
 $5310 DEFB $E0,$00,$00,$00,$00,$00,$1E,$7F
 $5318 DEFB $EF,$E8,$FF,$80,$3B,$F3,$80,$00
 $5320 DEFB $00,$00,$00,$2F,$07,$FF,$00,$00
 $5328 DEFB $00,$03,$FF,$FF,$FF,$E3,$2F,$FA
 $5330 DEFB $00,$00,$00,$00,$00,$01,$9F,$FF
 $5338 DEFB $7C,$F0,$4F,$EC,$7F,$FF,$B0,$00
 $5340 DEFB $00,$00,$00,$03,$FF,$FF,$F0,$00
 $5348 DEFB $00,$00,$00,$83,$E2,$FF,$F1,$9E
 $5350 DEFB $80,$00,$00,$00,$00,$00,$00,$00
 $5358 DEFB $FE,$1F,$FF,$80,$E1,$FE,$00,$00
 $5360 DEFB $00,$00,$00,$3F,$F0,$FE,$00,$00
 $5368 DEFB $0A,$AA,$7F,$FF,$EC,$FF,$FF,$55
 $5370 DEFB $80,$00,$00,$00,$07,$FF,$FC,$67
 $5378 DEFB $FF,$00,$0F,$FC,$00,$00,$00,$00
 $5380 DEFB $00,$00,$00,$7F,$7F,$E0,$00,$00
 $5388 DEFB $1F,$FF,$00,$0A,$80,$00,$00,$F2
 $5390 DEFB $E0,$00,$00,$00,$1F,$80,$00,$1C
 $5398 DEFB $00,$00,$1F,$80,$00,$00,$00,$00
 $53A0 DEFB $00,$00,$00,$00,$5F,$FF,$E0,$00
 $53A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53B0 DEFB $00,$00,$00,$00,$3E,$00,$E0,$00
 $53B8 DEFB $00,$01,$FF,$FF,$FF,$FC,$00,$00
 $53C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $53E8 DEFB $00,$00,$00,$C6,$18,$DB,$18,$FE
 $53F0 DEFB $C6,$C6,$C6,$C6,$C6,$00,$00,$00
 $53F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5400 DEFB $00,$00,$03,$00,$80,$07,$1F,$FF
 $5408 DEFB $80,$00,$00,$37,$F1,$5F,$9F,$1F
 $5410 DEFB $E0,$00,$00,$00,$00,$00,$3F,$3F
 $5418 DEFB $EF,$E8,$FF,$30,$3D,$CC,$00,$00
 $5420 DEFB $00,$00,$00,$5F,$07,$FF,$00,$00
 $5428 DEFB $00,$01,$FF,$FF,$3F,$FC,$C7,$E4
 $5430 DEFB $00,$00,$00,$00,$00,$01,$1E,$7C
 $5438 DEFB $7C,$F8,$8F,$ED,$FC,$07,$D0,$00
 $5440 DEFB $00,$00,$00,$07,$FF,$FF,$F0,$00
 $5448 DEFB $00,$00,$00,$FF,$FF,$7F,$E9,$79
 $5450 DEFB $00,$1F,$FE,$00,$00,$00,$00,$00
 $5458 DEFB $FF,$07,$FF,$87,$1E,$1F,$60,$00
 $5460 DEFB $00,$00,$00,$3F,$F0,$FC,$00,$00
 $5468 DEFB $15,$00,$80,$1F,$F3,$FF,$FE,$3A
 $5470 DEFB $40,$00,$00,$00,$07,$FF,$FF,$FF
 $5478 DEFB $FE,$00,$02,$F8,$00,$00,$00,$00
 $5480 DEFB $00,$00,$00,$1E,$FF,$E7,$F8,$00
 $5488 DEFB $0F,$FF,$00,$09,$80,$00,$00,$E5
 $5490 DEFB $40,$00,$00,$00,$1F,$80,$00,$00
 $5498 DEFB $00,$00,$3F,$80,$00,$00,$00,$00
 $54A0 DEFB $00,$00,$00,$00,$2F,$FF,$98,$00
 $54A8 DEFB $00,$00,$00,$00,$00,$00,$FF,$FF
 $54B0 DEFB $FF,$00,$00,$00,$3E,$C1,$F0,$01
 $54B8 DEFB $F0,$01,$FE,$07,$FF,$80,$00,$00
 $54C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $54E8 DEFB $00,$00,$00,$FE,$18,$C3,$18,$FE
 $54F0 DEFB $FE,$FE,$FE,$FE,$FE,$00,$00,$00
 $54F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5500 DEFB $00,$00,$03,$01,$00,$1F,$1F,$FF
 $5508 DEFB $C0,$00,$7F,$C7,$8F,$36,$7F,$0F
 $5510 DEFB $E0,$00,$7F,$FE,$00,$00,$7F,$9F
 $5518 DEFB $EF,$EE,$FE,$30,$5D,$66,$00,$00
 $5520 DEFB $00,$00,$00,$5F,$0F,$FF,$00,$00
 $5528 DEFB $00,$00,$FF,$FC,$C7,$FF,$0F,$D9
 $5530 DEFB $00,$00,$00,$00,$00,$00,$14,$F8
 $5538 DEFB $78,$FC,$0D,$2B,$E0,$00,$00,$00
 $5540 DEFB $00,$00,$00,$07,$FF,$FF,$E0,$00
 $5548 DEFB $00,$00,$00,$FF,$FF,$7F,$86,$F5
 $5550 DEFB $81,$FF,$FF,$FC,$00,$00,$00,$00
 $5558 DEFB $FF,$C0,$FC,$00,$FF,$67,$A0,$00
 $5560 DEFB $00,$00,$00,$3E,$F0,$FC,$00,$00
 $5568 DEFB $2C,$7F,$00,$0F,$DF,$FF,$F8,$17
 $5570 DEFB $A0,$00,$00,$00,$07,$FF,$FF,$FF
 $5578 DEFB $FC,$00,$00,$F8,$00,$00,$00,$00
 $5580 DEFB $00,$00,$00,$66,$FF,$CF,$F8,$00
 $5588 DEFB $03,$FF,$00,$13,$00,$00,$08,$EB
 $5590 DEFB $00,$00,$00,$00,$1F,$80,$00,$00
 $5598 DEFB $00,$00,$3F,$80,$00,$00,$00,$00
 $55A0 DEFB $00,$00,$00,$00,$17,$FF,$78,$00
 $55A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55B0 DEFB $00,$00,$00,$00,$7F,$F3,$F8,$00
 $55B8 DEFB $00,$00,$E0,$00,$7F,$00,$00,$00
 $55C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $55E8 DEFB $00,$00,$00,$FC,$00,$C3,$00,$C6
 $55F0 DEFB $FE,$CC,$CC,$FE,$FC,$00,$00,$00
 $55F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5600 DEFB $00,$00,$03,$07,$FC,$FF,$3F,$F9
 $5608 DEFB $C0,$01,$FF,$F9,$17,$68,$FF,$0F
 $5610 DEFB $C0,$00,$00,$00,$00,$00,$7F,$CF
 $5618 DEFB $EF,$DC,$FE,$01,$E9,$32,$00,$00
 $5620 DEFB $00,$00,$00,$3F,$1F,$FF,$00,$00
 $5628 DEFB $00,$00,$7F,$FF,$F9,$FF,$FF,$2C
 $5630 DEFB $00,$00,$00,$00,$00,$00,$01,$F0
 $5638 DEFB $78,$FE,$08,$06,$1F,$E0,$00,$00
 $5640 DEFB $00,$00,$00,$0F,$FF,$FF,$C0,$00
 $5648 DEFB $00,$00,$00,$FF,$FF,$7F,$69,$FF
 $5650 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5658 DEFB $FF,$F8,$00,$00,$FF,$B1,$D0,$00
 $5660 DEFB $00,$00,$00,$3E,$E0,$FC,$00,$00
 $5668 DEFB $13,$FF,$00,$07,$E7,$EF,$E0,$08
 $5670 DEFB $10,$00,$00,$00,$0F,$FF,$FF,$FF
 $5678 DEFB $F8,$00,$00,$F0,$00,$00,$00,$00
 $5680 DEFB $00,$00,$00,$79,$FF,$DF,$FC,$00
 $5688 DEFB $00,$7F,$00,$11,$00,$00,$08,$F8
 $5690 DEFB $00,$00,$00,$00,$1F,$80,$00,$00
 $5698 DEFB $00,$00,$7F,$FC,$00,$01,$80,$00
 $56A0 DEFB $00,$00,$00,$00,$08,$00,$E0,$00
 $56A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56B0 DEFB $00,$00,$00,$00,$7F,$FF,$80,$00
 $56B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $56E8 DEFB $00,$00,$00,$C0,$00,$C3,$00,$C6
 $56F0 DEFB $C6,$C6,$C6,$C6,$C0,$00,$00,$00
 $56F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5700 DEFB $00,$00,$03,$0D,$57,$FF,$3E,$07
 $5708 DEFB $C0,$03,$FF,$FE,$19,$5F,$7F,$07
 $5710 DEFB $80,$3F,$FF,$FC,$00,$00,$FF,$E3
 $5718 DEFB $DF,$D8,$FF,$02,$F0,$10,$00,$00
 $5720 DEFB $00,$00,$00,$1E,$7F,$FF,$00,$00
 $5728 DEFB $00,$00,$1F,$FF,$FE,$FF,$FE,$43
 $5730 DEFB $00,$00,$00,$00,$00,$00,$03,$C0
 $5738 DEFB $3C,$FF,$00,$0D,$FF,$F8,$00,$00
 $5740 DEFB $00,$00,$00,$0F,$FF,$FF,$C0,$00
 $5748 DEFB $00,$00,$00,$FF,$93,$FC,$E3,$DC
 $5750 DEFB $80,$00,$00,$00,$03,$80,$00,$C0
 $5758 DEFB $FF,$FC,$00,$00,$00,$00,$00,$00
 $5760 DEFB $00,$00,$00,$3E,$E0,$FC,$00,$00
 $5768 DEFB $2F,$FF,$00,$03,$F8,$1F,$C0,$28
 $5770 DEFB $C8,$00,$00,$00,$0F,$F0,$0F,$FF
 $5778 DEFB $E0,$00,$00,$F0,$00,$00,$00,$00
 $5780 DEFB $00,$00,$00,$7A,$FF,$FF,$FC,$00
 $5788 DEFB $00,$00,$00,$13,$00,$00,$08,$00
 $5790 DEFB $00,$00,$00,$00,$1F,$80,$00,$00
 $5798 DEFB $00,$00,$7F,$FE,$00,$03,$C0,$00
 $57A0 DEFB $00,$00,$00,$00,$07,$FF,$80,$00
 $57A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57B0 DEFB $00,$00,$00,$00,$7F,$FE,$00,$00
 $57B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $57E8 DEFB $00,$00,$00,$C0,$00,$C3,$00,$C6
 $57F0 DEFB $C6,$C6,$C6,$C6,$C0,$00,$00,$00
 $57F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5800 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5808 DEFB $5F,$5D,$5F,$5F,$5F,$5F,$5F,$5F
 $5810 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5818 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5820 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5828 DEFB $5A,$5D,$5D,$5D,$5F,$5F,$5F,$5F
 $5830 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5838 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5840 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5A
 $5848 DEFB $5A,$5D,$5D,$5D,$5E,$5F,$5F,$5F
 $5850 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5858 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5860 DEFB $5F,$5F,$5F,$5F,$5F,$5E,$5E,$5F
 $5868 DEFB $5F,$5D,$5D,$5D,$5F,$5F,$5F,$5F
 $5870 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5878 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5880 DEFB $5F,$5F,$5F,$5F,$5E,$5E,$5E,$5F
 $5888 DEFB $5F,$5D,$58,$5E,$5E,$5F,$5F,$5F
 $5890 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5898 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $58A0 DEFB $5F,$5F,$5F,$5F,$5E,$47,$47,$47
 $58A8 DEFB $58,$5F,$58,$46,$5E,$5F,$5F,$5F
 $58B0 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $58B8 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $58C0 DEFB $5F,$5F,$5D,$5D,$58,$78,$78,$78
 $58C8 DEFB $78,$58,$5D,$70,$5E,$5F,$5F,$5F
 $58D0 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $58D8 DEFB $5F,$5F,$5F,$58,$58,$58,$58,$5F
 $58E0 DEFB $5F,$5F,$5D,$5D,$78,$78,$78,$78
 $58E8 DEFB $78,$68,$5D,$5D,$59,$59,$5F,$5F
 $58F0 DEFB $5F,$5F,$5F,$59,$5F,$5F,$58,$58
 $58F8 DEFB $58,$58,$58,$58,$58,$58,$58,$5A
 $5900 DEFB $5F,$5D,$5D,$5D,$45,$78,$78,$78
 $5908 DEFB $F8,$68,$5D,$5F,$59,$59,$5F,$5F
 $5910 DEFB $5F,$59,$59,$59,$5D,$58,$58,$58
 $5918 DEFB $58,$58,$58,$58,$58,$58,$58,$5F
 $5920 DEFB $5F,$5D,$5D,$5D,$45,$78,$78,$78
 $5928 DEFB $78,$6F,$5F,$5F,$59,$5F,$5F,$5F
 $5930 DEFB $5F,$5A,$59,$59,$59,$58,$58,$58
 $5938 DEFB $58,$58,$58,$58,$58,$58,$58,$5F
 $5940 DEFB $5F,$5D,$5D,$5D,$45,$45,$45,$45
 $5948 DEFB $7D,$5F,$5F,$58,$5F,$5F,$5F,$5F
 $5950 DEFB $5F,$5F,$59,$59,$59,$58,$58,$58
 $5958 DEFB $58,$58,$58,$58,$58,$58,$58,$5F
 $5960 DEFB $5D,$5D,$6A,$6A,$6A,$68,$75,$75
 $5968 DEFB $5D,$5D,$5F,$58,$5F,$5F,$5F,$5F
 $5970 DEFB $5F,$5F,$59,$59,$59,$59,$5F,$5F
 $5978 DEFB $5F,$5C,$5C,$5F,$5F,$5F,$5F,$5F
 $5980 DEFB $5A,$6A,$6A,$6A,$6A,$68,$70,$72
 $5988 DEFB $5A,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5990 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5E
 $5998 DEFB $5E,$5C,$5C,$5C,$5C,$5E,$5F,$5F
 $59A0 DEFB $5A,$5A,$6A,$5A,$5A,$42,$72,$72
 $59A8 DEFB $5A,$5A,$5F,$59,$59,$59,$59,$5F
 $59B0 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5C,$5C
 $59B8 DEFB $5E,$5C,$5C,$5C,$74,$5E,$5F,$5F
 $59C0 DEFB $5A,$5A,$42,$42,$42,$42,$72,$56
 $59C8 DEFB $5A,$5A,$5F,$59,$59,$59,$59,$59
 $59D0 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5C,$5C
 $59D8 DEFB $74,$66,$74,$74,$74,$5F,$5F,$5F
 $59E0 DEFB $5A,$5A,$42,$42,$42,$42,$72,$56
 $59E8 DEFB $5A,$5F,$59,$59,$79,$79,$71,$59
 $59F0 DEFB $59,$5F,$5F,$5F,$5F,$5F,$5F,$5C
 $59F8 DEFB $44,$67,$46,$46,$46,$5F,$5F,$5F
 $5A00 DEFB $5F,$5A,$5A,$42,$42,$42,$56,$46
 $5A08 DEFB $5E,$5E,$5E,$5E,$46,$46,$46,$71
 $5A10 DEFB $59,$5F,$5F,$5F,$5F,$5F,$5C,$5C
 $5A18 DEFB $44,$7C,$46,$46,$46,$5F,$5F,$5F
 $5A20 DEFB $5F,$5F,$5A,$58,$42,$5A,$56,$5E
 $5A28 DEFB $5E,$5E,$5E,$5E,$46,$46,$46,$4E
 $5A30 DEFB $5E,$5F,$5F,$5F,$5F,$5C,$5C,$44
 $5A38 DEFB $44,$60,$5F,$5F,$5E,$5E,$5E,$5F
 $5A40 DEFB $5F,$5F,$5F,$5A,$5A,$5A,$5A,$5F
 $5A48 DEFB $5F,$5F,$5E,$46,$46,$46,$46,$46
 $5A50 DEFB $5E,$5F,$5F,$5F,$5E,$5E,$5F,$43
 $5A58 DEFB $60,$60,$60,$70,$5E,$5E,$5E,$5F
 $5A60 DEFB $5F,$5F,$58,$58,$50,$5A,$5A,$5F
 $5A68 DEFB $58,$58,$43,$46,$46,$46,$46,$46
 $5A70 DEFB $58,$5F,$5F,$5F,$5E,$5E,$5E,$58
 $5A78 DEFB $58,$58,$5C,$58,$5F,$5F,$5F,$5F
 $5A80 DEFB $5F,$5F,$58,$58,$50,$50,$58,$58
 $5A88 DEFB $58,$58,$43,$43,$46,$46,$46,$58
 $5A90 DEFB $58,$5F,$5F,$5F,$5E,$5E,$58,$58
 $5A98 DEFB $58,$5E,$5E,$5E,$5E,$5E,$5E,$5F
 $5AA0 DEFB $5F,$5F,$58,$58,$58,$58,$58,$5F
 $5AA8 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5AB0 DEFB $5F,$5F,$5F,$5F,$5E,$5E,$5E,$5F
 $5AB8 DEFB $5F,$5E,$5E,$5E,$5E,$5E,$5E,$5F
 $5AC0 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5AC8 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5AD0 DEFB $5F,$5F,$5F,$5F,$5E,$5E,$5F,$5F
 $5AD8 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5AE0 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F
 $5AE8 DEFB $5F,$5F,$5F,$5D,$5D,$5D,$5D,$5D
 $5AF0 DEFB $5D,$5D,$5D,$5D,$5D,$5F,$5F,$5F
 $5AF8 DEFB $5F,$5F,$5F,$5F,$5F,$5F,$5F,$5F

; Not used
u$5B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B58 DEFB $00,$00,$00

; IM2 vector jump
;
; This routine is called by the IM2 vector jump at #R$C700. The specific code
; changes throughout the game, depending on what should happen at which point.
c$5B5B NOP           ;
 $5B5C NOP           ;
 $5B5D NOP           ;

; Unused
u$5B5E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B66 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B6E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B76 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B7E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B86 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B8E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B96 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B9E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BA6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BAE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BB6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BBE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BC6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BCE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BD6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BDE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BE6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BEE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BF6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BFE DEFB $00,$00,$FF,$00,$1E,$36,$FF,$00
 $5C06 DEFB $23,$0D,$0D,$23,$05,$00,$00,$00
 $5C0E DEFB $00,$00,$01,$00,$06,$00,$0B,$00
 $5C16 DEFB $01,$00,$01,$00,$06,$00,$10,$00
 $5C1E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C26 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C2E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C36 DEFB $00,$3C,$40,$00,$FF,$CD,$00,$FC
 $5C3E DEFB $5F,$FC,$5F,$00,$FE,$FF,$FF,$FE
 $5C46 DEFB $FF,$03,$07,$00,$00,$CB,$5C,$CB
 $5C4E DEFB $5C,$B6,$5C,$BB,$5C,$CB,$5C,$01
 $5C56 DEFB $5D,$CA,$5C,$E5,$5C,$FA,$5C,$00
 $5C5E DEFB $5D,$02,$00,$02,$5D,$02,$5D,$02
 $5C66 DEFB $5D,$2D,$92,$5C,$00,$02,$00,$00
 $5C6E DEFB $FE,$FF,$02,$00,$66,$CC,$B6,$1A

; Pseudo-random store for crushers
;
; Used by the routine in #R$FD9B.
g$5C76 DEFW $0000

; Unused
u$5C78 DEFB $17,$4D,$00

; Current x co-ordinate
g$5C7B DEFB $58

; Current y co-ordinate
g$5C7C DEFB $FF

; Abide With Me tune data
;
; The first word is the length, the second is the frequency
; When both are 0 (or the angel reaches the top of the screen), the tune ends
w$5C7D DEFW $0149,$052F
 $5C81 DEFW $00A4,$052F
 $5C85 DEFW $0092,$05D2
 $5C89 DEFW $0105,$0688
 $5C8D DEFW $0188,$045C
 $5C91 DEFW $00DC,$03E2
 $5C95 DEFW $00C4,$045C
 $5C99 DEFW $00C4,$045C
 $5C9D DEFW $00AE,$04E5
 $5CA1 DEFW $0293,$052F
 $5CA5 DEFW $0149,$052F
 $5CA9 DEFW $00AE,$04E5
 $5CAD DEFW $00C4,$045C
 $5CB1 DEFW $01B8,$03E2
 $5CB5 DEFW $0188,$045C
 $5CB9 DEFW $00AE,$04E5
 $5CBD DEFW $0092,$05D2
 $5CC1 DEFW $00A4,$052F
 $5CC5 DEFW $00B8,$049E
 $5CC9 DEFW $0310,$045C
 $5CCD DEFW $0149,$052F
 $5CD1 DEFW $00A4,$052F
 $5CD5 DEFW $0092,$05D2
 $5CD9 DEFW $0105,$0088
 $5CDD DEFW $0000,$0000

; Game won message
;
; OUR GALLANT MOLES / COMPLETED THE TASK / THROUGH PICKETS THICK / HIS LUCK DID
; LAST
; .
; THE FALLING FLOORS / DID NOT DISUADE / OUR HERO MONTYS / TRAIL WAS MADE
; .
; TO ARTHURS CASTLE / THE FINAL TEST / BRAVE MONTYS THERE / TO PUT TO REST
; .
; THE MAN WHO DARED / TO STOP THE COAL / TO WARM THE FIRE / OF MONTY MOLE
; .
; ONE FINAL HAIRSPRAY / TO AVOID / WATCH OUR ARTHUR / HE IS ANNOYED
; .
; OUR MOLE HAS ARTHUR / NOW HE IS STOPPED / MONTY ESCAPES / OH NO HE IS COPPED
; .
; CRIME DOES NOT PAY / MY LITTLE MOLE / IT WILL NOT DO / TO STEAL THE COAL
; .
; THE JUDGE HE SAYS / LOCK HIM AWAY / FOR FIVE WHOLE YEARS / THAT START TODAY
; .
; MONTY STUNNED / HIS MOUTH AGAPE / AND NOW WHO DARES / PLAN HIS ESCAPE
b$5CE1 DEFB $0F,$15,$12,$00,$07,$01,$0C,$0C
 $5CE9 DEFB $01,$0E,$14,$00,$0D,$0F,$0C,$05
 $5CF1 DEFB $13,$FF,$03,$0F,$0D,$10,$0C,$05
 $5CF9 DEFB $14,$05,$04,$00,$14,$08,$05,$00
 $5D01 DEFB $14,$01,$13,$0B,$FF,$14,$08,$12
 $5D09 DEFB $0F,$15,$07,$08,$00,$10,$09,$03
 $5D11 DEFB $0B,$05,$14,$13,$00,$14,$08,$09
 $5D19 DEFB $03,$0B,$FF,$08,$09,$13,$00,$0C
 $5D21 DEFB $15,$03,$0B,$00,$04,$09,$04,$00
 $5D29 DEFB $0C,$01,$13,$14,$FF,$14,$08,$05
 $5D31 DEFB $00,$06,$01,$0C,$0C,$09,$0E,$07
 $5D39 DEFB $00,$06,$0C,$0F,$0F,$12,$13,$FF
 $5D41 DEFB $04,$09,$04,$00,$0E,$0F,$14,$00
 $5D49 DEFB $04,$09,$13,$13,$15,$01,$04,$05
 $5D51 DEFB $FF,$0F,$15,$12,$00,$08,$05,$12
 $5D59 DEFB $0F,$00,$0D,$0F,$0E,$14,$19,$13
 $5D61 DEFB $FF,$14,$12,$01,$09,$0C,$00,$17
 $5D69 DEFB $01,$13,$00,$0D,$01,$04,$05,$FF
 $5D71 DEFB $14,$0F,$00,$01,$12,$14,$08,$15
 $5D79 DEFB $12,$13,$00,$03,$01,$13,$14,$0C
 $5D81 DEFB $05,$FF,$14,$08,$05,$00,$06,$09
 $5D89 DEFB $0E,$01,$0C,$00,$14,$05,$13,$14
 $5D91 DEFB $FF,$02,$12,$01,$16,$05,$00,$0D
 $5D99 DEFB $0F,$0E,$14,$19,$13,$00,$14,$08
 $5DA1 DEFB $05,$12,$05,$FF,$14,$0F,$00,$10
 $5DA9 DEFB $15,$14,$00,$14,$0F,$00,$12,$05
 $5DB1 DEFB $13,$14,$FF,$14,$08,$05,$00,$0D
 $5DB9 DEFB $01,$0E,$00,$17,$08,$0F,$00,$04
 $5DC1 DEFB $01,$12,$05,$04,$FF,$14,$0F,$00
 $5DC9 DEFB $13,$14,$0F,$10,$00,$14,$08,$05
 $5DD1 DEFB $00,$03,$0F,$01,$0C,$FF,$14,$0F
 $5DD9 DEFB $00,$17,$01,$12,$0D,$00,$14,$08
 $5DE1 DEFB $05,$00,$06,$09,$12,$05,$FF,$0F
 $5DE9 DEFB $06,$00,$0D,$0F,$0E,$14,$19,$00
 $5DF1 DEFB $0D,$0F,$0C,$05,$FF,$0F,$0E,$05
 $5DF9 DEFB $00,$06,$09,$0E,$01,$0C,$00,$08
 $5E01 DEFB $01,$09,$12,$13,$10,$12,$01,$19
 $5E09 DEFB $FF,$14,$0F,$00,$01,$16,$0F,$09
 $5E11 DEFB $04,$FF,$17,$01,$14,$03,$08,$00
 $5E19 DEFB $0F,$15,$14,$00,$01,$12,$14,$08
 $5E21 DEFB $15,$12,$FF,$08,$05,$00,$09,$13
 $5E29 DEFB $00,$01,$0E,$0E,$0F,$19,$05,$04
 $5E31 DEFB $FF,$0F,$15,$12,$00,$0D,$0F,$0C
 $5E39 DEFB $05,$00,$08,$01,$13,$00,$01,$12
 $5E41 DEFB $14,$08,$15,$12,$FF,$0E,$0F,$17
 $5E49 DEFB $00,$08,$05,$00,$09,$13,$00,$14
 $5E51 DEFB $0F,$10,$10,$05,$04,$FF,$0D,$0F
 $5E59 DEFB $0E,$14,$19,$00,$05,$13,$03,$01
 $5E61 DEFB $10,$05,$13,$FF,$0F,$08,$00,$0E
 $5E69 DEFB $0F,$00,$00,$08,$05,$00,$09,$13
 $5E71 DEFB $00,$03,$0F,$10,$10,$05,$04,$FF
 $5E79 DEFB $03,$12,$09,$0D,$05,$00,$04,$0F
 $5E81 DEFB $05,$13,$00,$0E,$0F,$14,$00,$10
 $5E89 DEFB $01,$19,$FF,$0D,$19,$00,$0C,$09
 $5E91 DEFB $14,$14,$0C,$05,$00,$0D,$0F,$0C
 $5E99 DEFB $05,$FF,$09,$14,$00,$17,$09,$0C
 $5EA1 DEFB $0C,$00,$0E,$0F,$14,$00,$04,$0F
 $5EA9 DEFB $FF,$14,$0F,$00,$13,$14,$05,$01
 $5EB1 DEFB $0C,$00,$14,$08,$05,$00,$03,$0F
 $5EB9 DEFB $01,$0C,$FF,$14,$08,$05,$00,$0A
 $5EC1 DEFB $15,$04,$07,$05,$00,$08,$05,$00
 $5EC9 DEFB $13,$01,$19,$13,$FF,$0C,$0F,$03
 $5ED1 DEFB $0B,$00,$08,$09,$0D,$00,$01,$17
 $5ED9 DEFB $01,$19,$FF,$06,$0F,$12,$00,$06
 $5EE1 DEFB $09,$16,$05,$00,$17,$08,$0F,$0C
 $5EE9 DEFB $05,$00,$19,$05,$01,$12,$13,$FF
 $5EF1 DEFB $14,$08,$01,$14,$00,$13,$14,$01
 $5EF9 DEFB $12,$14,$00,$14,$0F,$04,$01,$19
 $5F01 DEFB $FF,$0D,$0F,$0E,$14,$19,$00,$13
 $5F09 DEFB $14,$15,$0E,$0E,$05,$04,$FF,$08
 $5F11 DEFB $09,$13,$00,$0D,$0F,$15,$14,$08
 $5F19 DEFB $00,$01,$07,$01,$10,$05,$FF,$01
 $5F21 DEFB $0E,$04,$00,$0E,$0F,$17,$00,$17
 $5F29 DEFB $08,$0F,$00,$04,$01,$12,$05,$13
 $5F31 DEFB $FF,$10,$0C,$01,$0E,$00,$08,$09
 $5F39 DEFB $13,$00,$05,$13,$03,$01,$10,$05
 $5F41 DEFB $FF,$FE

; Hidden message
;
; "  BY IAN"
b$5F43 DEFB $00,$00,$02,$19,$00,$09,$01,$0E
 $5F4B DEFB $FF,$FE

i$5F4D

; Bucket
;
; #GRAFIXSTR($6000)(Bucket)
b$6000 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6008 DEFB $00,$00,$00,$C0,$07,$FC,$0B,$FE
 $6010 DEFB $0B,$FD,$0C,$FD,$0F,$02,$0F,$FC
 $6018 DEFB $0F,$FC,$0F,$FC,$07,$F8,$07,$F8
 $6020 DEFB $00,$00,$00,$00,$00,$C0,$01,$20
 $6028 DEFB $00,$C0,$00,$C0,$07,$FC,$0B,$FE
 $6030 DEFB $0B,$FD,$0C,$FD,$0F,$02,$0F,$FC
 $6038 DEFB $0F,$FC,$0F,$FC,$07,$F8,$07,$F8
 $6040 DEFB $00,$00,$01,$40,$02,$D0,$00,$C0
 $6048 DEFB $00,$00,$00,$00,$07,$FC,$0B,$FE
 $6050 DEFB $0B,$FD,$0C,$FD,$0F,$02,$0F,$FC
 $6058 DEFB $0F,$FC,$0F,$FC,$07,$F8,$07,$F8
 $6060 DEFB $00,$00,$00,$00,$00,$20,$00,$00
 $6068 DEFB $02,$10,$04,$00,$07,$FC,$0B,$FE
 $6070 DEFB $0B,$FD,$0C,$FD,$0F,$02,$0F,$FC
 $6078 DEFB $0F,$FC,$0F,$FC,$07,$F8,$07,$F8

; Miner
;
; ##GRAFIXDHSTR($6080)(Miner)
b$6080 DEFB $07,$C8,$07,$F8,$0F,$E8,$0F,$80
 $6088 DEFB $00,$60,$07,$E0,$07,$B0,$07,$F0
 $6090 DEFB $03,$C0,$1B,$E0,$7C,$60,$47,$80
 $6098 DEFB $5B,$F0,$5B,$F0,$5D,$F8,$6D,$F8
 $60A0 DEFB $07,$C8,$07,$F8,$0F,$E8,$0F,$80
 $60A8 DEFB $00,$60,$07,$E0,$07,$B0,$07,$F0
 $60B0 DEFB $03,$C0,$1B,$E0,$7C,$60,$47,$80
 $60B8 DEFB $5B,$F0,$5D,$F0,$6E,$F8,$77,$78
 $60C0 DEFB $07,$C8,$07,$F8,$0F,$E8,$0F,$80
 $60C8 DEFB $00,$60,$07,$E0,$07,$B0,$07,$F0
 $60D0 DEFB $03,$C0,$1B,$E0,$7C,$60,$47,$80
 $60D8 DEFB $5B,$F0,$5B,$F0,$5D,$F8,$6D,$F8
 $60E0 DEFB $07,$C8,$07,$F8,$0F,$E8,$0F,$80
 $60E8 DEFB $00,$60,$07,$E0,$07,$B0,$07,$F0
 $60F0 DEFB $03,$C0,$1B,$E0,$7C,$60,$47,$80
 $60F8 DEFB $5B,$F0,$5B,$B0,$5D,$58,$6C,$E8
 $6100 DEFB $2E,$8C,$37,$2E,$3B,$EF,$3C,$1F
 $6108 DEFB $1F,$FF,$00,$3E,$1F,$DE,$0F,$E0
 $6110 DEFB $03,$F0,$04,$F0,$06,$E0,$01,$C0
 $6118 DEFB $07,$80,$07,$60,$03,$F0,$01,$F0
 $6120 DEFB $3B,$A4,$3D,$D6,$3E,$77,$3F,$87
 $6128 DEFB $1F,$FF,$00,$3E,$1F,$DE,$0F,$E0
 $6130 DEFB $03,$F0,$0C,$F0,$1E,$78,$1C,$78
 $6138 DEFB $38,$70,$70,$76,$3C,$FF,$1C,$FF
 $6140 DEFB $2E,$8C,$37,$6E,$3B,$EF,$3C,$0F
 $6148 DEFB $1F,$FF,$00,$3E,$1F,$DE,$0F,$C0
 $6150 DEFB $07,$D0,$07,$D8,$07,$B8,$03,$B0
 $6158 DEFB $03,$00,$03,$60,$07,$F0,$07,$F0
 $6160 DEFB $2F,$EC,$37,$DE,$38,$3F,$3F,$FF
 $6168 DEFB $1F,$FF,$00,$3E,$1F,$DE,$0F,$C0
 $6170 DEFB $0F,$A0,$0F,$70,$1E,$78,$1C,$38
 $6178 DEFB $38,$30,$76,$36,$3F,$3F,$1F,$3F

; Dog
;
; #GRAFIXSTR($6180)(Dog)
b$6180 DEFB $07,$C1,$3F,$E1,$7E,$E3,$7F,$E3
 $6188 DEFB $7F,$E3,$3F,$E3,$03,$D3,$00,$33
 $6190 DEFB $03,$FB,$07,$FB,$07,$FD,$07,$FD
 $6198 DEFB $0F,$FE,$0F,$0E,$1E,$FE,$1D,$FC
 $61A0 DEFB $07,$C0,$3F,$E4,$7E,$E6,$7F,$E3
 $61A8 DEFB $7F,$E3,$0F,$E3,$3B,$D3,$00,$33
 $61B0 DEFB $03,$FB,$07,$FB,$07,$FD,$07,$FD
 $61B8 DEFB $0F,$FE,$0F,$0E,$1E,$FE,$1D,$FC
 $61C0 DEFB $07,$C0,$3F,$E4,$7E,$E6,$7F,$E3
 $61C8 DEFB $7F,$E3,$07,$E3,$0F,$D3,$18,$33
 $61D0 DEFB $03,$FB,$07,$FB,$07,$FD,$07,$FD
 $61D8 DEFB $0F,$FE,$0F,$0E,$1E,$FE,$1D,$FC
 $61E0 DEFB $07,$C0,$3F,$E4,$7E,$E6,$7F,$E3
 $61E8 DEFB $7F,$E3,$0F,$E3,$3B,$D3,$00,$33
 $61F0 DEFB $03,$FB,$07,$FB,$07,$FD,$07,$FD
 $61F8 DEFB $0F,$FE,$0F,$0E,$1E,$FE,$1D,$FC

; Squirrel L
;
; #GRAFIXSTR($6200)(Squirrel_L)
b$6200 DEFB $00,$10,$3C,$18,$7E,$3E,$7E,$FB
 $6208 DEFB $7E,$FF,$7D,$FE,$7D,$F8,$73,$F8
 $6210 DEFB $2B,$FC,$1B,$FC,$3B,$E0,$7F,$E0
 $6218 DEFB $7F,$C0,$7D,$F0,$7B,$FE,$30,$1F
 $6220 DEFB $00,$00,$00,$10,$3C,$18,$7E,$3E
 $6228 DEFB $7E,$FB,$7E,$FF,$7D,$FE,$7D,$F8
 $6230 DEFB $73,$F8,$2B,$F0,$1B,$FC,$3B,$EC
 $6238 DEFB $7F,$E0,$7F,$C0,$7D,$FE,$3B,$FF
 $6240 DEFB $00,$00,$00,$10,$00,$18,$3C,$3E
 $6248 DEFB $7E,$FB,$7E,$FF,$7E,$FE,$7E,$F8
 $6250 DEFB $7D,$F8,$7D,$F0,$73,$F8,$2B,$F8
 $6258 DEFB $1F,$E0,$3F,$CE,$7D,$FF,$3B,$F8
 $6260 DEFB $00,$00,$00,$10,$3C,$18,$7E,$3E
 $6268 DEFB $7E,$FB,$7E,$FF,$7D,$FE,$7D,$F8
 $6270 DEFB $73,$F8,$2B,$F0,$1B,$FC,$3B,$EC
 $6278 DEFB $7F,$E0,$7F,$C0,$7D,$FE,$3B,$FF

; Squirrel R
;
; #GRAFIXSTR($6280)(Squirrel_R)
b$6280 DEFB $08,$00,$18,$3C,$7C,$7E,$DF,$7E
 $6288 DEFB $FF,$7E,$7F,$BE,$1F,$BE,$DF,$CE
 $6290 DEFB $BF,$D4,$BF,$D8,$C7,$DC,$77,$FE
 $6298 DEFB $73,$FE,$0F,$BE,$7F,$DE,$F8,$0C
 $62A0 DEFB $00,$00,$08,$00,$18,$3C,$7C,$7E
 $62A8 DEFB $DF,$7E,$FF,$7E,$7F,$3E,$9F,$BE
 $62B0 DEFB $DF,$CE,$BF,$D4,$B7,$D8,$47,$DC
 $62B8 DEFB $73,$FE,$0F,$FE,$7F,$BE,$FF,$DC
 $62C0 DEFB $00,$00,$08,$00,$18,$00,$7C,$3C
 $62C8 DEFB $DF,$7E,$FF,$7E,$7F,$7E,$9F,$7E
 $62D0 DEFB $DF,$BE,$9F,$BE,$BF,$CE,$7F,$D4
 $62D8 DEFB $47,$F8,$73,$FC,$FF,$BE,$1F,$DC
 $62E0 DEFB $00,$00,$08,$00,$18,$3C,$7C,$7E
 $62E8 DEFB $DF,$7E,$FF,$7E,$7F,$3E,$9F,$BE
 $62F0 DEFB $DF,$CE,$BF,$D4,$B7,$D8,$47,$DC
 $62F8 DEFB $73,$FE,$0F,$FE,$7F,$BE,$FF,$DC

; Nut
;
; #GRAFIXSTR($6300)(Nut)
b$6300 DEFB $00,$00,$00,$00,$00,$00,$00,$60
 $6308 DEFB $00,$80,$03,$C0,$0F,$F0,$1F,$78
 $6310 DEFB $14,$98,$0B,$E0,$1F,$F8,$1F,$F8
 $6318 DEFB $0F,$F0,$0F,$F0,$07,$E0,$03,$C0
 $6320 DEFB $00,$00,$00,$00,$00,$30,$00,$40
 $6328 DEFB $04,$60,$1E,$38,$3E,$3C,$28,$0C
 $6330 DEFB $00,$40,$14,$70,$3C,$7C,$3E,$3C
 $6338 DEFB $1F,$18,$1F,$18,$0E,$30,$06,$20
 $6340 DEFB $00,$00,$00,$18,$00,$20,$08,$30
 $6348 DEFB $3C,$1C,$7C,$1E,$50,$06,$00,$00
 $6350 DEFB $14,$40,$3C,$70,$34,$66,$10,$26
 $6358 DEFB $16,$0C,$0E,$0C,$1C,$18,$0C,$10
 $6360 DEFB $00,$30,$00,$40,$00,$60,$40,$00
 $6368 DEFB $E6,$02,$22,$03,$00,$06,$00,$00
 $6370 DEFB $14,$40,$04,$20,$64,$61,$20,$03
 $6378 DEFB $26,$00,$0E,$04,$00,$0E,$00,$00

; Police helmet alien thingy
;
; #GRAFIXSTR($6380)(Helmet)
b$6380 DEFB $00,$00,$01,$80,$03,$C0,$03,$C0
 $6388 DEFB $07,$E0,$0F,$E0,$0B,$F0,$15,$F8
 $6390 DEFB $15,$F8,$11,$F8,$1F,$F8,$00,$78
 $6398 DEFB $1F,$FC,$3F,$FE,$0F,$FC,$00,$00
 $63A0 DEFB $00,$00,$01,$80,$02,$C0,$02,$C0
 $63A8 DEFB $07,$E0,$0F,$E0,$0B,$F0,$15,$F8
 $63B0 DEFB $15,$F8,$11,$F8,$1F,$F8,$00,$78
 $63B8 DEFB $1F,$FC,$3F,$FE,$0F,$FC,$00,$00
 $63C0 DEFB $00,$00,$49,$96,$6A,$54,$5A,$56
 $63C8 DEFB $4F,$E0,$0F,$E0,$0B,$F0,$15,$F8
 $63D0 DEFB $15,$F8,$11,$F8,$1F,$F8,$00,$78
 $63D8 DEFB $1F,$FC,$3F,$FE,$0F,$FC,$00,$00
 $63E0 DEFB $00,$00,$01,$80,$03,$40,$03,$40
 $63E8 DEFB $07,$E0,$0F,$E0,$0B,$F0,$15,$F8
 $63F0 DEFB $15,$F8,$11,$F8,$1F,$F8,$00,$78
 $63F8 DEFB $1F,$FC,$3F,$FE,$0F,$FC,$00,$00

; Candle
;
; #GRAFIXSTR($6400)(Candle)
b$6400 DEFB $00,$00,$00,$80,$01,$C0,$03,$E0
 $6408 DEFB $06,$60,$06,$60,$02,$C0,$00,$B0
 $6410 DEFB $0F,$78,$1F,$D8,$11,$A8,$0E,$D0
 $6418 DEFB $0E,$D0,$0F,$30,$0F,$F0,$00,$00
 $6420 DEFB $00,$00,$00,$00,$01,$80,$03,$C0
 $6428 DEFB $06,$C0,$06,$60,$02,$C0,$00,$B0
 $6430 DEFB $0F,$78,$1F,$D8,$11,$A8,$0E,$D0
 $6438 DEFB $0E,$B0,$0E,$D0,$0F,$30,$00,$00
 $6440 DEFB $00,$00,$03,$00,$03,$80,$07,$C0
 $6448 DEFB $0C,$C0,$0C,$C0,$06,$C0,$00,$B0
 $6450 DEFB $0F,$78,$1F,$D8,$11,$A8,$0E,$70
 $6458 DEFB $0F,$F0,$0F,$30,$0E,$D0,$00,$00
 $6460 DEFB $00,$00,$00,$00,$01,$80,$03,$C0
 $6468 DEFB $06,$C0,$04,$C0,$02,$80,$00,$B0
 $6470 DEFB $0F,$78,$1F,$D8,$11,$A8,$0E,$D0
 $6478 DEFB $0F,$30,$0F,$F0,$0F,$30,$00,$00

; Bat
;
; #GRAFIXSTR($6480)(Bat)
b$6480 DEFB $00,$00,$30,$0C,$48,$12,$45,$A2
 $6488 DEFB $53,$CA,$6D,$B6,$57,$EA,$6F,$F6
 $6490 DEFB $5C,$3A,$77,$EE,$53,$CA,$60,$06
 $6498 DEFB $60,$06,$40,$02,$40,$02,$00,$00
 $64A0 DEFB $00,$00,$08,$10,$14,$28,$1D,$B8
 $64A8 DEFB $1F,$F8,$1D,$B8,$1F,$F8,$1F,$F8
 $64B0 DEFB $1C,$38,$1F,$F8,$1B,$D8,$18,$18
 $64B8 DEFB $10,$08,$10,$08,$10,$08,$00,$00
 $64C0 DEFB $00,$00,$01,$80,$01,$80,$01,$80
 $64C8 DEFB $03,$C0,$05,$A0,$07,$E0,$0F,$F0
 $64D0 DEFB $0C,$30,$07,$E0,$03,$C0,$01,$80
 $64D8 DEFB $01,$80,$01,$80,$00,$00,$00,$00
 $64E0 DEFB $00,$00,$08,$10,$14,$28,$1D,$B8
 $64E8 DEFB $1F,$F8,$1D,$B8,$1F,$F8,$1F,$F8
 $64F0 DEFB $1C,$38,$1F,$F8,$1B,$D8,$18,$18
 $64F8 DEFB $10,$08,$10,$08,$10,$08,$00,$00

; No smoking sign
;
; #GRAFIXSTR($6500)(No_smoking)
b$6500 DEFB $00,$00,$07,$E0,$1F,$F8,$3C,$3C
 $6508 DEFB $32,$3C,$75,$7E,$62,$E6,$61,$C6
 $6510 DEFB $63,$A6,$67,$76,$7E,$2E,$3C,$0C
 $6518 DEFB $3C,$3C,$1F,$F8,$07,$E0,$00,$00
 $6520 DEFB $00,$00,$00,$00,$00,$00,$07,$E0
 $6528 DEFB $1F,$F8,$38,$3C,$34,$7C,$65,$C6
 $6530 DEFB $63,$A6,$3E,$6C,$3C,$1C,$1F,$F8
 $6538 DEFB $07,$E0,$00,$00,$00,$00,$00,$00
 $6540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6548 DEFB $00,$00,$00,$00,$00,$00,$7F,$FE
 $6550 DEFB $7F,$FE,$00,$00,$00,$00,$00,$00
 $6558 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6560 DEFB $00,$00,$00,$00,$00,$00,$07,$E0
 $6568 DEFB $1F,$F8,$38,$3C,$34,$7C,$65,$C6
 $6570 DEFB $63,$A6,$3E,$6C,$3C,$1C,$1F,$F8
 $6578 DEFB $07,$E0,$00,$00,$00,$00,$00,$00

; Arthur L
;
; #GRAFIXSTR($6580)(Arthur_L)
b$6580 DEFB $01,$00,$02,$E0,$01,$78,$06,$AC
 $6588 DEFB $0F,$5C,$3D,$AE,$7D,$DE,$7F,$EE
 $6590 DEFB $FB,$D6,$CB,$AE,$F7,$5E,$0F,$BA
 $6598 DEFB $07,$F4,$0F,$E8,$07,$E0,$03,$C0
 $65A0 DEFB $01,$00,$02,$E0,$01,$78,$06,$AC
 $65A8 DEFB $0F,$5C,$3D,$AE,$7D,$DE,$7F,$EE
 $65B0 DEFB $FB,$D6,$CB,$AE,$F7,$5E,$0F,$BA
 $65B8 DEFB $07,$F4,$03,$E8,$0F,$E0,$07,$C0
 $65C0 DEFB $01,$00,$02,$E0,$01,$78,$06,$AC
 $65C8 DEFB $0F,$5C,$3D,$AE,$7D,$DE,$7F,$EE
 $65D0 DEFB $FB,$D6,$CB,$AE,$F7,$5E,$0F,$BA
 $65D8 DEFB $07,$F4,$03,$E8,$03,$E0,$0F,$C0
 $65E0 DEFB $01,$00,$02,$E0,$01,$78,$06,$AC
 $65E8 DEFB $0F,$5C,$3D,$AE,$7D,$DE,$7F,$EE
 $65F0 DEFB $FB,$D6,$CB,$AE,$F7,$5E,$0F,$BA
 $65F8 DEFB $07,$F4,$03,$E8,$0F,$E0,$07,$C0

; Arthur R
;
; #GRAFIXSTR($6600)(Arthur_R)
b$6600 DEFB $00,$80,$07,$40,$1E,$80,$35,$60
 $6608 DEFB $3A,$F0,$75,$BC,$7B,$BE,$77,$FE
 $6610 DEFB $6B,$DF,$55,$D3,$6A,$EF,$5D,$F0
 $6618 DEFB $2F,$E0,$17,$F0,$07,$E0,$03,$C0
 $6620 DEFB $00,$80,$07,$40,$1E,$80,$35,$60
 $6628 DEFB $3A,$F0,$75,$BC,$7B,$BE,$77,$FE
 $6630 DEFB $6B,$DF,$55,$D3,$6A,$EF,$5D,$F0
 $6638 DEFB $2F,$E0,$17,$C0,$07,$F0,$03,$E0
 $6640 DEFB $00,$80,$07,$40,$1E,$80,$35,$60
 $6648 DEFB $3A,$F0,$75,$BC,$7B,$BE,$77,$FE
 $6650 DEFB $6B,$DF,$55,$D3,$6A,$EF,$5D,$F0
 $6658 DEFB $2F,$E0,$17,$C0,$07,$C0,$03,$F0
 $6660 DEFB $00,$80,$07,$40,$1E,$80,$35,$60
 $6668 DEFB $3A,$F0,$75,$BC,$7B,$BE,$77,$FE
 $6670 DEFB $6B,$DF,$55,$D3,$6A,$EF,$5D,$F0
 $6678 DEFB $2F,$E0,$17,$C0,$07,$F0,$03,$E0

; Aerosol L
;
; #GRAFIXSTR($6680)(Aerosol_L)
b$6680 DEFB $00,$00,$00,$70,$00,$30,$00,$70
 $6688 DEFB $00,$20,$00,$F8,$01,$C4,$01,$F4
 $6690 DEFB $01,$F4,$00,$74,$01,$74,$01,$74
 $6698 DEFB $00,$74,$01,$F4,$01,$F4,$00,$00
 $66A0 DEFB $00,$00,$04,$70,$09,$30,$12,$70
 $66A8 DEFB $08,$20,$00,$F8,$01,$C4,$01,$F4
 $66B0 DEFB $01,$F4,$00,$74,$01,$74,$01,$74
 $66B8 DEFB $00,$74,$01,$F4,$01,$F4,$00,$00
 $66C0 DEFB $00,$00,$10,$70,$8B,$30,$24,$70
 $66C8 DEFB $C0,$20,$10,$F8,$01,$C4,$01,$F4
 $66D0 DEFB $01,$F4,$00,$74,$01,$74,$01,$74
 $66D8 DEFB $00,$74,$01,$F4,$01,$F4,$00,$00
 $66E0 DEFB $00,$00,$20,$70,$90,$30,$40,$70
 $66E8 DEFB $00,$20,$40,$F8,$01,$C4,$01,$F4
 $66F0 DEFB $01,$F4,$00,$74,$01,$74,$01,$74
 $66F8 DEFB $00,$74,$01,$F4,$01,$F4,$00,$00

; Aerosol R
;
; #GRAFIXSTR($6700)(Aerosol_R)
b$6700 DEFB $00,$00,$0E,$00,$0C,$00,$0E,$00
 $6708 DEFB $04,$00,$1F,$00,$38,$80,$3E,$80
 $6710 DEFB $3E,$80,$06,$80,$26,$80,$26,$80
 $6718 DEFB $06,$80,$3E,$80,$3E,$80,$00,$00
 $6720 DEFB $00,$00,$00,$14,$0E,$40,$0C,$8A
 $6728 DEFB $0E,$24,$1F,$00,$38,$80,$3E,$80
 $6730 DEFB $3E,$80,$06,$80,$26,$80,$26,$80
 $6738 DEFB $06,$80,$3E,$80,$3E,$80,$00,$00
 $6740 DEFB $00,$00,$00,$0D,$0E,$22,$0C,$8A
 $6748 DEFB $0E,$24,$1F,$01,$38,$82,$3E,$80
 $6750 DEFB $3E,$80,$06,$80,$26,$80,$26,$80
 $6758 DEFB $06,$80,$3E,$80,$3E,$80,$00,$00
 $6760 DEFB $00,$00,$0E,$05,$0C,$02,$0E,$01
 $6768 DEFB $04,$02,$1F,$00,$38,$80,$3E,$80
 $6770 DEFB $3E,$80,$06,$80,$26,$80,$26,$80
 $6778 DEFB $06,$80,$3E,$80,$3E,$80,$00,$00

; Lightbulb
;
; #GRAFIXSTR($6780)(Lightbulb)
b$6780 DEFB $00,$00,$03,$C0,$0F,$F0,$1F,$F8
 $6788 DEFB $3E,$7C,$3A,$5C,$3A,$5C,$3D,$BC
 $6790 DEFB $1F,$F8,$0F,$F0,$07,$E0,$03,$C0
 $6798 DEFB $07,$E0,$03,$C0,$01,$80,$00,$00
 $67A0 DEFB $00,$00,$03,$C0,$0C,$30,$10,$08
 $67A8 DEFB $21,$84,$25,$A4,$25,$A4,$22,$44
 $67B0 DEFB $10,$08,$08,$10,$04,$20,$03,$C0
 $67B8 DEFB $07,$E0,$03,$C0,$01,$80,$00,$00
 $67C0 DEFB $00,$00,$03,$C0,$0F,$F0,$1F,$F8
 $67C8 DEFB $3E,$7C,$3A,$5C,$3A,$5C,$3D,$BC
 $67D0 DEFB $1F,$F8,$0F,$F0,$07,$E0,$03,$C0
 $67D8 DEFB $07,$E0,$03,$C0,$01,$80,$00,$00
 $67E0 DEFB $00,$00,$03,$C0,$0C,$30,$10,$08
 $67E8 DEFB $21,$84,$25,$A4,$25,$A4,$22,$44
 $67F0 DEFB $10,$08,$08,$10,$04,$20,$03,$C0
 $67F8 DEFB $07,$E0,$03,$C0,$01,$80,$00,$00

; Jawed critter L
;
; #GRAFIXSTR($6800)(Critter_L)
b$6800 DEFB $03,$80,$0F,$E0,$39,$F0,$3D,$F8
 $6808 DEFB $7F,$F8,$FD,$F8,$B8,$F8,$90,$78
 $6810 DEFB $01,$70,$03,$F0,$93,$F0,$B7,$E8
 $6818 DEFB $FF,$DC,$7F,$BC,$1E,$34,$00,$70
 $6820 DEFB $03,$80,$0F,$E0,$3D,$F0,$39,$F8
 $6828 DEFB $7F,$F8,$FD,$F8,$B8,$F8,$92,$78
 $6830 DEFB $03,$F0,$97,$F0,$B7,$E8,$FF,$98
 $6838 DEFB $7F,$38,$1C,$38,$00,$38,$00,$78
 $6840 DEFB $03,$80,$0F,$E0,$3D,$F0,$39,$F8
 $6848 DEFB $7F,$F8,$FD,$F8,$BA,$F8,$57,$78
 $6850 DEFB $EF,$F0,$FF,$F0,$FF,$E0,$FF,$90
 $6858 DEFB $7F,$30,$1C,$B0,$03,$B0,$07,$70
 $6860 DEFB $03,$80,$0F,$E0,$3D,$F0,$39,$F8
 $6868 DEFB $7F,$F8,$FD,$F8,$B8,$F8,$92,$78
 $6870 DEFB $03,$F0,$97,$F0,$B7,$E8,$FF,$98
 $6878 DEFB $7F,$38,$1C,$38,$00,$38,$00,$78

; Jawed critter R
;
; #GRAFIXSTR($6880)(Critter_R)
b$6880 DEFB $01,$C0,$07,$F0,$0F,$9C,$1F,$BC
 $6888 DEFB $1F,$FE,$1F,$BF,$1F,$1D,$1E,$09
 $6890 DEFB $0E,$80,$0F,$C0,$17,$C9,$37,$ED
 $6898 DEFB $7B,$FF,$7D,$FE,$4C,$78,$0E,$00
 $68A0 DEFB $01,$C0,$07,$F0,$0F,$BC,$1F,$9C
 $68A8 DEFB $1F,$FE,$1F,$BF,$1F,$1D,$1E,$49
 $68B0 DEFB $0F,$C0,$0F,$E9,$17,$ED,$19,$FF
 $68B8 DEFB $1C,$FE,$1C,$38,$1C,$00,$1E,$00
 $68C0 DEFB $01,$C0,$07,$F0,$0F,$BC,$1F,$9C
 $68C8 DEFB $1F,$FE,$1F,$BF,$1F,$5D,$1E,$EA
 $68D0 DEFB $0F,$F7,$0F,$FF,$07,$FF,$09,$FF
 $68D8 DEFB $0C,$FE,$0D,$38,$0D,$C0,$0E,$E0
 $68E0 DEFB $01,$C0,$07,$F0,$0F,$9C,$1F,$BC
 $68E8 DEFB $1F,$FE,$1F,$BF,$1F,$1D,$1E,$49
 $68F0 DEFB $0F,$C0,$0F,$E9,$17,$ED,$19,$FF
 $68F8 DEFB $1C,$FE,$1C,$38,$1C,$00,$1E,$00

; Star
;
; #GRAFIXSTR($6900)(Star)
b$6900 DEFB $00,$00,$03,$C0,$06,$60,$00,$00
 $6908 DEFB $00,$00,$21,$84,$62,$C6,$47,$A2
 $6910 DEFB $45,$E2,$63,$46,$21,$84,$00,$00
 $6918 DEFB $00,$00,$06,$60,$03,$C0,$00,$00
 $6920 DEFB $00,$00,$04,$20,$00,$00,$01,$80
 $6928 DEFB $03,$C0,$42,$C2,$0C,$B0,$1E,$18
 $6930 DEFB $18,$78,$0D,$30,$43,$42,$03,$C0
 $6938 DEFB $01,$80,$00,$00,$04,$20,$00,$00
 $6940 DEFB $00,$00,$00,$00,$01,$80,$03,$C0
 $6948 DEFB $07,$C0,$02,$90,$18,$38,$3C,$1C
 $6950 DEFB $38,$3C,$1C,$18,$09,$40,$03,$E0
 $6958 DEFB $03,$C0,$01,$80,$00,$00,$00,$00
 $6960 DEFB $00,$00,$01,$C0,$03,$E0,$07,$60
 $6968 DEFB $06,$C0,$30,$18,$78,$1C,$69,$8E
 $6970 DEFB $71,$96,$38,$1E,$18,$0C,$03,$60
 $6978 DEFB $06,$E0,$07,$C0,$03,$80,$00,$00

; Grumpy face
;
; #GRAFIXSTR($6980)(Grumpy_face)
b$6980 DEFB $00,$00,$07,$E0,$1F,$F8,$3F,$FC
 $6988 DEFB $3F,$FC,$67,$E6,$79,$9E,$7A,$5E
 $6990 DEFB $71,$8E,$7F,$FE,$7F,$FE,$30,$0C
 $6998 DEFB $3F,$FC,$1F,$F8,$07,$E0,$00,$00
 $69A0 DEFB $00,$00,$07,$E0,$1F,$F8,$3F,$FC
 $69A8 DEFB $37,$EC,$7B,$DE,$7D,$BE,$7A,$5E
 $69B0 DEFB $71,$8E,$7F,$FE,$75,$5E,$3A,$AC
 $69B8 DEFB $3F,$FC,$1F,$F8,$07,$E0,$00,$00
 $69C0 DEFB $00,$00,$07,$E0,$1F,$F8,$3F,$FC
 $69C8 DEFB $3F,$FC,$67,$E6,$79,$9E,$7A,$5E
 $69D0 DEFB $71,$8E,$7F,$FE,$75,$5E,$30,$0C
 $69D8 DEFB $3A,$AC,$1F,$F8,$07,$E0,$00,$00
 $69E0 DEFB $00,$00,$07,$E0,$1F,$F8,$3F,$FC
 $69E8 DEFB $3F,$FC,$7F,$FE,$61,$86,$7A,$5E
 $69F0 DEFB $71,$8E,$7F,$FE,$75,$5E,$3A,$AC
 $69F8 DEFB $3F,$FC,$1F,$F8,$07,$E0,$00,$00

; Miner's helmet
;
; #GRAFIXSTR($6A00)(Miner_helmet)
b$6A00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A08 DEFB $00,$00,$00,$00,$00,$00,$03,$80
 $6A10 DEFB $0D,$EE,$1B,$F6,$17,$F6,$37,$F8
 $6A18 DEFB $37,$F8,$37,$FE,$00,$00,$00,$00
 $6A20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A28 DEFB $00,$00,$03,$80,$0D,$EE,$1B,$F6
 $6A30 DEFB $17,$F6,$37,$F8,$37,$F8,$37,$FE
 $6A38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A40 DEFB $00,$00,$00,$00,$00,$00,$03,$80
 $6A48 DEFB $0D,$EE,$1B,$F6,$17,$F6,$37,$F8
 $6A50 DEFB $37,$F8,$37,$FE,$00,$00,$00,$00
 $6A58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A68 DEFB $00,$00,$03,$80,$0D,$EE,$1B,$F6
 $6A70 DEFB $17,$F6,$37,$F8,$37,$F8,$37,$FE
 $6A78 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Worried face
;
; #GRAFIXSTR($6A80)(Worried_face)
b$6A80 DEFB $00,$00,$07,$E0,$1F,$F8,$39,$9C
 $6A88 DEFB $36,$6C,$74,$4E,$74,$4E,$71,$8E
 $6A90 DEFB $7F,$FE,$7C,$3E,$79,$9E,$30,$0C
 $6A98 DEFB $3B,$DC,$1F,$F8,$07,$E0,$00,$00
 $6AA0 DEFB $00,$00,$07,$E0,$1D,$B8,$33,$CC
 $6AA8 DEFB $3F,$FC,$71,$8E,$74,$4E,$71,$8E
 $6AB0 DEFB $6F,$FE,$7C,$3E,$78,$1E,$37,$EC
 $6AB8 DEFB $3F,$FC,$1F,$F8,$07,$E0,$00,$00
 $6AC0 DEFB $00,$00,$07,$E0,$1D,$B8,$3B,$DC
 $6AC8 DEFB $37,$EC,$7F,$FE,$7F,$FE,$71,$8E
 $6AD0 DEFB $7F,$FE,$5C,$3E,$5B,$DE,$37,$EC
 $6AD8 DEFB $3F,$FC,$1F,$F8,$07,$E0,$00,$00
 $6AE0 DEFB $00,$00,$07,$E0,$1D,$B8,$33,$CC
 $6AE8 DEFB $3F,$FC,$71,$8E,$74,$4E,$71,$8E
 $6AF0 DEFB $7F,$FE,$7C,$3E,$58,$1E,$37,$EC
 $6AF8 DEFB $3F,$FC,$1F,$F8,$07,$E0,$00,$00

; Snake
;
; #GRAFIXSTR($6B00)(Snake)
b$6B00 DEFB $00,$00,$00,$00,$00,$00,$03,$80
 $6B08 DEFB $07,$C0,$07,$C0,$07,$C0,$0B,$E0
 $6B10 DEFB $0B,$E0,$0D,$E0,$0D,$E0,$0D,$FC
 $6B18 DEFB $0D,$FA,$0E,$FF,$1E,$F8,$7F,$7E
 $6B20 DEFB $00,$00,$00,$00,$00,$00,$03,$80
 $6B28 DEFB $07,$C0,$07,$C0,$07,$C0,$0B,$E0
 $6B30 DEFB $0B,$EC,$0D,$EA,$0D,$EF,$0D,$E8
 $6B38 DEFB $1D,$F6,$7E,$F4,$00,$F8,$00,$70
 $6B40 DEFB $00,$00,$00,$00,$00,$00,$0E,$30
 $6B48 DEFB $1F,$68,$1F,$7C,$1F,$60,$0F,$78
 $6B50 DEFB $0F,$B8,$07,$B8,$07,$B0,$07,$B0
 $6B58 DEFB $07,$D0,$03,$E0,$03,$E0,$01,$C0
 $6B60 DEFB $00,$00,$00,$00,$00,$00,$03,$80
 $6B68 DEFB $07,$C0,$27,$C0,$37,$C0,$3B,$E0
 $6B70 DEFB $3B,$FC,$35,$FA,$16,$FF,$17,$78
 $6B78 DEFB $0F,$BE,$0F,$CC,$0F,$80,$07,$00

; Ghost L
;
; #GRAFIXSTR($6B80)(Ghost_L)
b$6B80 DEFB $1E,$00,$1F,$80,$29,$80,$29,$C0
 $6B88 DEFB $48,$E0,$48,$E0,$59,$F0,$7F,$F8
 $6B90 DEFB $7F,$DC,$3F,$E4,$1F,$F8,$07,$F8
 $6B98 DEFB $03,$CC,$01,$E4,$00,$F0,$00,$3C
 $6BA0 DEFB $1E,$00,$1F,$80,$29,$80,$29,$C0
 $6BA8 DEFB $48,$E0,$48,$E0,$59,$E0,$7F,$E8
 $6BB0 DEFB $7F,$DC,$3F,$A4,$1F,$B8,$07,$98
 $6BB8 DEFB $03,$CC,$01,$04,$00,$F0,$00,$3C
 $6BC0 DEFB $1E,$00,$1F,$80,$29,$80,$29,$C0
 $6BC8 DEFB $48,$E0,$48,$E0,$59,$E0,$7F,$E0
 $6BD0 DEFB $7F,$EC,$3F,$C0,$1F,$D8,$07,$98
 $6BD8 DEFB $03,$CC,$01,$40,$00,$10,$00,$38
 $6BE0 DEFB $1E,$00,$1F,$80,$29,$80,$29,$C0
 $6BE8 DEFB $48,$E0,$48,$E0,$59,$F0,$7F,$F0
 $6BF0 DEFB $7F,$D0,$3F,$E4,$1F,$F0,$07,$98
 $6BF8 DEFB $03,$C0,$01,$C4,$00,$60,$00,$0C

; Ghost R
;
; #GRAFIXSTR($6C00)(Ghost_R)
b$6C00 DEFB $00,$78,$01,$F8,$01,$94,$07,$94
 $6C08 DEFB $07,$12,$07,$12,$1F,$9A,$1F,$FE
 $6C10 DEFB $3B,$FE,$27,$FC,$1F,$F8,$3F,$E0
 $6C18 DEFB $7F,$C0,$6F,$80,$5F,$80,$3C,$00
 $6C20 DEFB $00,$78,$01,$F8,$01,$94,$07,$94
 $6C28 DEFB $07,$12,$07,$12,$0F,$9A,$37,$FE
 $6C30 DEFB $7B,$FC,$47,$F8,$07,$F8,$27,$F0
 $6C38 DEFB $6F,$60,$6F,$00,$5F,$80,$3C,$00
 $6C40 DEFB $00,$78,$01,$F8,$01,$94,$07,$94
 $6C48 DEFB $07,$12,$07,$12,$0F,$9A,$1F,$FE
 $6C50 DEFB $67,$FE,$47,$F8,$07,$F8,$07,$F8
 $6C58 DEFB $07,$70,$0A,$00,$18,$00,$3C,$00
 $6C60 DEFB $00,$78,$01,$F8,$01,$94,$03,$94
 $6C68 DEFB $07,$12,$0F,$12,$1F,$9A,$03,$FE
 $6C70 DEFB $07,$FE,$0F,$FC,$0F,$F8,$1F,$F8
 $6C78 DEFB $1F,$F0,$19,$E0,$01,$80,$60,$00

; Genie L
;
; #GRAFIXSTR($6C80)(Genie_L)
b$6C80 DEFB $01,$80,$07,$E0,$07,$E0,$03,$C0
 $6C88 DEFB $0D,$B0,$1F,$F8,$3F,$FC,$7F,$FE
 $6C90 DEFB $6E,$76,$71,$8E,$0F,$F0,$07,$C0
 $6C98 DEFB $01,$C0,$00,$E0,$00,$30,$00,$08
 $6CA0 DEFB $00,$C0,$03,$F0,$03,$F0,$01,$E0
 $6CA8 DEFB $0E,$D0,$1F,$F8,$3F,$FC,$7F,$FE
 $6CB0 DEFB $6E,$76,$71,$8E,$0F,$F0,$07,$C0
 $6CB8 DEFB $01,$C0,$00,$E0,$00,$6C,$00,$02
 $6CC0 DEFB $01,$80,$07,$E0,$07,$E0,$03,$C0
 $6CC8 DEFB $0D,$B0,$1F,$F8,$3F,$FC,$7F,$FE
 $6CD0 DEFB $6E,$76,$71,$8E,$0F,$F0,$07,$C0
 $6CD8 DEFB $01,$C0,$00,$E0,$00,$34,$00,$02
 $6CE0 DEFB $03,$00,$0F,$C0,$0F,$C0,$07,$80
 $6CE8 DEFB $0B,$70,$1F,$F8,$3F,$FC,$7F,$FE
 $6CF0 DEFB $6E,$76,$71,$8E,$0F,$F0,$07,$C0
 $6CF8 DEFB $01,$C0,$00,$E0,$00,$30,$00,$12

; Genie R
;
; #GRAFIXSTR($6D00)(Genie_R)
b$6D00 DEFB $01,$80,$07,$E0,$07,$E0,$03,$C0
 $6D08 DEFB $0D,$B0,$1F,$F8,$3F,$FC,$7F,$FE
 $6D10 DEFB $6E,$76,$71,$8E,$0F,$F0,$03,$E0
 $6D18 DEFB $03,$80,$07,$00,$0C,$00,$10,$00
 $6D20 DEFB $00,$C0,$03,$F0,$03,$F0,$01,$E0
 $6D28 DEFB $0E,$D0,$1F,$F8,$3F,$FC,$7F,$FE
 $6D30 DEFB $6E,$76,$71,$8E,$0F,$F0,$03,$E0
 $6D38 DEFB $03,$80,$07,$00,$36,$00,$40,$00
 $6D40 DEFB $01,$80,$07,$E0,$07,$E0,$03,$C0
 $6D48 DEFB $0D,$B0,$1F,$F8,$3F,$FC,$7F,$FE
 $6D50 DEFB $6E,$76,$71,$8E,$0F,$F0,$03,$E0
 $6D58 DEFB $03,$80,$07,$00,$2C,$00,$40,$00
 $6D60 DEFB $03,$00,$0F,$C0,$0F,$C0,$07,$80
 $6D68 DEFB $0B,$70,$1F,$F8,$3F,$FC,$7F,$FE
 $6D70 DEFB $6E,$76,$71,$8E,$0F,$F0,$03,$E0
 $6D78 DEFB $03,$80,$07,$00,$0C,$00,$48,$00

; Peasant
;
; #GRAFIXSTR($6D80)(Peasant)
b$6D80 DEFB $07,$C0,$1F,$20,$1E,$70,$3F,$E8
 $6D88 DEFB $1F,$E8,$15,$C8,$02,$A4,$12,$28
 $6D90 DEFB $1E,$78,$0F,$70,$07,$60,$19,$20
 $6D98 DEFB $3C,$C0,$1E,$20,$00,$00,$00,$00
 $6DA0 DEFB $07,$C0,$1F,$20,$1E,$70,$3F,$E8
 $6DA8 DEFB $1F,$E8,$1D,$CC,$04,$C8,$10,$40
 $6DB0 DEFB $12,$38,$1B,$70,$0F,$60,$09,$70
 $6DB8 DEFB $05,$50,$0E,$10,$00,$00,$00,$00
 $6DC0 DEFB $07,$C0,$1F,$20,$1E,$70,$3F,$E0
 $6DC8 DEFB $1F,$E0,$1F,$C8,$15,$EC,$1C,$6C
 $6DD0 DEFB $00,$28,$10,$40,$0D,$60,$0F,$30
 $6DD8 DEFB $0F,$70,$09,$30,$00,$00,$00,$00
 $6DE0 DEFB $07,$C0,$1F,$20,$1E,$70,$3F,$E8
 $6DE8 DEFB $1F,$E8,$15,$C0,$1A,$A0,$1E,$60
 $6DF0 DEFB $0E,$78,$03,$70,$0C,$60,$1C,$00
 $6DF8 DEFB $0E,$18,$06,$38,$00,$00,$00,$00

; Bee
;
; #GRAFIXSTR($6E00)(Bee)
b$6E00 DEFB $00,$00,$00,$00,$00,$00,$03,$C0
 $6E08 DEFB $07,$E0,$1B,$F0,$1B,$F0,$1D,$F0
 $6E10 DEFB $1E,$E0,$0F,$60,$03,$00,$00,$00
 $6E18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E20 DEFB $00,$00,$00,$00,$00,$00,$03,$E0
 $6E28 DEFB $07,$F0,$17,$F0,$17,$F0,$1B,$F0
 $6E30 DEFB $1D,$E0,$0E,$E0,$03,$00,$00,$00
 $6E38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E40 DEFB $00,$00,$00,$00,$0C,$00,$1B,$E0
 $6E48 DEFB $17,$F0,$37,$F0,$37,$F0,$3B,$F0
 $6E50 DEFB $3D,$E0,$0E,$E0,$00,$00,$00,$00
 $6E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E60 DEFB $00,$00,$00,$00,$0C,$00,$1B,$C0
 $6E68 DEFB $17,$E0,$3B,$F0,$3B,$F0,$1D,$F0
 $6E70 DEFB $1E,$F0,$0C,$60,$00,$00,$00,$00
 $6E78 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Rock
;
; #GRAFIXSTR($6E80)(Rock)
b$6E80 DEFB $00,$00,$00,$00,$00,$00,$30,$F0
 $6E88 DEFB $78,$E8,$58,$E8,$20,$18,$01,$C0
 $6E90 DEFB $02,$E0,$06,$F8,$06,$F8,$07,$78
 $6E98 DEFB $1B,$E0,$08,$00,$00,$00,$00,$00
 $6EA0 DEFB $00,$00,$00,$00,$00,$00,$30,$B0
 $6EA8 DEFB $48,$D8,$78,$F8,$30,$38,$01,$C0
 $6EB0 DEFB $03,$E0,$07,$F0,$03,$F0,$35,$F0
 $6EB8 DEFB $13,$E0,$00,$00,$00,$00,$00,$00
 $6EC0 DEFB $00,$00,$00,$00,$00,$00,$30,$60
 $6EC8 DEFB $68,$58,$68,$7C,$30,$3C,$01,$D8
 $6ED0 DEFB $03,$E0,$05,$F0,$35,$F0,$35,$F0
 $6ED8 DEFB $03,$E0,$00,$00,$00,$00,$00,$00
 $6EE0 DEFB $00,$00,$00,$00,$00,$00,$30,$60
 $6EE8 DEFB $78,$78,$68,$64,$30,$3C,$01,$D8
 $6EF0 DEFB $03,$E0,$05,$F0,$05,$F0,$36,$F0
 $6EF8 DEFB $33,$E0,$00,$00,$00,$00,$00,$00

; Brick
;
; #GRAFIXSTR($6F00)(Brick)
b$6F00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F08 DEFB $00,$00,$01,$F0,$02,$28,$05,$74
 $6F10 DEFB $0A,$C8,$15,$B0,$23,$E0,$7D,$40
 $6F18 DEFB $3E,$80,$1F,$00,$00,$00,$00,$00
 $6F20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F28 DEFB $00,$00,$01,$F0,$02,$28,$05,$74
 $6F30 DEFB $0A,$C8,$15,$B0,$23,$E0,$7D,$40
 $6F38 DEFB $3E,$80,$1F,$00,$00,$00,$00,$00
 $6F40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F48 DEFB $00,$00,$01,$F0,$02,$28,$05,$74
 $6F50 DEFB $0A,$C8,$15,$B0,$23,$E0,$7D,$40
 $6F58 DEFB $3E,$80,$1F,$00,$00,$00,$00,$00
 $6F60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F68 DEFB $00,$00,$01,$F0,$02,$28,$05,$74
 $6F70 DEFB $0A,$C8,$15,$B0,$23,$E0,$7D,$40
 $6F78 DEFB $3E,$80,$1F,$00,$00,$00,$00,$00

; Minecart
;
; #GRAFIXSTR($6F80)(Minecart)
b$6F80 DEFB $7F,$FF,$7F,$FF,$3F,$FE,$3F,$FE
 $6F88 DEFB $1F,$FC,$1F,$FC,$0E,$38,$17,$74
 $6F90 DEFB $1B,$6C,$1D,$5C,$0E,$38,$00,$00
 $6F98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FA0 DEFB $7F,$FF,$7F,$FF,$3F,$FE,$3F,$FE
 $6FA8 DEFB $1F,$FC,$1F,$FC,$0A,$38,$1B,$7C
 $6FB0 DEFB $1B,$00,$1B,$7C,$0A,$38,$00,$00
 $6FB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FC0 DEFB $7F,$FF,$7F,$FF,$3F,$FE,$3F,$FE
 $6FC8 DEFB $1F,$FC,$1F,$FC,$0E,$38,$1D,$5C
 $6FD0 DEFB $1B,$6C,$17,$74,$0E,$38,$00,$00
 $6FD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FE0 DEFB $7F,$FF,$7F,$FF,$3F,$FE,$3F,$FE
 $6FE8 DEFB $1F,$FC,$1F,$FC,$0E,$28,$1F,$6C
 $6FF0 DEFB $00,$6C,$1F,$6C,$0E,$28,$00,$00
 $6FF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Tipping minecart
;
; #GRAFIXSTR($7000)(Minecart_tipping)
b$7000 DEFB $00,$00,$00,$00,$38,$00,$3F,$00
 $7008 DEFB $3F,$E0,$3F,$FF,$3F,$FE,$3F,$FE
 $7010 DEFB $0F,$FC,$1D,$FC,$2E,$38,$36,$70
 $7018 DEFB $3A,$E8,$1C,$D8,$00,$B8,$00,$70
 $7020 DEFB $18,$00,$1E,$00,$1F,$80,$1F,$E0
 $7028 DEFB $1F,$F8,$1F,$FE,$1F,$FF,$07,$FF
 $7030 DEFB $15,$FE,$36,$7C,$36,$18,$36,$70
 $7038 DEFB $14,$E8,$00,$D8,$00,$B8,$00,$70
 $7040 DEFB $18,$00,$1E,$00,$1F,$80,$1F,$E0
 $7048 DEFB $1F,$F8,$1F,$FE,$1F,$FF,$07,$FF
 $7050 DEFB $1D,$FE,$3A,$7C,$36,$18,$2E,$70
 $7058 DEFB $1C,$E8,$00,$D8,$00,$B8,$00,$70
 $7060 DEFB $00,$00,$00,$00,$38,$00,$3F,$00
 $7068 DEFB $3F,$E0,$3F,$FF,$3F,$FE,$3F,$FE
 $7070 DEFB $0F,$FC,$1D,$FC,$3E,$38,$00,$70
 $7078 DEFB $3E,$E8,$1C,$D8,$00,$B8,$00,$70

; Flying fish (12 frames)
;
; #GRAFIX($7080)(fish_a*)#GRAFIX($70A0)(fish_b*)#GRAFIX($70C0)(fish_c*)#GRAFIX($70E0)(fish_d*)#GRAFIX($7100)(fish_e*)#GRAFIX($7120)(fish_f*)#GRAFIX($7140)(fish_g*)#GRAFIX($7160)(fish_h*)#GRAFIX($7180)(fish_i*)#GRAFIX($71A0)(fish_j*)#GRAFIX($71C0)(fish_k*)#GRAFIX($71E0)(fish_l*)
; #UDGARRAY*(fish_a;fish_b;fish_c;fish_d;fish_e;fish_f;fish_g;fish_h;fish_i,fish_j,fish_k,fish_l)(fish)
b$7080 DEFB $07,$00,$1E,$00,$3D,$C0,$3C,$C0
 $7088 DEFB $6D,$C0,$7F,$C0,$7F,$80,$3F,$00
 $7090 DEFB $1E,$00,$1E,$00,$0E,$00,$1F,$00
 $7098 DEFB $1B,$00,$10,$80,$10,$00,$00,$00
 $70A0 DEFB $07,$00,$1E,$00,$3D,$00,$3D,$80
 $70A8 DEFB $6D,$80,$7F,$80,$7F,$80,$3F,$00
 $70B0 DEFB $1E,$00,$1E,$00,$1C,$00,$3E,$00
 $70B8 DEFB $36,$00,$32,$00,$22,$00,$00,$00
 $70C0 DEFB $07,$00,$1F,$00,$3F,$00,$3F,$80
 $70C8 DEFB $6F,$80,$7F,$80,$7F,$80,$3F,$00
 $70D0 DEFB $1E,$00,$1E,$00,$3C,$00,$7C,$00
 $70D8 DEFB $EC,$00,$0C,$00,$08,$00,$00,$00
 $70E0 DEFB $07,$00,$1E,$00,$3D,$00,$3D,$80
 $70E8 DEFB $6D,$80,$7F,$80,$7F,$80,$3F,$00
 $70F0 DEFB $1E,$00,$1E,$00,$1C,$00,$3E,$00
 $70F8 DEFB $36,$00,$32,$00,$22,$00,$00,$00
 $7100 DEFB $00,$00,$0F,$80,$1F,$C0,$3B,$E0
 $7108 DEFB $3F,$E0,$7F,$00,$7E,$E0,$3F,$C0
 $7110 DEFB $3F,$00,$7E,$00,$70,$00,$D0,$00
 $7118 DEFB $90,$00,$00,$00,$00,$00,$00,$00
 $7120 DEFB $00,$00,$01,$F0,$07,$78,$0F,$FC
 $7128 DEFB $1F,$FC,$7F,$C0,$FF,$BC,$37,$F0
 $7130 DEFB $20,$00,$40,$00,$00,$00,$00,$00
 $7138 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7140 DEFB $40,$00,$30,$00,$18,$F8,$FF,$FC
 $7148 DEFB $3F,$FE,$1F,$F6,$0F,$DE,$07,$CE
 $7150 DEFB $00,$CE,$00,$6C,$00,$08,$00,$00
 $7158 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7160 DEFB $00,$00,$02,$00,$12,$00,$0F,$00
 $7168 DEFB $07,$E0,$07,$F8,$03,$FC,$01,$FC
 $7170 DEFB $01,$F6,$01,$FE,$01,$9E,$00,$CC
 $7178 DEFB $00,$CC,$00,$58,$00,$00,$00,$00
 $7180 DEFB $00,$00,$00,$08,$01,$08,$00,$D8
 $7188 DEFB $00,$F8,$00,$70,$00,$78,$00,$78
 $7190 DEFB $00,$FC,$01,$FE,$03,$FE,$03,$B6
 $7198 DEFB $03,$3C,$03,$BC,$00,$78,$00,$E0
 $71A0 DEFB $00,$00,$00,$44,$00,$4C,$00,$6C
 $71A8 DEFB $00,$7C,$00,$38,$00,$78,$00,$78
 $71B0 DEFB $00,$FC,$01,$FE,$01,$FE,$01,$B6
 $71B8 DEFB $01,$BC,$00,$BC,$00,$78,$00,$E0
 $71C0 DEFB $00,$00,$00,$10,$00,$30,$00,$37
 $71C8 DEFB $00,$3E,$00,$3C,$00,$78,$00,$78
 $71D0 DEFB $00,$FC,$01,$FE,$01,$FE,$01,$F6
 $71D8 DEFB $01,$FC,$00,$FC,$00,$F8,$00,$E0
 $71E0 DEFB $00,$00,$00,$44,$00,$4C,$00,$6C
 $71E8 DEFB $00,$7C,$00,$38,$00,$78,$00,$78
 $71F0 DEFB $00,$FC,$01,$FE,$01,$FE,$01,$B6
 $71F8 DEFB $01,$BC,$00,$BC,$00,$78,$00,$E0

; Shark (16 frames)
;
; #GRAFIXDH($7200)(shark_a*)#GRAFIXDH($7220)(shark_b*)#GRAFIXDH($7240)(shark_c*)#GRAFIXDH($7260)(shark_d*)
; #GRAFIXDH($7300)(shark_e*)#GRAFIXDH($7320)(shark_f*)#GRAFIXDH($7340)(shark_g*)#GRAFIXDH($7360)(shark_h*)
; #GRAFIXDH($7400)(shark_i*)#GRAFIXDH($7420)(shark_j*)#GRAFIXDH($7440)(shark_k*)#GRAFIXDH($7460)(shark_l*)
; #GRAFIXDH($7500)(shark_m*)#GRAFIXDH($7520)(shark_n*)#GRAFIXDH($7540)(shark_o*)#GRAFIXDH($7560)(shark_p*)
; #UDGARRAY*(shark_a;shark_b;shark_c;shark_d;shark_e;shark_f;shark_g;shark_h;shark_i;shark_j;shark_k;shark_l;shark_m;shark_n;shark_o;shark_p)(shark)
b$7200 DEFB $03,$00,$07,$80,$07,$80,$0C,$C0
 $7208 DEFB $0B,$40,$0F,$C0,$0F,$C0,$1F,$FE
 $7210 DEFB $3B,$FC,$77,$F8,$F7,$D0,$0F,$80
 $7218 DEFB $0F,$80,$0F,$80,$0F,$80,$0F,$00
 $7220 DEFB $0C,$00,$1E,$00,$1E,$00,$33,$00
 $7228 DEFB $21,$00,$3F,$00,$3F,$00,$5F,$C0
 $7230 DEFB $5F,$F8,$DF,$F0,$DF,$60,$8F,$80
 $7238 DEFB $0F,$80,$0F,$80,$07,$80,$07,$80
 $7240 DEFB $18,$00,$3C,$00,$3C,$00,$66,$00
 $7248 DEFB $5A,$00,$7F,$00,$7F,$80,$7F,$C0
 $7250 DEFB $BF,$F0,$BE,$E0,$DE,$C0,$1F,$00
 $7258 DEFB $0F,$80,$0F,$80,$07,$C0,$03,$C0
 $7260 DEFB $0C,$00,$1E,$00,$1E,$00,$33,$00
 $7268 DEFB $21,$00,$3F,$00,$3F,$00,$5F,$C0
 $7270 DEFB $5F,$F8,$DF,$F0,$DF,$60,$8F,$80
 $7278 DEFB $0F,$80,$0F,$80,$07,$80,$07,$80
 $7280 DEFB $0F,$00,$1F,$00,$1E,$00,$3E,$00
 $7288 DEFB $7F,$00,$F7,$00,$C7,$00,$83,$80
 $7290 DEFB $83,$80,$81,$80,$01,$80,$00,$80
 $7298 DEFB $00,$80,$00,$80,$00,$00,$00,$00
 $72A0 DEFB $07,$80,$0F,$80,$0F,$00,$1F,$00
 $72A8 DEFB $1F,$80,$1F,$80,$3B,$C0,$31,$C0
 $72B0 DEFB $31,$C0,$30,$C0,$20,$C0,$20,$40
 $72B8 DEFB $00,$40,$00,$40,$00,$00,$00,$00
 $72C0 DEFB $03,$C0,$03,$C0,$07,$E0,$07,$E0
 $72C8 DEFB $07,$E0,$07,$F0,$0F,$70,$0E,$30
 $72D0 DEFB $0C,$30,$0C,$18,$08,$18,$08,$08
 $72D8 DEFB $08,$08,$00,$08,$00,$00,$00,$00
 $72E0 DEFB $07,$80,$0F,$80,$0F,$00,$1F,$00
 $72E8 DEFB $1F,$80,$1F,$80,$3B,$C0,$31,$C0
 $72F0 DEFB $31,$C0,$30,$C0,$20,$C0,$20,$40
 $72F8 DEFB $00,$40,$00,$40,$00,$00,$00,$00
 $7300 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7308 DEFB $07,$80,$EF,$DE,$68,$58,$07,$B0
 $7310 DEFB $00,$00,$07,$80,$0F,$80,$0F,$80
 $7318 DEFB $0F,$80,$0F,$80,$0F,$80,$0F,$00
 $7320 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7328 DEFB $77,$B8,$0F,$C0,$0F,$C0,$0F,$C0
 $7330 DEFB $0F,$C0,$07,$80,$03,$00,$04,$80
 $7338 DEFB $07,$80,$06,$C0,$0E,$C0,$0C,$40
 $7340 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7348 DEFB $07,$80,$0F,$C0,$EF,$DC,$7F,$F8
 $7350 DEFB $3F,$F0,$0F,$C0,$0F,$C0,$17,$80
 $7358 DEFB $3B,$40,$20,$C0,$20,$40,$00,$00
 $7360 DEFB $00,$00,$00,$00,$07,$80,$17,$C0
 $7368 DEFB $37,$E0,$07,$80,$8F,$C0,$CF,$C0
 $7370 DEFB $FF,$DC,$7F,$F8,$3F,$F0,$1F,$E0
 $7378 DEFB $0F,$C0,$0F,$C0,$07,$80,$03,$00
 $7380 DEFB $1E,$00,$3E,$00,$7F,$00,$F7,$00
 $7388 DEFB $C7,$00,$83,$80,$83,$80,$81,$80
 $7390 DEFB $01,$80,$00,$80,$00,$80,$00,$80
 $7398 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73A0 DEFB $0C,$40,$08,$40,$08,$40,$00,$40
 $73A8 DEFB $00,$40,$00,$00,$00,$00,$00,$00
 $73B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7400 DEFB $00,$00,$00,$00,$00,$80,$00,$80
 $7408 DEFB $00,$80,$01,$80,$81,$80,$83,$80
 $7410 DEFB $83,$80,$C7,$00,$F7,$00,$7F,$00
 $7418 DEFB $3E,$00,$1E,$00,$1F,$00,$0F,$00
 $7420 DEFB $00,$00,$00,$00,$00,$40,$00,$40
 $7428 DEFB $20,$40,$20,$C0,$30,$C0,$31,$C0
 $7430 DEFB $31,$C0,$3B,$C0,$1F,$80,$1F,$80
 $7438 DEFB $1F,$00,$0F,$00,$0F,$80,$07,$80
 $7440 DEFB $00,$00,$00,$00,$00,$08,$08,$08
 $7448 DEFB $08,$08,$08,$18,$0C,$18,$0C,$30
 $7450 DEFB $0E,$30,$0F,$70,$07,$F0,$07,$E0
 $7458 DEFB $07,$E0,$07,$E0,$03,$C0,$03,$C0
 $7460 DEFB $00,$00,$00,$00,$00,$40,$00,$40
 $7468 DEFB $20,$40,$20,$C0,$30,$C0,$31,$C0
 $7470 DEFB $31,$C0,$3B,$C0,$1F,$80,$1F,$80
 $7478 DEFB $1F,$00,$0F,$00,$0F,$80,$07,$80
 $7480 DEFB $0F,$00,$0F,$80,$0F,$80,$0F,$80
 $7488 DEFB $0F,$80,$F7,$D0,$77,$F8,$3B,$FC
 $7490 DEFB $1F,$FE,$0F,$C0,$0F,$C0,$0F,$C0
 $7498 DEFB $0F,$C0,$07,$80,$07,$80,$03,$00
 $74A0 DEFB $07,$80,$07,$80,$0F,$80,$0F,$80
 $74A8 DEFB $8F,$80,$DF,$60,$DF,$F0,$5F,$F8
 $74B0 DEFB $5F,$C0,$3F,$00,$3F,$00,$3F,$00
 $74B8 DEFB $3F,$00,$1E,$00,$1E,$00,$0C,$00
 $74C0 DEFB $03,$C0,$07,$C0,$0F,$80,$0F,$80
 $74C8 DEFB $1F,$00,$DE,$C0,$BE,$E0,$BF,$F0
 $74D0 DEFB $7F,$C0,$7F,$80,$7F,$00,$7F,$00
 $74D8 DEFB $7E,$00,$3C,$00,$3C,$00,$18,$00
 $74E0 DEFB $07,$80,$07,$80,$0F,$80,$0F,$80
 $74E8 DEFB $8F,$80,$DF,$60,$DF,$F0,$5F,$F8
 $74F0 DEFB $5F,$C0,$3F,$00,$3F,$00,$3F,$00
 $74F8 DEFB $3F,$00,$1E,$00,$1E,$00,$0C,$00
 $7500 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7508 DEFB $07,$80,$EF,$DE,$68,$58,$07,$B0
 $7510 DEFB $00,$00,$07,$80,$0F,$80,$0F,$80
 $7518 DEFB $0F,$80,$0F,$80,$0F,$80,$0F,$00
 $7520 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7528 DEFB $77,$B8,$0F,$C0,$0F,$C0,$0F,$C0
 $7530 DEFB $0F,$C0,$07,$80,$03,$00,$04,$80
 $7538 DEFB $07,$80,$06,$C0,$0E,$C0,$0C,$40
 $7540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7548 DEFB $07,$80,$0F,$C0,$EF,$DC,$7F,$F8
 $7550 DEFB $3F,$F0,$0F,$C0,$0F,$C0,$17,$80
 $7558 DEFB $3B,$40,$20,$C0,$20,$40,$00,$00
 $7560 DEFB $00,$00,$00,$00,$07,$80,$17,$C0
 $7568 DEFB $37,$E0,$07,$80,$8F,$C0,$CF,$C0
 $7570 DEFB $FF,$DC,$7F,$F8,$3F,$F0,$1F,$E0
 $7578 DEFB $0F,$C0,$0F,$C0,$07,$80,$03,$00
 $7580 DEFB $1E,$00,$3E,$00,$7F,$00,$F7,$00
 $7588 DEFB $C7,$00,$83,$80,$83,$80,$81,$80
 $7590 DEFB $01,$80,$00,$80,$00,$80,$00,$80
 $7598 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75A0 DEFB $0C,$40,$08,$40,$08,$40,$00,$40
 $75A8 DEFB $00,$40,$00,$00,$00,$00,$00,$00
 $75B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Devil
;
; #GRAFIXSTR($7600)(Devil)
b$7600 DEFB $00,$00,$1E,$54,$27,$54,$07,$D4
 $7608 DEFB $02,$38,$07,$10,$27,$F0,$33,$10
 $7610 DEFB $FB,$D0,$B3,$F0,$A7,$F0,$C4,$70
 $7618 DEFB $6C,$D0,$39,$90,$01,$F0,$00,$00
 $7620 DEFB $00,$00,$1E,$2A,$27,$2A,$07,$AA
 $7628 DEFB $02,$1C,$07,$08,$77,$F8,$33,$08
 $7630 DEFB $53,$C8,$43,$E8,$47,$E8,$44,$68
 $7638 DEFB $6C,$C8,$39,$88,$11,$E8,$00,$00
 $7640 DEFB $00,$00,$00,$15,$1E,$15,$27,$15
 $7648 DEFB $07,$8E,$07,$04,$47,$FC,$E3,$04
 $7650 DEFB $F3,$C4,$43,$E4,$47,$E4,$44,$64
 $7658 DEFB $6C,$C4,$39,$84,$11,$E4,$00,$00
 $7660 DEFB $00,$00,$00,$2A,$1E,$2A,$27,$2A
 $7668 DEFB $07,$9C,$07,$08,$77,$F8,$33,$08
 $7670 DEFB $53,$C8,$43,$E8,$47,$E8,$44,$68
 $7678 DEFB $6C,$C8,$39,$88,$11,$E8,$00,$00

; Tap
;
; ##GRAFIXSTR($7680)(Tap)
b$7680 DEFB $19,$98,$1F,$F8,$19,$98,$00,$00
 $7688 DEFB $01,$80,$02,$C0,$02,$C0,$02,$C0
 $7690 DEFB $02,$C0,$02,$F0,$03,$78,$03,$B8
 $7698 DEFB $03,$B8,$01,$B8,$01,$B8,$01,$B8
 $76A0 DEFB $07,$A0,$07,$A0,$07,$A0,$00,$00
 $76A8 DEFB $01,$80,$02,$C0,$02,$C0,$02,$C0
 $76B0 DEFB $02,$C0,$02,$F0,$03,$78,$03,$B8
 $76B8 DEFB $03,$B8,$01,$B8,$01,$B8,$01,$B8
 $76C0 DEFB $01,$80,$01,$80,$01,$80,$00,$00
 $76C8 DEFB $01,$80,$02,$C0,$02,$C0,$02,$C0
 $76D0 DEFB $02,$C0,$02,$F0,$03,$78,$03,$B8
 $76D8 DEFB $03,$B8,$01,$B8,$01,$B8,$01,$B8
 $76E0 DEFB $07,$A0,$07,$A0,$07,$A0,$00,$00
 $76E8 DEFB $01,$80,$02,$C0,$02,$C0,$02,$C0
 $76F0 DEFB $02,$C0,$02,$F0,$03,$78,$03,$B8
 $76F8 DEFB $03,$B8,$01,$B8,$01,$B8,$01,$B8

; Pull chain
;
; #GRAFIXSTR($7700)(Pull_chain)
b$7700 DEFB $00,$00,$01,$00,$01,$00,$02,$80
 $7708 DEFB $02,$80,$01,$00,$01,$00,$02,$80
 $7710 DEFB $02,$80,$01,$00,$06,$C0,$0B,$A0
 $7718 DEFB $0C,$E0,$07,$C0,$00,$00,$00,$00
 $7720 DEFB $00,$00,$02,$80,$02,$80,$01,$00
 $7728 DEFB $01,$00,$02,$80,$02,$80,$01,$00
 $7730 DEFB $06,$C0,$0B,$A0,$0C,$E0,$07,$C0
 $7738 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7740 DEFB $00,$00,$01,$00,$01,$00,$02,$80
 $7748 DEFB $02,$80,$01,$00,$06,$C0,$0B,$A0
 $7750 DEFB $0C,$E0,$07,$C0,$00,$00,$00,$00
 $7758 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7760 DEFB $00,$00,$02,$80,$02,$80,$01,$00
 $7768 DEFB $01,$00,$02,$80,$02,$80,$01,$00
 $7770 DEFB $06,$C0,$0B,$A0,$0C,$E0,$07,$C0
 $7778 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; (empty)
;
; This graphic is used to erase a sprite. Used by the drawing routine at #R$EBE0.
b$7780 DEFS $80

; Monty up
;
; #GRAFIXSTR($7800)(Monty_up)
b$7800 DEFB $03,$C0,$07,$E0,$03,$C0,$0F,$F0
 $7808 DEFB $1F,$F8,$3F,$FC,$2F,$F4,$1F,$F8
 $7810 DEFB $3F,$FC,$3F,$FC,$3F,$FC,$1F,$F8
 $7818 DEFB $1E,$78,$0C,$30,$00,$00,$00,$00
 $7820 DEFB $01,$E0,$03,$F0,$01,$E0,$07,$F8
 $7828 DEFB $0F,$F8,$1F,$FC,$1F,$EE,$0F,$EE
 $7830 DEFB $1F,$F2,$1F,$FC,$13,$FC,$0D,$F8
 $7838 DEFB $1E,$F0,$1C,$78,$00,$00,$00,$00
 $7840 DEFB $03,$C0,$07,$E0,$03,$C0,$0F,$F0
 $7848 DEFB $1F,$F8,$3F,$FC,$2F,$F4,$1F,$F8
 $7850 DEFB $3F,$FC,$3F,$FC,$3F,$FC,$1F,$F8
 $7858 DEFB $1E,$78,$0C,$30,$00,$00,$00,$00
 $7860 DEFB $07,$80,$0F,$C0,$07,$80,$1F,$E0
 $7868 DEFB $3F,$F0,$3F,$F8,$77,$F8,$77,$F0
 $7870 DEFB $4F,$F8,$3F,$F8,$3F,$C8,$1F,$B0
 $7878 DEFB $0F,$78,$1E,$38,$00,$00,$00,$00
 $7880 DEFB $00,$00,$00,$00,$03,$C0,$07,$E0
 $7888 DEFB $03,$C0,$0F,$F0,$1F,$F8,$3F,$FC
 $7890 DEFB $2F,$F4,$1F,$F8,$3F,$FC,$3F,$FC
 $7898 DEFB $3F,$FC,$1F,$F8,$1E,$78,$0C,$30
 $78A0 DEFB $00,$00,$00,$00,$01,$E0,$03,$F0
 $78A8 DEFB $01,$E0,$07,$F8,$0F,$F8,$1F,$FC
 $78B0 DEFB $1F,$EE,$0F,$EE,$1F,$F2,$1F,$FC
 $78B8 DEFB $13,$FC,$0D,$F8,$1E,$F0,$1C,$78
 $78C0 DEFB $00,$00,$00,$00,$03,$C0,$07,$E0
 $78C8 DEFB $03,$C0,$0F,$F0,$1F,$F8,$3F,$FC
 $78D0 DEFB $2F,$F4,$1F,$F8,$3F,$FC,$3F,$FC
 $78D8 DEFB $3F,$FC,$1F,$F8,$1E,$78,$0C,$30
 $78E0 DEFB $00,$00,$00,$00,$07,$80,$0F,$C0
 $78E8 DEFB $07,$80,$1F,$E0,$3F,$F0,$3F,$F8
 $78F0 DEFB $77,$F8,$77,$F0,$4F,$F8,$3F,$F8
 $78F8 DEFB $3F,$C8,$1F,$B0,$0F,$78,$1E,$38

; Monty climbing
;
; #GRAFIXSTR($7900)(Monty_climbing)
b$7900 DEFB $33,$CC,$37,$EC,$3B,$DC,$3C,$3C
 $7908 DEFB $1F,$F8,$1F,$F8,$0F,$F0,$1F,$F8
 $7910 DEFB $3F,$FC,$3F,$FC,$33,$CC,$0D,$B0
 $7918 DEFB $1E,$78,$1E,$78,$0C,$30,$0C,$30
 $7920 DEFB $0F,$C0,$0F,$E8,$0F,$DC,$0E,$3C
 $7928 DEFB $07,$F8,$07,$F8,$07,$F8,$0F,$FC
 $7930 DEFB $1F,$FC,$1F,$FC,$1F,$CC,$1F,$B4
 $7938 DEFB $0F,$78,$06,$78,$00,$30,$00,$30
 $7940 DEFB $03,$D0,$37,$F8,$3B,$F8,$3C,$38
 $7948 DEFB $1F,$F0,$1F,$F0,$0F,$F0,$1F,$F8
 $7950 DEFB $3F,$FC,$3F,$FC,$3F,$FC,$1F,$FC
 $7958 DEFB $1E,$78,$0C,$30,$00,$00,$00,$00
 $7960 DEFB $23,$C8,$77,$EC,$7B,$DC,$3C,$38
 $7968 DEFB $1F,$F8,$0F,$F0,$1F,$F0,$3F,$F0
 $7970 DEFB $7F,$F8,$7F,$F8,$73,$F8,$2D,$F8
 $7978 DEFB $1E,$F0,$1E,$60,$0C,$00,$0C,$00
 $7980 DEFB $33,$CC,$37,$EC,$3B,$DC,$3C,$3C
 $7988 DEFB $1F,$F8,$1F,$F8,$0F,$F0,$1F,$F8
 $7990 DEFB $3F,$FC,$3F,$FC,$33,$CC,$0D,$B0
 $7998 DEFB $1E,$78,$1E,$78,$0C,$30,$0C,$30
 $79A0 DEFB $03,$F0,$17,$F0,$3B,$F0,$3C,$70
 $79A8 DEFB $1F,$E0,$1F,$E0,$1F,$E0,$3F,$F0
 $79B0 DEFB $3F,$F8,$3F,$F8,$33,$F8,$2D,$F8
 $79B8 DEFB $1E,$F0,$1E,$60,$0C,$00,$0C,$00
 $79C0 DEFB $0B,$C0,$1F,$EC,$1F,$DC,$1C,$3C
 $79C8 DEFB $0F,$F8,$0F,$F8,$0F,$F0,$1F,$F8
 $79D0 DEFB $3F,$FC,$3F,$FC,$3F,$FC,$1F,$F8
 $79D8 DEFB $1E,$78,$0C,$30,$00,$00,$00,$00
 $79E0 DEFB $13,$C4,$37,$EE,$3B,$DE,$1C,$3C
 $79E8 DEFB $1F,$F8,$0F,$F0,$0F,$F8,$0F,$FC
 $79F0 DEFB $1F,$FE,$1F,$FE,$1F,$CE,$1F,$B4
 $79F8 DEFB $0F,$78,$06,$78,$00,$30,$00,$30

; Hammer
;
; #GRAFIX($7A00)(Hammer)
b$7A00 DEFB $01,$C0,$01,$C0,$01,$C0,$01,$C0
 $7A08 DEFB $01,$C0,$01,$C0,$01,$C0,$01,$C0
 $7A10 DEFB $01,$C0,$01,$C0,$01,$C4,$00,$0C
 $7A18 DEFB $E3,$F8,$EF,$F8,$EF,$F0,$E3,$E0

; Drill
;
; #GRAFIX($7A20)(Drill)
b$7A20 DEFB $00,$00,$00,$00,$00,$7E,$15,$C3
 $7A28 DEFB $EB,$FD,$51,$FD,$00,$FF,$00,$7E
 $7A30 DEFB $00,$1C,$00,$3C,$00,$3C,$00,$1C
 $7A38 DEFB $00,$1C,$00,$00,$00,$00,$00,$00

; Pick
;
; #GRAFIX($7A40)(Pick)
b$7A40 DEFB $03,$80,$01,$80,$01,$80,$01,$80
 $7A48 DEFB $01,$80,$01,$80,$01,$80,$01,$80
 $7A50 DEFB $81,$80,$81,$80,$C1,$80,$61,$80
 $7A58 DEFB $31,$80,$1E,$00,$0F,$E0,$01,$FE

; Scroll
;
; #GRAFIX($7A60)(Scroll)
b$7A60 DEFB $00,$00,$00,$00,$01,$80,$07,$E0
 $7A68 DEFB $19,$B0,$77,$F0,$9C,$B8,$8B,$F8
 $7A70 DEFB $6C,$F8,$07,$FC,$07,$EC,$07,$9E
 $7A78 DEFB $03,$7F,$03,$FC,$01,$F0,$00,$C0

; Axe
;
; #GRAFIX($7A80)(Axe)
b$7A80 DEFB $7F,$E0,$9F,$60,$9F,$60,$9F,$60
 $7A88 DEFB $9E,$20,$98,$C0,$60,$E0,$00,$E0
 $7A90 DEFB $00,$E0,$00,$E0,$00,$E0,$01,$E0
 $7A98 DEFB $01,$E0,$01,$E0,$01,$E0,$01,$E0

; Detenator
;
; #GRAFIX($7AA0)(Detenator)
b$7AA0 DEFB $00,$00,$00,$00,$00,$7C,$00,$10
 $7AA8 DEFB $00,$10,$00,$10,$00,$EC,$01,$7E
 $7AB0 DEFB $00,$81,$01,$41,$00,$81,$01,$41
 $7AB8 DEFB $00,$81,$01,$41,$00,$81,$01,$41

; Dynamite
;
; #GRAFIX($7AC0)(Dynamite)
b$7AC0 DEFB $00,$88,$00,$34,$00,$40,$03,$8A
 $7AC8 DEFB $05,$C0,$05,$E4,$0B,$C0,$0B,$C0
 $7AD0 DEFB $17,$80,$17,$80,$2F,$00,$2F,$00
 $7AD8 DEFB $5E,$00,$3E,$00,$0C,$00,$00,$00

; Stick
;
; #GRAFIX($7AE0)(Stick)
b$7AE0 DEFB $00,$04,$00,$08,$00,$1C,$00,$28
 $7AE8 DEFB $00,$70,$00,$A8,$01,$D0,$02,$A0
 $7AF0 DEFB $07,$40,$0A,$A0,$1D,$40,$38,$80
 $7AF8 DEFB $78,$00,$F0,$00,$E0,$00,$40,$00

; Club
;
; #GRAFIX($7B00)(Club)
b$7B00 DEFB $3C,$00,$7E,$C0,$FF,$80,$FB,$00
 $7B08 DEFB $FC,$80,$FF,$80,$7F,$C0,$3F,$C0
 $7B10 DEFB $0F,$E0,$13,$E0,$30,$F0,$00,$38
 $7B18 DEFB $00,$1C,$00,$0F,$00,$07,$00,$06

; Shovel
;
; #GRAFIX($7B20)(Shovel)
b$7B20 DEFB $03,$C0,$01,$80,$01,$80,$01,$80
 $7B28 DEFB $01,$80,$01,$80,$0F,$F0,$1F,$F8
 $7B30 DEFB $02,$40,$02,$40,$3E,$5C,$3E,$7E
 $7B38 DEFB $47,$FE,$F8,$E2,$AF,$1D,$BB,$FF

; Bucket
;
; #GRAFIX($7B40)(Static_bucket)
b$7B40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7B48 DEFB $00,$00,$00,$00,$7F,$F0,$BF,$E8
 $7B50 DEFB $C7,$E8,$78,$10,$7F,$E0,$7F,$E0
 $7B58 DEFB $7F,$E0,$3F,$C0,$3F,$C0,$3F,$C0

; Spade
;
; #GRAFIX($7B60)(Spade)
b$7B60 DEFB $03,$F0,$03,$30,$03,$30,$01,$E0
 $7B68 DEFB $01,$E0,$00,$C0,$00,$C0,$00,$C0
 $7B70 DEFB $00,$C0,$00,$C0,$00,$C0,$00,$C0
 $7B78 DEFB $00,$C0,$00,$C0,$03,$30,$03,$F0

; Scissors
;
; #GRAFIX($7B80)(Scissors)
b$7B80 DEFB $0E,$70,$12,$48,$13,$48,$0F,$70
 $7B88 DEFB $03,$40,$03,$80,$01,$80,$01,$80
 $7B90 DEFB $01,$C0,$02,$C0,$02,$C0,$02,$C0
 $7B98 DEFB $02,$C0,$02,$40,$02,$40,$02,$40

; Key
;
; #GRAFIX($7BA0)(Key)
b$7BA0 DEFB $00,$00,$00,$00,$00,$00,$00,$1E
 $7BA8 DEFB $00,$33,$00,$3D,$00,$3D,$00,$3F
 $7BB0 DEFB $FF,$B3,$FF,$B3,$FF,$B3,$00,$3F
 $7BB8 DEFB $00,$3D,$00,$3D,$00,$33,$00,$1E

; Shower head
;
; #GRAFIX($7BC0)(Shower_head)
b$7BC0 DEFB $80,$00,$C0,$00,$80,$00,$E0,$00
 $7BC8 DEFB $F0,$00,$B9,$F0,$D6,$B8,$8D,$64
 $7BD0 DEFB $0E,$84,$1F,$28,$1E,$88,$1C,$10
 $7BD8 DEFB $1D,$60,$08,$40,$09,$80,$06,$00

; Plant
;
; #GRAFIX($7BE0)(Plant)
b$7BE0 DEFB $00,$00,$1E,$00,$31,$06,$60,$89
 $7BE8 DEFB $C2,$49,$C5,$49,$C4,$51,$C4,$46
 $7BF0 DEFB $62,$48,$61,$90,$60,$20,$60,$40
 $7BF8 DEFB $63,$5E,$64,$41,$F4,$40,$F3,$80

; Start room graphics
;
; #UDG$7C00,7,,2 #UDG$7C10,7,,2 #UDG$7C20,7,,2 #UDG$7C30,7,,2 #UDG$7C40,7,,2
; #UDG$7C50,7,,2 #UDG$7C60,7,,2 #UDG$7C70,7,,2
; .
; #UDG$7C80,7,,2 #UDG$7C90,7,,2 #UDG$7CA0,7,,2 #UDG$7CB0,7,,2 #UDG$7CC0,7,,2
; #UDG$7CD0,7,,2 #UDG$7CE0,7,,2 #UDG$7CF0,7,,2
; .
; #UDG$7D00,7,,2 #UDG$7D10,7,,2 #UDG$7D20,7,,2 #UDG$7D30,7,,2 #UDG$7D40,7,,2
; #UDG$7D50,7,,2 #UDG$7D60,7,,2 #UDG$7D70,7,,2
; .
; #UDG$7D80,7,,2 #UDG$7D90,7,,2 #UDG$7DA0,7,,2 #UDG$7DB0,7,,2 #UDG$7DC0,7,,2
; #UDG$7DD0,7,,2 #UDG$7DE0,7,,2 #UDG$7DF0,7,,2
; .
; #UDG$7E00,7,,2 #UDG$7E10,7,,2 #UDG$7E20,7,,2 #UDG$7E30,7,,2 #UDG$7E40,7,,2
; #UDG$7E50,7,,2 #UDG$7E60,7,,2 #UDG$7E70,7,,2
; .
; #UDG$7E80,7,,2 #UDG$7E90,7,,2 #UDG$7EA0,7,,2 #UDG$7EB0,7,,2 #UDG$7EC0,7,,2
; #UDG$7ED0,7,,2 #UDG$7EE0,7,,2 #UDG$7EF0,7,,2
; .
; #UDG$7F00,7,,2 #UDG$7F10,7,,2 #UDG$7F20,7,,2 #UDG$7F30,7,,2 #UDG$7F40,7,,2
; #UDG$7F50,7,,2 #UDG$7F60,7,,2 #UDG$7F70,7,,2
; .
; #UDG$7F80,7,,2 #UDG$7F90,7,,2 #UDG$7FA0,7,,2 #UDG$7FB0,7,,2 #UDG$7FC0,7,,2
; #UDG$7FD0,7,,2 #UDG$7FE0,7,,2 #UDG$7FF0,7,,2
b$7C00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7C08 DEFB $80,$C0,$E0,$F0,$F8,$FC,$FE,$FF
 $7C10 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$EF
 $7C18 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $7C20 DEFB $00,$00,$00,$00,$00,$00,$20,$20
 $7C28 DEFB $03,$01,$00,$00,$00,$00,$00,$00
 $7C30 DEFB $00,$00,$00,$10,$13,$27,$FF,$FE
 $7C38 DEFB $70,$FC,$FF,$FF,$FF,$FF,$FF,$00
 $7C40 DEFB $00,$00,$00,$FF,$FF,$FF,$FF,$0C
 $7C48 DEFB $00,$00,$00,$C0,$FE,$E0,$80,$00
 $7C50 DEFB $1F,$1F,$1F,$0F,$07,$00,$00,$00
 $7C58 DEFB $00,$00,$00,$00,$00,$00,$3F,$3D
 $7C60 DEFB $00,$00,$00,$00,$3E,$FF,$FF,$FF
 $7C68 DEFB $00,$00,$00,$70,$F8,$FB,$FF,$FF
 $7C70 DEFB $00,$00,$00,$00,$00,$C0,$E0,$60
 $7C78 DEFB $00,$00,$3F,$20,$20,$20,$20,$20
 $7C80 DEFB $00,$00,$F0,$10,$10,$10,$10,$10
 $7C88 DEFB $DF,$37,$0B,$0F,$03,$05,$07,$07
 $7C90 DEFB $00,$00,$00,$00,$00,$03,$3F,$7F
 $7C98 DEFB $A0,$C0,$80,$00,$00,$00,$00,$00
 $7CA0 DEFB $00,$00,$00,$03,$0F,$17,$27,$C7
 $7CA8 DEFB $E0,$80,$00,$00,$00,$00,$00,$00
 $7CB0 DEFB $01,$00,$00,$00,$00,$00,$00,$00
 $7CB8 DEFB $FC,$70,$00,$00,$00,$00,$00,$00
 $7CC0 DEFB $FF,$FE,$0E,$00,$00,$00,$00,$00
 $7CC8 DEFB $60,$E0,$00,$00,$00,$00,$00,$00
 $7CD0 DEFB $23,$2C,$38,$34,$23,$23,$34,$3F
 $7CD8 DEFB $10,$D0,$70,$B0,$10,$10,$B0,$FF
 $7CE0 DEFB $00,$00,$00,$00,$00,$00,$00,$C0
 $7CE8 DEFB $3C,$3F,$3F,$03,$00,$00,$00,$00
 $7CF0 DEFB $FF,$FF,$FF,$FF,$3F,$1F,$0F,$00
 $7CF8 DEFB $F7,$FF,$FF,$FF,$FF,$FF,$FF,$DF
 $7D00 DEFB $FC,$FE,$FF,$FF,$FF,$FF,$FF,$FF
 $7D08 DEFB $7F,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $7D10 DEFB $03,$0C,$00,$00,$00,$00,$00,$00
 $7D18 DEFB $07,$07,$0F,$07,$07,$07,$07,$07
 $7D20 DEFB $13,$0F,$05,$05,$0F,$09,$19,$11
 $7D28 DEFB $38,$E4,$42,$81,$FF,$24,$42,$81
 $7D30 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $7D38 DEFB $7F,$1F,$00,$00,$00,$00,$00,$00
 $7D40 DEFB $FF,$FF,$FF,$7F,$3F,$0F,$00,$00
 $7D48 DEFB $FF,$FF,$FF,$FF,$FF,$FC,$00,$00
 $7D50 DEFB $F8,$F0,$F0,$E0,$C0,$00,$00,$00
 $7D58 DEFB $F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0
 $7D60 DEFB $00,$00,$00,$00,$00,$01,$01,$03
 $7D68 DEFB $3F,$21,$41,$C1,$81,$81,$01,$01
 $7D70 DEFB $FF,$81,$66,$18,$66,$81,$FF,$81
 $7D78 DEFB $00,$00,$00,$01,$07,$0F,$3F,$F9
 $7D80 DEFB $0F,$3F,$FF,$FB,$FE,$6E,$FD,$D5
 $7D88 DEFB $80,$64,$0B,$20,$8C,$29,$84,$5A
 $7D90 DEFB $FC,$74,$0B,$20,$8C,$29,$84,$5A
 $7D98 DEFB $8F,$67,$0B,$20,$8C,$29,$84,$5A
 $7DA0 DEFB $00,$00,$00,$C0,$F0,$F8,$DF,$ED
 $7DA8 DEFB $00,$00,$00,$00,$00,$00,$00,$80
 $7DB0 DEFB $00,$00,$1B,$1F,$1B,$0D,$0F,$0D
 $7DB8 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$00,$00
 $7DC0 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$3F,$3F
 $7DC8 DEFB $00,$00,$00,$00,$1F,$3F,$7F,$FF
 $7DD0 DEFB $00,$00,$00,$00,$FF,$FF,$FF,$FF
 $7DD8 DEFB $00,$00,$00,$00,$80,$C0,$E0,$F0
 $7DE0 DEFB $06,$04,$0C,$08,$1F,$10,$30,$20
 $7DE8 DEFB $01,$01,$01,$01,$FF,$01,$01,$01
 $7DF0 DEFB $66,$18,$66,$81,$FF,$81,$66,$18
 $7DF8 DEFB $01,$03,$03,$07,$0D,$0E,$1B,$3B
 $7E00 DEFB $80,$64,$0B,$20,$8C,$29,$84,$4A
 $7E08 DEFB $81,$64,$0B,$20,$8C,$29,$84,$5A
 $7E10 DEFB $E0,$F0,$F8,$DC,$BF,$FB,$9D,$FB
 $7E18 DEFB $00,$00,$00,$00,$00,$C0,$E0,$30
 $7E20 DEFB $0B,$1F,$1B,$17,$2F,$37,$2F,$37
 $7E28 DEFB $18,$18,$18,$18,$18,$18,$FF,$FF
 $7E30 DEFB $00,$00,$00,$00,$00,$00,$FF,$FF
 $7E38 DEFB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F
 $7E40 DEFB $55,$AE,$5D,$AE,$5D,$AA,$55,$AA
 $7E48 DEFB $55,$AB,$57,$AB,$57,$AA,$55,$AA
 $7E50 DEFB $50,$A0,$50,$A0,$51,$A1,$53,$A6
 $7E58 DEFB $60,$40,$C0,$80,$80,$00,$00,$00
 $7E60 DEFB $01,$01,$01,$01,$01,$01,$01,$01
 $7E68 DEFB $66,$81,$FF,$81,$66,$18,$66,$81
 $7E70 DEFB $01,$03,$00,$00,$00,$00,$00,$00
 $7E78 DEFB $FE,$FF,$35,$04,$00,$00,$00,$00
 $7E80 DEFB $FF,$7D,$9B,$0E,$08,$18,$10,$00
 $7E88 DEFB $EF,$B7,$19,$11,$00,$00,$00,$00
 $7E90 DEFB $00,$83,$B0,$80,$41,$33,$7F,$7F
 $7E98 DEFB $FF,$F9,$5E,$EF,$EF,$7E,$30,$30
 $7EA0 DEFB $FF,$DB,$F7,$3D,$F0,$00,$00,$00
 $7EA8 DEFB $FF,$3B,$AF,$F7,$E6,$7F,$1C,$00
 $7EB0 DEFB $FF,$F7,$3A,$FE,$CF,$00,$00,$00
 $7EB8 DEFB $EE,$FB,$9F,$D6,$FE,$6F,$03,$00
 $7EC0 DEFB $E7,$FE,$BF,$DB,$B8,$E8,$E0,$00
 $7EC8 DEFB $F8,$FE,$97,$FF,$3B,$00,$00,$00
 $7ED0 DEFB $6F,$00,$00,$00,$00,$00,$00,$00
 $7ED8 DEFB $18,$18,$18,$18,$18,$18,$18,$18
 $7EE0 DEFB $7F,$37,$1B,$0B,$00,$05,$05,$07
 $7EE8 DEFB $04,$04,$00,$00,$00,$00,$00,$00
 $7EF0 DEFB $01,$01,$00,$00,$00,$00,$00,$00
 $7EF8 DEFB $80,$80,$00,$00,$00,$00,$00,$00
 $7F00 DEFB $00,$00,$00,$00,$00,$00,$00,$03
 $7F08 DEFB $FE,$FE,$FC,$F8,$F0,$80,$00,$00
 $7F10 DEFB $00,$00,$00,$01,$03,$0F,$1F,$1F
 $7F18 DEFB $00,$00,$00,$00,$00,$00,$80,$80
 $7F20 DEFB $00,$00,$00,$02,$02,$02,$12,$1B
 $7F28 DEFB $3F,$3F,$1F,$0F,$07,$03,$11,$18
 $7F30 DEFB $10,$00,$00,$00,$00,$00,$00,$00
 $7F38 DEFB $0F,$0F,$0F,$0F,$1F,$1F,$1F,$3F
 $7F40 DEFB $FF,$FF,$FF,$FF,$EC,$7E,$C5,$00
 $7F48 DEFB $FF,$FF,$FF,$FB,$ED,$3F,$12,$00
 $7F50 DEFB $FF,$FF,$FF,$EF,$BF,$B2,$A2,$00
 $7F58 DEFB $FF,$FF,$FF,$7B,$F7,$CC,$44,$00
 $7F60 DEFB $FF,$FF,$EF,$FE,$FB,$4D,$25,$10
 $7F68 DEFB $FF,$FF,$7E,$DF,$DF,$4C,$08,$00
 $7F70 DEFB $FF,$FF,$EE,$FE,$FF,$FF,$22,$00
 $7F78 DEFB $FF,$FF,$FF,$F7,$F9,$FE,$88,$00
 $7F80 DEFB $FF,$FF,$FF,$EF,$F7,$7F,$09,$00
 $7F88 DEFB $FF,$FF,$FF,$7F,$FF,$CE,$22,$00
 $7F90 DEFB $FF,$FF,$FF,$CF,$BD,$FD,$59,$50
 $7F98 DEFB $FF,$FF,$EF,$FF,$BF,$B7,$F3,$21
 $7FA0 DEFB $FF,$FF,$FE,$EF,$77,$FD,$1C,$0C
 $7FA8 DEFB $00,$00,$FF,$FF,$FF,$FF,$FF,$FF
 $7FB0 DEFB $3F,$3F,$FF,$FF,$FF,$FF,$FF,$FF
 $7FB8 DEFB $01,$03,$07,$0E,$1C,$3F,$70,$E0
 $7FC0 DEFB $FF,$FF,$41,$22,$14,$FF,$00,$00
 $7FC8 DEFB $FF,$FF,$82,$44,$28,$FF,$00,$00
 $7FD0 DEFB $80,$C0,$E0,$70,$38,$FC,$0E,$07
 $7FD8 DEFB $00,$00,$38,$1E,$FF,$FF,$FF,$FF
 $7FE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7FE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7FF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7FF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Display input options and wait to start
;
; Used by the routine at #R$F7D6.
c$8000 DI            ; Disable interrupts.
 $8001 CALL $8092    ; Display options.
 $8004 LD IX,$8127   ; #N8127 - default option.
 $8008 LD A,$01      ; { Set default option to 1.
 $800A CALL $FF00    ; }
 $800D EI            ; Re-enable interrupts.
*$800E LD BC,$EFFE   ; { Check top right of keyboard.
 $8011 IN A,(C)      ; }
 $8013 BIT 0,A       ; Was '0' pressed?
 $8015 RET Z         ; Return if so to start the game.
 $8016 CALL $8069    ; Toggle the display flashing.
 $8019 LD BC,$F7FE   ; Check top left of keyboard.
 $801C IN A,(C)      ; { If any keys were pressed,
 $801E AND $1F       ; they will end up with positive
 $8020 XOR $1F       ; bits after this. }
 $8022 JR Z,$800E    ; Jump back if no keys pressed.
 $8024 BIT 0,A       ; Was "1" pressed?
 $8026 JR Z,$803B    ; Jump if not.
 $8028 LD A,(IX+$03) ; { Unflash the current selection.
 $802B LD C,$47      ;
 $802D CALL $80FF    ; }
 $8030 LD A,$01      ; { Set option 1.
 $8032 LD ($82A3),A  ; }
 $8035 LD IX,$8127   ; { Point to first option
 $8039 JR $800E      ; and loop back? }
*$803B BIT 1,A       ; Was "2" pressed?
 $803D JR Z,$8052    ; Jump if not.
 $803F LD A,(IX+$03) ; { Unflash the current selection.
 $8042 LD C,$47      ;
 $8044 CALL $80FF    ; }
 $8047 LD A,$02      ; { Set option 2.
 $8049 LD ($82A3),A  ; }
 $804C LD IX,$812C   ; { Point to second option
 $8050 JR $800E      ; and loop back. }
*$8052 BIT 2,A       ; Was "3" pressed?
 $8054 JR Z,$800E    ; Jump back if not.
 $8056 LD A,(IX+$03) ; { Unflash the current selection.
 $8059 LD C,$47      ;
 $805B CALL $80FF    ; }
 $805E LD A,$03      ; { Set option 3.
 $8060 LD ($82A3),A  ; }
 $8063 LD IX,$8131   ; { Point to third option
 $8067 JR $800E      ; and loop back. }

; Toggle the display on every interrupt so the selected option is flashing
;
; Used by the routine at #R$8000.
c$8069 HALT          ; Wait for interrupts.
 $806A LD A,($82A4)  ; { Loop the cycle counter through 0 - #N$F.
 $806D INC A         ;
 $806E AND $0F       ;
 $8070 LD ($82A4),A  ; }
 $8073 RET NZ        ; Return if it is not time to change.
 $8074 LD A,($82A5)  ; { Toggle the state flag between 0 and 1.
 $8077 LD B,A        ;
 $8078 LD A,$01      ;
 $807A SUB B         ;
 $807B LD ($82A5),A  ; }
 $807E OR A          ; { If the state is 1, print a blank character.
 $807F JR Z,$808A    ; }
 $8081 LD A,(IX+$03) ; { Otherwise, display the string.
 $8084 LD C,$47      ;
 $8086 CALL $80FF    ; }
 $8089 RET           ;

; Blank a character on screen
;
; Used by the routine at #R$8069.
c$808A LD A,$00      ; Empty character.
 $808C LD C,$00      ; One character.
 $808E CALL $80FF    ; Print it.
 $8091 RET           ;

; Print an option on the intro screen
;
; Used by the routine at #R$8000.
c$8092 LD IX,$8122   ; #R$8122 = options data
 $8096 LD IY,$826B   ; #R$826B = strings to print
 $809A LD B,$05      ; Five lines
*$809C PUSH BC       ; Remember number of lines.
; This entry point is used by the routines at #R$91E8 (printing the score) and #R$949E (printing the number of lives).
*$809D LD H,$00      ; { Put the Y position in HL.
 $809F LD L,(IX+$01) ; }
 $80A2 ADD HL,HL     ; Double it to point at a whole word.
 $80A3 LD DE,$EA60   ; { Add the base pointer to screen addresses (#R$EA60).
 $80A6 ADD HL,DE     ; so HL now points to the right row on screen. }
 $80A7 LD D,$00      ; { Put the X position in DE.
 $80A9 LD E,(IX+$00) ; }
 $80AC LD A,(HL)     ; { Extract the screen address for this row
 $80AD INC HL        ; and put it in HL.
 $80AE LD H,(HL)     ;
 $80AF LD L,A        ; }
 $80B0 ADD HL,DE     ; Add the column, so HL points to the correct place on screen.
*$80B1 LD A,(IY+$00) ; Get the character to print.
 $80B4 RES 7,A       ; Bit 7 is used as a string terminator, not used here.
 $80B6 CALL $80D1    ; Print the character.
 $80B9 LD A,(IY+$00) ; Get the character again.
 $80BC INC IY        ; Move to the next character.
 $80BE INC HL        ; Move to the next screen position.
 $80BF BIT 7,A       ; { If bit 7 is not set,
 $80C1 JR Z,$80B1    ; loop back to print the next character. }
 $80C3 INC IX        ; { Move to the next location data.
 $80C5 INC IX        ;
 $80C7 INC IX        ;
 $80C9 INC IX        ;
 $80CB INC IX        ; }
 $80CD POP BC        ; Restore the number of lines.
 $80CE DJNZ $809C    ; { Loop back round if there is more to do, otherwise exit.
 $80D0 RET           ; }

; Print a character on screen
;
; Used by the routine at #R$8092.
;
; A ID of the character to print.
; HL Location on screen. 
c$80D1 PUSH HL       ; Remember the screen location.
 $80D2 LD DE,$813B   ; #R$813B = character set
 $80D5 LD L,A        ; { Multiply the ID by 8
 $80D6 LD H,$00      ; to get the right offset
 $80D8 ADD HL,HL     ; and store this in DE.
 $80D9 ADD HL,HL     ;
 $80DA ADD HL,HL     ;
 $80DB ADD HL,DE     ;
 $80DC EX DE,HL      ; }
 $80DD POP HL        ; Restore screen location.
 $80DE PUSH HL       ; Remember screen location (again).
 $80DF LD B,$05      ; Five lines.
*$80E1 LD A,(DE)     ; Get the current line.
 $80E2 LD (HL),A     ; Copy it to screen.
 $80E3 INC DE        ; Next line in data.
 $80E4 INC H         ; Next line on screen.
 $80E5 DJNZ $80E1    ; Repeat for the right number of lines.
 $80E7 POP HL        ; Restore screen location.
 $80E8 PUSH HL       ; Remember screen location again.
 $80E9 LD BC,$FD20   ; {Subtract #N$2E0 to move up a third.
 $80EC ADD HL,BC     ; }
 $80ED LD B,$03      ; Three remaining lines.
*$80EF LD A,(DE)     ; Get the current line.
 $80F0 LD (HL),A     ; Copy it to screen.
 $80F1 INC DE        ; Next line in data.
 $80F2 INC H         ; Next line on screen.
 $80F3 DJNZ $80EF    ; Repeat for the right number of lines.
 $80F5 LD C,$47      ; Lower attribute is always #N$47
 $80F7 LD A,(IX+$03) ; Get the upper attribute.
 $80FA CALL $80FF    ; Display the attributes.
 $80FD POP HL        ; { Clean up the stack and return.
 $80FE RET           ; }

; Put a text character's attributes on screen
;
; Used by the routines at #R$8000, #R$8069, #R$808A and #R$80D1.
;
; IX Pointer to buffer of string data
; A upper attribute
; C lower attribute
c$80FF LD B,(IX+$02) ; Put the attribute in #REGb.
 $8102 LD L,(IX+$04) ; Put the attribute position in #REGl. 
 $8105 LD H,$00      ; { Multiply this by 32 to get a row offset
 $8107 ADD HL,HL     ; and put it in #REGhl.
 $8108 ADD HL,HL     ;
 $8109 ADD HL,HL     ;
 $810A ADD HL,HL     ;
 $810B ADD HL,HL     ; }
 $810C LD D,$00      ; { Add the x position.
 $810E LD E,(IX+$00) ;
 $8111 ADD HL,DE     ; }
 $8112 LD DE,$5800   ; { Add the base address for the attribute buffer.
 $8115 ADD HL,DE     ; }
 $8116 LD DE,$0020   ; Make #REGde the number of characters to advance by for each row.
*$8119 LD (HL),A     ; Set the upper attribute.
 $811A ADD HL,DE     ; Move to the next row.
 $811B LD (HL),C     ; Set the lower attribute.
 $811C SBC HL,DE     ; Move back to the first row to set the next column.
 $811E INC HL        ; Move to the next column.
 $811F DJNZ $8119    ; { Loop until all characters have been drawn.
 $8121 RET           ; }

; Intro string data (5 lines)
;
; Format is x position, y position, attribute, depth, attribute position
b$8122 DEFB $0C,$AC,$07,$42,$02
 $8127 DEFB $05,$8C,$0C,$43,$06
 $812C DEFB $05,$7C,$0C,$44,$08
 $8131 DEFB $05,$6C,$0C,$45,$0A
 $8136 DEFB $05,$4C,$0D,$46,$0E

; Character set
;
; #UDGARRAY39($813B-$826A-8-8)(charset)
b$813B DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; #N$00 #UDG(#PC)
 $8143 DEFB $7C,$FE,$C6,$C6,$FE,$FE,$C6,$C6 ; #N$01 #UDG(#PC)
 $814B DEFB $FC,$FE,$C6,$FC,$FE,$C6,$FE,$FC ; #N$02 #UDG(#PC)
 $8153 DEFB $7C,$FE,$C6,$C0,$C0,$C6,$FE,$7C ; #N$03 #UDG(#PC)
 $815B DEFB $F8,$FC,$CE,$C6,$C6,$CE,$FC,$F8 ; #N$04 #UDG(#PC)
 $8163 DEFB $FE,$FE,$C0,$FC,$FC,$C0,$FE,$FE ; #N$05 #UDG(#PC)
 $816B DEFB $FE,$FE,$C0,$FC,$FC,$C0,$C0,$C0 ; #N$06 #UDG(#PC)
 $8173 DEFB $7C,$FE,$C6,$C0,$DE,$C6,$FE,$7C ; #N$07 #UDG(#PC)
 $817B DEFB $C6,$C6,$C6,$FE,$FE,$C6,$C6,$C6 ; #N$08 #UDG(#PC)
 $8183 DEFB $FE,$FE,$18,$18,$18,$18,$FE,$FE ; #N$09 #UDG(#PC)
 $818B DEFB $06,$06,$06,$06,$C6,$C6,$FE,$7C ; #N$0A #UDG(#PC)
 $8193 DEFB $CE,$DC,$F8,$F0,$F8,$DC,$CE,$C6 ; #N$0B #UDG(#PC)
 $819B DEFB $C0,$C0,$C0,$C0,$C0,$C0,$FE,$FE ; #N$0C #UDG(#PC)
 $81A3 DEFB $C6,$EE,$FE,$FE,$C6,$C6,$C6,$C6 ; #N$0D #UDG(#PC)
 $81AB DEFB $C6,$E6,$F6,$FE,$DE,$CE,$C6,$C6 ; #N$0E #UDG(#PC)
 $81B3 DEFB $7C,$FE,$EE,$C6,$C6,$EE,$FE,$7C ; #N$0F #UDG(#PC)
 $81BB DEFB $FC,$FE,$C6,$C6,$FE,$FC,$C0,$C0 ; #N$10 #UDG(#PC)
 $81C3 DEFB $18,$18,$08,$10,$00,$00,$00,$00 ; #N$11 #UDG(#PC)
 $81CB DEFB $FC,$FE,$C6,$C6,$FC,$FC,$CE,$C6 ; #N$12 #UDG(#PC)
 $81D3 DEFB $3C,$7C,$60,$7C,$3E,$06,$3E,$3C ; #N$13 #UDG(#PC)
 $81DB DEFB $FE,$FE,$30,$30,$30,$30,$30,$30 ; #N$14 #UDG(#PC)
 $81E3 DEFB $C6,$C6,$C6,$C6,$C6,$C6,$FE,$7C ; #N$15 #UDG(#PC)
 $81EB DEFB $C6,$C6,$C6,$C6,$C6,$EE,$7C,$38 ; #N$16 #UDG(#PC)
 $81F3 DEFB $C6,$C6,$C6,$C6,$D6,$FE,$FE,$6C ; #N$17 #UDG(#PC)
 $81FB DEFB $C6,$EE,$6C,$7C,$38,$7C,$EE,$C6 ; #N$18 #UDG(#PC)
 $8203 DEFB $84,$CC,$FC,$78,$30,$30,$30,$30 ; #N$19 #UDG(#PC)
 $820B DEFB $FE,$FE,$1C,$18,$30,$70,$FE,$FE ; #N$1A #UDG(#PC)
 $8213 DEFB $7C,$FE,$CE,$DE,$F6,$E6,$FE,$7C ; #N$1B #UDG(#PC)
 $821B DEFB $08,$18,$38,$38,$18,$18,$7E,$7E ; #N$1C #UDG(#PC)
 $8223 DEFB $7C,$FE,$C6,$3E,$FC,$C0,$FE,$FE ; #N$1D #UDG(#PC)
 $822B DEFB $7C,$FE,$C6,$0C,$0E,$C6,$FE,$7C ; #N$1E #UDG(#PC)
 $8233 DEFB $0C,$1C,$3C,$6C,$CC,$FE,$FE,$0C ; #N$1F #UDG(#PC)
 $823B DEFB $FE,$FE,$C0,$FC,$FE,$06,$FE,$FC ; #N$20 #UDG(#PC)
 $8243 DEFB $7C,$FC,$C0,$FC,$FE,$C6,$FE,$7C ; #N$21 #UDG(#PC)
 $824B DEFB $FE,$FE,$06,$0C,$18,$30,$30,$30 ; #N$22 #UDG(#PC)
 $8253 DEFB $7C,$FE,$C6,$7C,$FE,$C6,$FE,$7C ; #N$23 #UDG(#PC)
 $825B DEFB $7C,$FE,$C6,$FE,$7E,$06,$3E,$3C ; #N$24 #UDG(#PC)
 $8263 DEFB $00,$00,$00,$30,$30,$00,$30,$30 ; #N$25 #UDG(#PC)

; Intro string text
;
; "OPTIONS"
; "1:  KEYBOARD"
; "2:  KEMPSTON"
; "3:  SINCLAIR"
; "0:  PLAY GAME"
b$826B DEFB $0F,$10,$14,$09,$0F,$0E,$93
 $8272 DEFB $1C,$25,$00,$00,$0B,$05,$19,$02,$0F,$01,$12,$84
 $827E DEFB $1D,$25,$00,$00,$0B,$05,$0D,$10,$13,$14,$0F,$8E
 $828A DEFB $1E,$25,$00,$00,$13,$09,$0E,$03,$0C,$01,$09,$92
 $8296 DEFB $1B,$25,$00,$00,$10,$0C,$01,$19,$00,$07,$01,$0D,$85

; Game input : 0 - keyboard, 1 - Kempston, 2 - Sinclair
g$82A3 DEFB $01

; Frame counter for input options
;
; Cycles between 00 and #N$0F. Used by the routine at #R$82A5.
g$82A4 DEFB $0E

; Set to 0 to print an option, or 1 to hide it
;
; Used by the routine at #R$82A5.
g$82A5 DEFB $00

; Check for player input
;
; Used by the routines at #R$940C and #R$CD41.
c$82A6 LD HL,$832E   ; #R$832E is the last player input.
 $82A9 LD D,$00      ; Default to "up" / "not jumping".
 $82AB LD A,($82A3)  ; Get the control type.
 $82AE CP $01        ; Is it keyboard?
 $82B0 JR NZ,$82EB   ; Jump forward if not.
; Check for keyboard input
 $82B2 LD BC,$FBFE   ; { Check for Q-T on the keyboard.
 $82B5 IN A,(C)      ; }
 $82B7 BIT 0,A       ; Was 'Q' pressed?
 $82B9 JR NZ,$82BE   ; Skip if not.
 $82BB LD (HL),D     ; { Set input to "up" and move forward.
 $82BC JR $82DE      ; }
*$82BE LD BC,$FDFE   ; Check for A-G on the keyboard.
 $82C1 INC D         ; Change flag to "down". 
 $82C2 IN A,(C)      ; Read the keyboard.
 $82C4 BIT 0,A       ; Was 'A' pressed?
 $82C6 JR NZ,$82CB   ; Skip if not.
 $82C8 LD (HL),D     ; { Set input to "down" and move forward.
 $82C9 JR $82DE      ; }
*$82CB LD BC,$DFFE   ; Check for P-Y on the keyboard.
 $82CE INC D         ; Change flag to "left".
 $82CF IN A,(C)      ; Read the keyboard.
 $82D1 BIT 1,A       ; Was 'O' pressed?
 $82D3 JR NZ,$82D8   ; Skip if not.
 $82D5 LD (HL),D     ; { Set input to "left" and move forward.
 $82D6 JR $82DE      ; }
*$82D8 BIT 0,A       ; Was 'P' pressed?
 $82DA JR NZ,$82DE   ; Skip if not.
 $82DC INC D         ; { Set input to "right".
 $82DD LD (HL),D     ; }
*$82DE LD BC,$7FFE   ; Read SPACE-B
 $82E1 IN A,(C)      ; Read the keyboard.
 $82E3 AND $1F       ; { Were any keys pressed?
 $82E5 XOR $1F       ; }
 $82E7 RET Z         ; Return if not.
 $82E8 SET 7,(HL)    ; { Set the "jump" bit and return.
 $82EA RET           ; }
; Check for joystick input
*$82EB CP $02        ; Is the input Kempston?
 $82ED JR NZ,$830D   ; Jump forward if not.
 $82EF IN A,($1F)    ; Read the Kempston interface
 $82F1 BIT 3,A       ; Was the joystick moved up?
 $82F3 JR Z,$82F8    ; Skip if not.
*$82F5 LD (HL),D     ; { Set input to "up" and move forward
 $82F6 JR $8307      ; to check the fire button. }
*$82F8 INC D         ; Change flag to "down"
 $82F9 BIT 2,A       ; Was the joystick moved down?
 $82FB JR NZ,$82F5   ; Set this input if so.
 $82FD INC D         ; Change flag to "left"
 $82FE BIT 1,A       ; Was the joystick moved left?
 $8300 JR NZ,$82F5   ; Set this input if so.
 $8302 INC D         ; Change flag to "right"
 $8303 BIT 0,A       ; Was the joystick moved right?
 $8305 JR NZ,$82F5   ; Set this input if so.
*$8307 BIT 4,A       ; Was the fire button pressed?
 $8309 RET Z         ; Return if not.
 $830A SET 7,(HL)    ; { Set the "jump" bit and return.
 $830C RET           ; }
; Check for Sinclair joystick input
*$830D LD BC,$F7FE   ; { Read 1-5 on the keyboard
 $8310 IN A,(C)      ; }
 $8312 BIT 3,A       ; Was '4' pressed?
 $8314 JR NZ,$8319   ; Skip if not.
*$8316 LD (HL),D     ; { Set input to "up" and move forward.
 $8317 JR $8328      ; }
*$8319 INC D         ; Change state to "down".
 $831A BIT 2,A       ; Was '3' pressed?
 $831C JR Z,$8316    ; Set this input if so.
 $831E INC D         ; Change state to "left".
 $831F BIT 0,A       ; Was '1' pressed?
 $8321 JR Z,$8316    ; Set this input if so.
 $8323 INC D         ; Change state to "right".
 $8324 BIT 1,A       ; Was '2' pressed?
 $8326 JR Z,$8316    ; Set this input if so.
*$8328 BIT 4,A       ; Was '5' pressed?
 $832A RET NZ        ; Return if not.
 $832B SET 7,(HL)    ; { Set the "jump" bit and return.
 $832D RET           ; }

; Last input data
;
; #TABLE( default, center) { =h value | =h description } { 0 | up } { 1 | down } { 2 | left } { 3 | right } { 4 | no movement } TABLE#
; Bit 7 is set when jumping.
;
; .
;
; Set by the routine in #R$82A6, referenced by the routines at #R$8395, #R$83AD, #R$83B5, #R$8D94, #R$8A63, #R$8B1F and #R$917A.
g$832E DEFB $04

; Unused
u$832F LD A,($848F)  ; Get the current position off the ground.
 $8332 OR A          ; Is it zero?
 $8333 JP NZ,$83B5   ; Jump forward if not.
 $8336 LD A,($832E)  ; Get the last movement (#R$832E).
 $8339 BIT 7,A       ; Was "jump" pressed?
 $833B JR Z,$8342    ; Jump forward if not.
 $833D RES 7,A       ; { Reset the jump flag.
 $833F LD ($848F),A  ; }
*$8342 LD A,($832E)  ; { Get the last movement without the jump bit.
 $8345 AND $07       ; }
 $8347 CP $04        ; Was there any movement?
 $8349 RET Z         ; Return if not.
 $834A LD B,A        ;
 $834B LD A,($849B)  ;
 $834E CP B          ;
 $834F JR NZ,$83AD   ;
 $8351 CP $02        ;
 $8353 JR NZ,$837B   ;
 $8355 LD A,($8490)  ;
 $8358 DEC A         ;
 $8359 CP $3F        ;
 $835B JP Z,$870E    ;
 $835E CP $B8        ;
 $8360 JP Z,$86BC    ;
 $8363 LD ($8490),A  ;
 ; This entry point is used by the routine at #R$83AD.
*$8366 LD A,($848E)  ;
 $8369 INC A         ;
*$836A AND $07       ;
 $836C LD ($848E),A  ;
 $836F SRL A         ;
 $8371 LD DE,$849C   ;
 $8374 CALL $8395    ;
 $8377 LD ($848C),HL ;
 $837A RET           ;
*$837B CP $03        ;
 $837D RET NZ        ;
 $837E LD A,($8490)  ;
 $8381 INC A         ;
 $8382 CP $D8        ;
 $8384 JR NZ,$8387   ;
 $8386 DEC A         ;
*$8387 CP $B8        ;
 $8389 JP Z,$86BC    ;
 $838C LD ($8490),A  ;
 $838F LD A,($848E)  ;
 $8392 DEC A         ;
 $8393 JR $836A      ;

; Select the graphic for Monty
;
; Used by the routines at #R$8A0A and #R$8A63.
;
; A Frame number ( 0 - 3)
; DE Base address of graphics
; HL On exit, points to the graphic to draw in screen.
c$8395 LD L,A        ; { Put the frame number in #REGhl.
 $8396 LD H,$00      ; }
 $8398 ADD HL,HL     ; { Multiply by 32 to get a screen offset. }
 $8399 ADD HL,HL     ;
 $839A ADD HL,HL     ;
 $839B ADD HL,HL     ;
 $839C ADD HL,HL     ;
 $839D ADD HL,DE     ; Add the base address
 $839E LD A,($832E)  ; Get the last input data.
 $83A1 AND $03       ; Ignore anything without the direction flags.
 $83A3 EX DE,HL      ; Remember the base address.
 $83A4 LD H,A        ; { Put the position in #REGhl.
 $83A5 LD L,$00      ; }
 $83A7 SRL H         ; { Convert this into an offset from the graphic table.
 $83A9 RR L          ; }
 $83AB ADD HL,DE     ; { Combine this to point to the correct graphic and return.
 $83AC RET           ; }

; Unused
u$83AD LD A,($832E)  ;
 $83B0 LD ($849B),A  ;
 $83B3 JR $8366      ;

; Unused
;
; Used by the routine at #R$832F.
u$83B5 LD A,($848F)  ;
 $83B8 LD HL,($8492) ;
 $83BB CP $02        ;
 $83BD JR NZ,$8413   ;
 $83BF LD A,($8490)  ;
 $83C2 DEC A         ;
 $83C3 CP $3F        ;
 $83C5 JR NZ,$83C8   ;
 $83C7 INC A         ;
*$83C8 LD ($8490),A  ;
 $83CB LD A,($8491)  ;
 $83CE ADD A,(HL)    ;
 $83CF LD ($8491),A  ;
 $83D2 LD DE,($8494) ;
 $83D6 BIT 7,(HL)    ;
 $83D8 JR NZ,$83E1   ;
 $83DA INC D         ;
 $83DB LD ($8494),DE ;
 $83DF JR $83E6      ;
*$83E1 DEC D         ;
 $83E2 LD ($8494),DE ;
*$83E6 INC HL        ;
 $83E7 LD ($8492),HL ;
 $83EA CALL $841C    ;
 $83ED LD A,($8498)  ;
 $83F0 INC A         ;
 $83F1 AND $1F       ;
 $83F3 LD ($8498),A  ;
 $83F6 OR A          ;
 $83F7 RET NZ        ;
 $83F8 LD ($848F),A  ;
 $83FB LD HL,$869C   ;
 $83FE LD ($8492),HL ;
 $8401 LD HL,($8496) ;
 $8404 LD ($8494),HL ;
 $8407 RET           ;
*$8408 LD A,($8490)  ;
 $840B INC A         ;
 $840C CP $D8        ;
 $840E JR NZ,$83C8   ;
 $8410 DEC A         ;
 $8411 JR $83C8      ;
*$8413 CP $03        ;
 $8415 JR Z,$8408    ;
 $8417 LD A,($8490)  ;
 $841A JR $83C8      ;
*$841C LD A,($848E)  ;
 $841F INC A         ;
 $8420 AND $07       ;
 $8422 LD ($848E),A  ;
 $8425 SRL A         ;
 $8427 LD DE,$849C   ;
 $842A PUSH AF       ;
 $842B LD A,($848F)  ;
 $842E LD ($832E),A  ;
 $8431 POP AF        ;
 $8432 CALL $8395    ;
 $8435 LD ($848C),HL ;
 $8438 LD A,($8491)  ;
 $843B ADD A,$02     ;
 $843D CALL $8452    ;
 $8440 LD A,($8491)  ;
 $8443 SUB $10       ;
 $8445 CALL $8452    ;
 $8448 LD HL,($8494) ;
 $844B LD DE,$0000   ;
 $844E CALL $03B5    ;
 $8451 RET           ;

; Redraw Monty after jumping or falling
;
; Used by the routines at #R$8A63 and #R$8B1F.
;
; A Current Y co-ordinate
c$8452 LD L,A        ; { Double the Y co-ordinate to get a word offset.
 $8453 LD H,$00      ;
 $8455 ADD HL,HL     ; }
 $8456 LD DE,$EA60   ; { Get the appropriate pointer to a screen offset and store it in #R$8499.
 $8459 ADD HL,DE     ; 
 $845A LD ($8499),HL ; }
 $845D LD B,$02      ; Draw 2 rows.
*$845F LD A,(HL)     ; { Put the actual screen address in #REGhl.
 $8460 INC HL        ;
 $8461 LD H,(HL)     ;
 $8462 LD L,A        ; }
 $8463 LD D,$00      ; { Store the top 5 bits of the X co-ordinate in #REGde.
 $8465 LD A,($5C7B)  ; 
 $8468 SRL A         ;
 $846A SRL A         ;
 $846C SRL A         ;
 $846E LD E,A        ; }
 $846F ADD HL,DE     ; Add this to get the actual screen address.
 $8470 EX DE,HL      ; { Add a offset to give an address in the screen buffer at #R$D260.
 $8471 LD HL,$9260   ;
 $8474 ADD HL,DE     ; }
 $8475 LD A,(HL)     ; Get the graphic data.
 $8476 EX DE,HL      ; { Set it.
 $8477 LD (HL),A     ; }
 $8478 INC HL        ; { Move forward to the next cell.
 $8479 INC DE        ; }
 $847A EX DE,HL      ; { Get the graphic data.
 $847B LD A,(HL)     ; }
 $847C EX DE,HL      ; { Set it.
 $847D LD (HL),A     ; }
 $847E INC HL        ; { Move forward to the next cell.
 $847F INC DE        ; }
 $8480 EX DE,HL      ; { Get the graphic data.
 $8481 LD A,(HL)     ; }
 $8482 EX DE,HL      ; { Set it.
 $8483 LD (HL),A     ; }
 $8484 LD HL,($8499) ; Get the screen offset.
 $8487 DEC HL        ; { Move up an entry.
 $8488 DEC HL        ; }
 $8489 DJNZ $845F    ; { Loop until both rows have been drawn.
 $848B RET           ; }å

; Last address of Monty graphic
b$848C DEFW $849C

; Current frame to draw Monty
g$848E DEFB $03

; Position off the ground (when jumping)
g$848F DEFB $00

; Unused
u$8490 DEFB $6A,$4F

; Pointer to current movement flags
;
; Initialised to #R$869C
w$8492 DEFW $869C

; Current pitch to use when making a jump sound
w$8494 DEFW $00FA

; Default pitch to use when maing a jump sound
w$8496 DEFW $00FA

; Time Monty has been jumping
g$8498 DEFB $00

; Temporary storage for redrawing when jumping or falling
w$8499 DEFW $EADE

; Last input data when jumping or falling
g$849B DEFB $01

; Monty up
;
; #GRAFIXSTR($849C)(Monty_up)
b$849C DEFB $03,$C0,$07,$E0,$03,$C0,$0F,$F0
 $84A4 DEFB $1F,$F8,$3F,$FC,$2F,$F4,$1F,$F8
 $84AC DEFB $3F,$FC,$3F,$FC,$3F,$FC,$1F,$F8
 $84B4 DEFB $1E,$78,$0C,$30,$00,$00,$00,$00
 $84BC DEFB $01,$E0,$03,$F0,$01,$E0,$07,$F8
 $84C4 DEFB $0F,$F8,$1F,$FC,$1F,$EE,$0F,$EE
 $84CC DEFB $1F,$F2,$1F,$FC,$13,$FC,$0D,$F8
 $84D4 DEFB $1E,$F0,$1C,$78,$00,$00,$00,$00
 $84DC DEFB $03,$C0,$07,$E0,$03,$C0,$0F,$F0
 $84E4 DEFB $1F,$F8,$3F,$FC,$2F,$F4,$1F,$F8
 $84EC DEFB $3F,$FC,$3F,$FC,$3F,$FC,$1F,$F8
 $84F4 DEFB $1E,$78,$0C,$30,$00,$00,$00,$00
 $84FC DEFB $07,$80,$0F,$C0,$07,$80,$1F,$E0
 $8504 DEFB $3F,$F0,$3F,$F8,$77,$F8,$77,$F0
 $850C DEFB $4F,$F8,$3F,$F8,$3F,$C8,$1F,$B0
 $8514 DEFB $0F,$78,$1E,$38,$00,$00,$00,$00

; Monty up (alt)
;
; #GRAFIXSTR($851C)(Monty_up_2)
b$851C DEFB $00,$00,$00,$00,$03,$C0,$07,$E0
 $8524 DEFB $03,$C0,$0F,$F0,$1F,$F8,$3F,$FC
 $852C DEFB $2F,$F4,$1F,$F8,$3F,$FC,$3F,$FC
 $8534 DEFB $3F,$FC,$1F,$F8,$1E,$78,$0C,$30
 $853C DEFB $00,$00,$00,$00,$01,$E0,$03,$F0
 $8544 DEFB $01,$E0,$07,$F8,$0F,$F8,$1F,$FC
 $854C DEFB $1F,$EE,$0F,$EE,$1F,$F2,$1F,$FC
 $8554 DEFB $13,$FC,$0D,$F8,$1E,$F0,$1C,$78
 $855C DEFB $00,$00,$00,$00,$03,$C0,$07,$E0
 $8564 DEFB $03,$C0,$0F,$F0,$1F,$F8,$3F,$FC
 $856C DEFB $2F,$F4,$1F,$F8,$3F,$FC,$3F,$FC
 $8574 DEFB $3F,$FC,$1F,$F8,$1E,$78,$0C,$30
 $857C DEFB $00,$00,$00,$00,$07,$80,$0F,$C0
 $8584 DEFB $07,$80,$1F,$E0,$3F,$F0,$3F,$F8
 $858C DEFB $77,$F8,$77,$F0,$4F,$F8,$3F,$F8
 $8594 DEFB $3F,$C8,$1F,$B0,$0F,$78,$1E,$38

; Monty left
;
; #GRAFIXSTR($859C)(Monty_left)
b$859C DEFB $02,$00,$1D,$C0,$7D,$C0,$7F,$A0
 $85A4 DEFB $1E,$70,$21,$B8,$76,$B8,$76,$2C
 $85AC DEFB $6F,$EC,$1F,$6C,$1F,$98,$0F,$BC
 $85B4 DEFB $6F,$7C,$3E,$38,$1C,$F0,$00,$00
 $85BC DEFB $02,$00,$1D,$C0,$7D,$C0,$7F,$A0
 $85C4 DEFB $1E,$70,$01,$B8,$16,$B8,$36,$3C
 $85CC DEFB $2D,$FC,$2D,$BC,$1E,$7C,$0F,$F8
 $85D4 DEFB $03,$F0,$01,$E8,$0F,$D8,$00,$00
 $85DC DEFB $02,$00,$1D,$C0,$7D,$C0,$7F,$A0
 $85E4 DEFB $1E,$70,$01,$B8,$06,$B8,$04,$7C
 $85EC DEFB $0B,$FC,$1B,$7C,$1C,$F8,$0E,$FC
 $85F4 DEFB $6F,$7C,$3E,$38,$1C,$F0,$00,$00
 $85FC DEFB $02,$00,$1D,$C0,$7D,$C0,$7F,$A0
 $8604 DEFB $1E,$70,$01,$B8,$16,$B8,$36,$3C
 $860C DEFB $2D,$FC,$2D,$BC,$1E,$7C,$0F,$F8
 $8614 DEFB $03,$F0,$01,$E0,$0F,$C0,$00,$00

; Monty right
;
; #GRAFIXSTR($861C)(Monty_right)
b$861C DEFB $00,$40,$03,$F8,$03,$FE,$05,$FE
 $8624 DEFB $0E,$78,$1D,$84,$1D,$6E,$34,$6E
 $862C DEFB $37,$F6,$36,$F4,$19,$F8,$3D,$F0
 $8634 DEFB $3E,$F6,$1C,$7C,$0F,$38,$00,$00
 $863C DEFB $00,$40,$03,$F8,$03,$FE,$05,$FE
 $8644 DEFB $0E,$78,$1D,$80,$1D,$68,$3C,$6C
 $864C DEFB $3F,$B4,$3D,$B4,$3E,$78,$1F,$F8
 $8654 DEFB $0F,$E0,$17,$80,$1B,$F0,$00,$00
 $865C DEFB $00,$40,$03,$F8,$03,$FE,$05,$FE
 $8664 DEFB $0E,$78,$1D,$80,$1D,$60,$3E,$20
 $866C DEFB $3F,$D0,$3E,$D0,$1F,$38,$3F,$70
 $8674 DEFB $3E,$F6,$1C,$7C,$0F,$38,$00,$00
 $867C DEFB $00,$40,$03,$F8,$03,$FE,$05,$FE
 $8684 DEFB $0E,$78,$1D,$80,$1D,$68,$3C,$6C
 $868C DEFB $3F,$B4,$3D,$B4,$3E,$78,$1F,$F8
 $8694 DEFB $0F,$E0,$07,$80,$03,$F0,$00,$00

; Movement table for jumping
;
; Describes the relative direction Monty should move in
; during each phase of a jump.
;
; .
;
; The current position is stored in #R$8492.
b$869C DEFB $01,$02,$02,$02,$02,$01,$01,$02
 $86A4 DEFB $01,$00,$01,$01,$00,$01,$00,$00
 $86AC DEFB $00,$00,$00,$FF,$FF,$FF,$FF,$FF
 $86B4 DEFB $FF,$FF,$FF,$FE,$FF,$FE,$FE,$FE

; Unused
;
; Used by the routine at #R$832F.
u$86BC LD A,($8491)  ;
 $86BF SUB $08       ;
 $86C1 LD ($8491),A  ;
 $86C4 LD HL,$C868   ;
 $86C7 LD ($ECE0),HL ;
 $86CA LD A,($8490)  ;
 $86CD LD ($ECDE),A  ;
 $86D0 LD A,($8491)  ;
 $86D3 ADD A,$08     ;
 $86D5 LD ($ECDF),A  ;
 $86D8 CALL $EBE0    ;
 $86DB LD B,$04      ;
*$86DD PUSH BC       ;
 $86DE LD B,$04      ;
 $86E0 LD HL,$6380   ;
*$86E3 PUSH BC       ;
 $86E4 LD ($ECE0),HL ;
 $86E7 LD A,($8490)  ;
 $86EA LD ($ECDE),A  ;
 $86ED LD A,($8491)  ;
 $86F0 LD ($ECDF),A  ;
 $86F3 CALL $EBE0    ;
 $86F6 LD DE,$874E   ;
*$86F9 DEC DE        ;
 $86FA LD A,D        ;
 $86FB OR E          ;
 $86FC JR NZ,$86F9   ;
 $86FE LD DE,$0020   ;
 $8701 ADD HL,DE     ;
 $8702 POP BC        ;
 $8703 DJNZ $86E3    ;
 $8705 POP BC        ;
 $8706 DJNZ $86DD    ;
 $8708 LD A,$01      ;
 $870A LD ($8750),A  ;
 $870D RET           ;

; Unused
;
; Used by the routine at #R$832F.
u$870E LD A,($C850)  ;
 $8711 OR A          ;
 $8712 JP Z,$8366    ;
 $8715 XOR A         ;
 $8716 LD ($C850),A  ;
 $8719 CALL $871D    ;
 $871C RET           ;

; Unused
;
; Used by the routine at #R$870E.
u$871D LD HL,$4F2F   ;
 $8720 LD ($ECDE),HL ;
 $8723 LD HL,$D260   ;
 $8726 LD DE,$4000   ;
 $8729 LD BC,$1800   ;
 $872C LDIR          ;
 $872E RET           ;

; Unused
u$872F CALL $8000    ;
 $8732 CALL $82A6    ;
 $8735 CALL $832F    ;
 $8738 LD A,($8490)  ;
 $873B LD ($ECDE),A  ;
 $873E LD A,($8491)  ;
 $8741 LD ($ECDF),A  ;
 $8744 LD HL,($848C) ;
 $8747 LD ($ECE0),HL ;
 $874A CALL $EBE0    ;
 $874D RET           ;

; Unused
u$874E DEFB $32,$00,$00

; Move all the nasties on the screen
;
; Used by the routines at #R$92DF and #R$940C.
c$8751 LD HL,$C596     ; Point HL at the start of the nasty buffer. (#R$C596)
 $8754 LD B,$06        ; Maximum of six characters on screen.
 $8756 NOP             ;
*$8757 PUSH BC         ; Remember character count.
 $8758 PUSH HL         ; { Swap HL for IX so the buffer can be indexed.
 $8759 POP IX          ; }
 $875B LD A,(IX+$00)   ; Get the type flag.
 $875E OR A            ; { If the type is not 0, skip forward.}
 $875F JP NZ,$887D     ;
; Move a simple nasty. This entry point is used by the routine at #R$8964.
*$8762 LD L,(IX+$0C)   ; Put the current X co-ordinate in L
 $8765 LD H,(IX+$0D)   ; Put the current Y co-ordinate in H
 $8768 LD ($8962),HL   ; Store this in #R$8962.
 $876B LD A,(IX+$0B)   ; Get the current direction.
 $876E OR A            ; Is it down?
 $876F JR NZ,$87A6     ; No, so jump forward.
; Moving up.
 $8771 LD B,(IX+$11)   ; { Increment the Y co-ordinate by the speed.
 $8774 LD A,(IX+$0D)   ;
 $8777 ADD A,B         ;
 $8778 LD (IX+$0D),A   ; }
 $877B LD L,(IX+$01)   ; { Put the "up" graphic in #REGhl.
 $877E LD H,(IX+$02)   ; }
 $8781 LD A,(IX+$10)   ; { Decrement the distance to travel.
 $8784 DEC A           ; }
 $8785 JR NZ,$8797     ; Skip the next code if it is not zero.
 $8787 LD L,(IX+$03)   ; { Put the "down" graphic in #REGhl.
 $878A LD H,(IX+$04)   ; }
 $878D LD A,(IX+$0B)   ; { Change the direction to "down".
 $8790 INC A           ;
 $8791 LD (IX+$0B),A   ; }
 $8794 LD A,(IX+$0E)   ; { Set the distance to travel back to the default.
*$8797 LD (IX+$10),A   ; }
 $879A LD A,(IX+$0F)   ; { Increment the animation frame, looping from 0 - 7.
 $879D INC A           ;
 $879E AND $07         ;
 $87A0 LD (IX+$0F),A   ; }
 $87A3 JP $8827        ; Move forward to draw the nasty.
; Moving down.
*$87A6 CP $01          ; Is the direction up?
 $87A8 JR NZ,$87D2     ; No, so jump forward.
 $87AA LD A,(IX+$0D)   ; { Decrement the Y co-ordinate by the speed.
 $87AD LD B,(IX+$11)   ;
 $87B0 SUB B           ;
 $87B1 LD (IX+$0D),A   ; }
 $87B4 LD A,(IX+$10)   ; Get the distance to travel.
 $87B7 LD L,(IX+$03)   ; { Put the "down" graphic in #REGhl.
 $87BA LD H,(IX+$04)   ; }
 $87BD DEC A           ; Decrement the distance to travel.
 $87BE JR NZ,$8797     ; Skip the next code if it is not zero.
 $87C0 LD L,(IX+$01)   ; { Put the "up" graphic in #REGhl.
 $87C3 LD H,(IX+$02)   ; }
 $87C6 LD A,(IX+$0B)   ; { Change the direction to "up".
 $87C9 DEC A           ;
 $87CA LD (IX+$0B),A   ; }
 $87CD LD A,(IX+$0E)   ; Set the distance to travel back to the default
 $87D0 JR $8797        ; Jump back to draw the nasty.
; Moving left
*$87D2 CP $02          ; Is the direction left?
 $87D4 JR NZ,$87FE     ; No, so jump forward.
 $87D6 LD A,(IX+$0C)   ; { Decrement the X co-ordinate by the speed.
 $87D9 LD B,(IX+$11)   ;
 $87DC SUB B           ;  
 $87DD LD (IX+$0C),A   ; }
 $87E0 LD A,(IX+$10)   ; Get the distance to travel.
 $87E3 LD L,(IX+$05)   ; { Put the "left" graphic in #REGhl.
 $87E6 LD H,(IX+$06)   ; }
 $87E9 DEC A           ; Decrement the distance to travel.
 $87EA JR NZ,$8797     ; Skip the next code if it is not zero.
 $87EC LD L,(IX+$07)   ; { Put the "right" graphic in #REGhl.
 $87EF LD H,(IX+$08)   ; }
 $87F2 LD A,(IX+$0B)   ; { Change the direction to "right".
 $87F5 INC A           ;
 $87F6 LD (IX+$0B),A   ; }
 $87F9 LD A,(IX+$0E)   ; Set the distance to travel back to default.
 $87FC JR $8797        ; Jump back to draw the nasty.
; Moving right
*$87FE LD A,(IX+$0C)   ; { Increment the X co-ordinate by the speed.
 $8801 LD B,(IX+$11)   ;
 $8804 ADD A,B         ;
 $8805 LD (IX+$0C),A   ; }
 $8808 LD L,(IX+$07)   ; { Put the "right" graphic in #REGhl.
 $880B LD H,(IX+$08)   ; }
 $880E LD A,(IX+$10)   ; { Decrement the distance to travel.
 $8811 DEC A           ; }
 $8812 JR NZ,$8797     ; Skip the next code if it is not zero.
 $8814 LD L,(IX+$05)   ; { Put the "left" graphic in #REGhl.
 $8817 LD H,(IX+$06)   ; }
 $881A LD A,(IX+$0B)   ; { Change the direction to "left".
 $881D DEC A           ;
 $881E LD (IX+$0B),A   ; }
 $8821 LD A,(IX+$0E)   ; Set the distance to travel back to the default.
 $8824 JP $8797        ; Jump back to draw the nasty.
; After updating the position, the nasty can be drawn.
*$8827 EX DE,HL        ; Swap #REGde and #REGhl over.
 $8828 RRA             ; { Get the top 3 bits of animation 
 $8829 AND $03         ; to determine the frame to draw. }
 $882B LD L,A          ; { Put this in #REGhl.
 $882C LD H,$00        ; }
 $882E ADD HL,HL       ; { Multiply by 32 to get a address of graphics.
 $882F ADD HL,HL       ;
 $8830 ADD HL,HL       ;
 $8831 ADD HL,HL       ;
 $8832 ADD HL,HL       ; }
 $8833 ADD HL,DE       ; Add the basic address of the graphics to get the right one.
 $8834 LD ($ECE0),HL   ; Set the graphics to draw.
 $8837 LD L,(IX+$0C)   ; { Set the co-ordinates. 
 $883A LD H,(IX+$0D)   ; 
 $883D LD ($ECDE),HL   ; }
 $8840 CALL $EBE0      ; Draw the graphic.
 $8843 LD A,(IX+$00)   ; { Is the status 0?
 $8846 OR A            ; }
 $8847 JR NZ,$8857     ; Move on if not.
; The nasty's attributes needs to be drawn.
 $8849 LD HL,($8962)   ; Get the old position.
 $884C LD C,$47        ; Use bright white to erase the old attribute.
 $884E NOP             ;
 $884F NOP             ;
 $8850 NOP             ;
 $8851 CALL $886F      ; Draw these specific attributes.
 $8854 CALL $8866      ; Draw the new attributes from the actual nasty data.
; All done with this nasty, move to the next.
; This entry point is used by the routine at #R$8964.
*$8857 PUSH IX         ; { Add #N$14 bytes to point to the next nasty data.
 $8859 POP HL          ;
 $885A LD DE,$0014     ;
 $885D ADD HL,DE       ; }
 $885E POP BC          ; Restore #REGbc.
 $885F DJNZ $8863      ; Loop back if there are more nasties to look at.
 $8861 EI              ; { Otherwise re-enable interrupts and return.
 $8862 RET             ; }
*$8863 JP $8757        ;

; Draw the nasty's attributes
;
; Used by the routine at #R$8751.
;
; IX Pointer to nasty data (#R$C596)
c$8866 LD C,(IX+$09)   ; Get the attribute.
 $8869 LD H,(IX+$0D)   ; { Get the current co-ordinates.
 $886C LD L,(IX+$0C)   ; }
; This entry point is used by the routine in #R$8751.
*$886F LD A,L          ; { Convert the X co-ordinate into an appropriate screen address.
 $8870 CP L            ;
 $8871 AND H           ;
 $8872 AND $07         ; }
 $8874 JP Z,$FBED      ; Draw the attribute, restoring the old background.
 $8877 LD A,(IX+$0B)   ; { Otherwise get the attribute and just draw it.
 $887A JP $FBC6        ; }

; Draw a type 1 - 3 nasty
;
; Used by the routine at #R$8751.
;
; .
;
; This code is unused as the game does not have any of them.
c$887D CP $01          ; Is the type 1?
 $887F JP NZ,$8964     ; No, so move forward.

; Unused
u$8882 CALL $FD9B      ;
 $8885 LD A,(IX+$0A)   ;
 $8888 CP C            ;
 $8889 JR NC,$88C7     ;
 $888B LD A,($5C7B)    ;
 $888E LD B,(IX+$0C)   ;
 $8891 CP B            ;
 $8892 JR NC,$889E     ;
 $8894 SUB B           ;
 $8895 NEG             ;
 $8897 LD B,A          ;
 $8898 LD (IX+$0B),$02 ;
 $889C JR $88A4        ;
*$889E SUB B           ;
 $889F LD B,A          ;
 $88A0 LD (IX+$0B),$03 ;
*$88A4 LD A,($5C7C)    ;
 $88A7 LD C,(IX+$0D)   ;
 $88AA CP C            ;
 $88AB JR NC,$88B7     ;
 $88AD SUB C           ;
 $88AE NEG             ;
 $88B0 LD C,A          ;
 $88B1 LD (IX+$0F),$01 ;
 $88B5 JR $88BD        ;
*$88B7 SUB C           ;
 $88B8 LD C,A          ;
 $88B9 LD (IX+$0F),$00 ;
*$88BD LD A,C          ;
 $88BE CP B            ;
 $88BF JR C,$88C7      ;
 $88C1 LD A,(IX+$0F)   ;
 $88C4 LD (IX+$0B),A   ;
*$88C7 LD L,(IX+$0C)   ;
 $88CA LD H,(IX+$0D)   ;
 $88CD LD A,(IX+$0B)   ;
 $88D0 CALL $88F4      ;
 $88D3 JP Z,$8762      ;
 $88D6 LD A,(IX+$0B)   ;
 $88D9 OR A            ;
 $88DA JR NZ,$88E3     ;
 $88DC INC A           ;
*$88DD LD (IX+$0B),A   ;
 $88E0 JP $8762        ;
*$88E3 CP $01          ;
 $88E5 JR NZ,$88EA     ;
 $88E7 DEC A           ;
 $88E8 JR $88DD        ;
*$88EA CP $02          ;
 $88EC JR NZ,$88F1     ;
 $88EE INC A           ;
 $88EF JR $88DD        ;
*$88F1 DEC A           ;
 $88F2 JR $88DD        ;

; Unused
;
; Used by the routine at #R$8882.
u$88F4 CP $02          ;
 $88F6 JR C,$892E      ;
 $88F8 JR NZ,$8926     ;
 $88FA LD B,$10        ;
 $88FC DEC HL          ;
*$88FD LD ($8960),HL   ;
 $8900 LD A,L          ;
 $8901 LD L,H          ;
 $8902 LD H,$00        ;
 $8904 ADD HL,HL       ;
 $8905 LD DE,$EA60     ;
 $8908 ADD HL,DE       ;
 $8909 LD D,$00        ;
 $890B SRL A           ;
 $890D SRL A           ;
 $890F SRL A           ;
 $8911 LD E,A          ;
 $8912 LD A,(HL)       ;
 $8913 INC HL          ;
 $8914 LD H,(HL)       ;
 $8915 LD L,A          ;
 $8916 ADD HL,DE       ;
 $8917 LD DE,$9260     ;
 $891A ADD HL,DE       ;
 $891B LD A,(HL)       ;
 $891C OR A            ;
 $891D RET NZ          ;
 $891E LD HL,($8960)   ;
 $8921 DEC H           ;
 $8922 DJNZ $88FD      ;
 $8924 OR A            ;
 $8925 RET             ;
*$8926 LD B,$10        ;
 $8928 LD DE,$0010     ;
 $892B ADD HL,DE       ;
 $892C JR $88FD        ;
*$892E OR A            ;
 $892F JR Z,$8959      ;
 $8931 LD A,L          ;
 $8932 LD L,H          ;
 $8933 LD H,$00        ;
 $8935 LD DE,$0010     ;
 $8938 OR A            ;
 $8939 SBC HL,DE       ;
*$893B ADD HL,HL       ;
 $893C LD DE,$EA60     ;
 $893F ADD HL,DE       ;
 $8940 LD D,$00        ;
 $8942 LD E,A          ;
 $8943 LD A,(HL)       ;
 $8944 INC HL          ;
 $8945 LD H,(HL)       ;
 $8946 LD L,A          ;
 $8947 SRL E           ;
 $8949 SRL E           ;
 $894B SRL E           ;
 $894D ADD HL,DE       ;
 $894E LD DE,$9260     ;
 $8951 ADD HL,DE       ;
 $8952 LD A,(HL)       ;
 $8953 OR A            ;
 $8954 RET NZ          ;
 $8955 INC HL          ;
 $8956 LD A,(HL)       ;
 $8957 OR A            ;
 $8958 RET             ;
*$8959 LD A,L          ;
 $895A LD L,H          ;
 $895B LD H,$00        ;
 $895D INC L           ;
 $895E JR $893B        ;

; Unused
u$8960 DEFW $0000

; X co-ordinate for current nasty being drawn
;
; Used by the routine in #R$8751.
g$8962 DEFB $00

; Y co-ordinate for current nasty being drawn
;
; Used by the routine in #R$8751.
g$8963 DEFB $00

; Update a type 2 (single direction) nasty
;
; Used by the routine at #R$887D.
;
; A Status flag for this nasty.
c$8964 CP $03          ; Is the nasty invisible?
 $8966 JP Z,$8857      ; Jump if so.
 $8969 LD A,(IX+$10)   ; { Decrement the current distance.
 $896C DEC A           ; }
 $896D JP NZ,$8762     ; Jump if it is not zero.
; The nasty needs to be redrawn.
 $8970 LD A,(IX+$0E)   ; Get the width or height.
 $8973 LD (IX+$10),A   ; Set this to the current distance travelled.
 $8976 LD (IX+$00),$03 ; Make the nasty invisible in its current position.
 $897A LD A,(IX+$0A)   ; Get the index.
 $897D ADD A,A         ; { Convert this to an offset to the nasty table.
 $897E ADD A,A         ;
 $897F LD B,A          ;
 $8980 ADD A,A         ;
 $8981 ADD A,A         ;
 $8982 ADD A,B         ;
 $8983 LD E,A          ;
 $8984 LD D,$00        ;
 $8986 LD HL,$C596     ;
 $8989 ADD HL,DE       ; }
 $898A LD A,$02        ; { Set that this is a unidirectional nasty
 $898C LD (HL),A       ; (should already be set). }
 $898D LD B,(IX+$0E)   ; { Multiply the distance covered by the speed
 $8990 DEC B           ; to denote the offset to move back to the initial position
 $8991 LD C,(IX+$11)   ; and store it in #REGb.
 $8994 XOR A           ;
*$8995 ADD A,C         ;
 $8996 DJNZ $8995      ; 
 $8998 LD B,A          ; }
 $8999 LD A,(IX+$0B)   ; Get the current direction.
 $899C OR A            ; Is the nasty moving up?
 $899D JR NZ,$89A9     ; Jump forward if not.
 $899F LD A,(IX+$0D)   ; { Move the Y co-ordinate down by the appropriate distance
 $89A2 SUB B           ; and move forward.
 $89A3 LD (IX+$0D),A   ; 
 $89A6 JP $8857        ; }
*$89A9 CP $01          ; Is the nasty moving up?
 $89AB JR NZ,$89B7     ; Jump forward if not.
 $89AD LD A,(IX+$0D)   ; { Move the Y co-ordinate up by the appropriate distance
 $89B0 ADD A,B         ; and move forward.
 $89B1 LD (IX+$0D),A   ;
 $89B4 JP $8857        ; }
*$89B7 CP $02          ; Is the nasty moving left?
 $89B9 JR NZ,$89C5     ; Jump forward if not.
 $89BB LD A,(IX+$0C)   ; { Move the X co-ordinate right by the appropriate distance
 $89BE ADD A,B         ; and move forward.
 $89BF LD (IX+$0C),A   ;
 $89C2 JP $8857        ; }
*$89C5 CP $03          ; Is the nasty moving right?
 $89C7 JP NZ,$8857     ; Jump forward if not.
 $89CA LD A,(IX+$0C)   ; { Move the X co-ordinate left by the appropriate distance
 $89CD SUB B           ; and move forward.
 $89CE LD (IX+$0C),A   ; 
 $89D1 JP $8857        ; }

; Update Monty's position
;
; Used by the routines at #R$940C and #R$CD41.
c$89D4 LD IX,$8D52    ; Point #REGix at the room flags (#R$8D52).
 $89D8 LD HL,($5C7B)  ; Get the room position (#R$5C7B and #R$5C7C).
 $89DB LD ($8D7D),HL  ; Put this in the temporary store (#R$8D7D).
 $89DE BIT 0,(IX+$00) ;
 $89E2 JP NZ,$8B1F    ;
 $89E5 LD A,($848F)   ; Get Monty's jump position.
 $89E8 OR A           ; Is it 0?
 $89E9 JP NZ,$8A63    ; Move forward to handle jump movement if Monty is already in mid-air.
 $89EC LD A,($832E)   ; Get the movement flags?
 $89EF BIT 7,A        ; Is Monty jumping?
 $89F1 JR Z,$8A03     ; Move forward if not.
 $89F3 RES 7,A        ; Reset the jump flag.
 $89F5 LD ($849B),A   ; Store this.
 $89F8 INC A          ; { Set the initial position on the ground.
 $89F9 LD ($848F),A   ; }
 $89FC SET 1,(IX+$00) ; { Set bit 1 to show Monty is jumping and move forward.
 $8A00 JP $8A63       ; }
*$8A03 BIT 2,(IX+$00) ; Is Monty on a ladder?
 $8A07 JP NZ,$917A    ; Move forward if so.
; This entry point is used by the routine at #R$917A.
*$8A0A LD A,($832E)   ; Get the last input data.
 $8A0D AND $07        ; Remove the jump flag.
 $8A0F CP $04         ; Was there valid input?
 $8A11 JP Z,$8B34     ; Jump forward if not.
 $8A14 LD B,A         ; { Does the input match the last input
 $8A15 LD A,($849B)   ; when jumping or falling?
 $8A18 CP B           ; }
 $8A19 JR NZ,$8A5B    ; Jump forward if not.
; Act on moving left.
 $8A1B CP $02         ; Was 'left' pressed?
 $8A1D JR NZ,$8A48    ; Jump forward if not.
 $8A1F LD A,($5C7B)   ; { Decrease the X co-ordinate by 2.
 $8A22 SUB $02        ;
 $8A24 LD ($5C7B),A   ; }
; This entry point is used by the routine at #R$917A.
*$8A27 LD A,($848E)   ; { Cycle Monty's frame between 0-7.
 $8A2A INC A          ;
*$8A2B AND $07        ;
 $8A2D LD ($848E),A   ; }
 $8A30 SRL A          ; Halve this to get the right frame offset.
 $8A32 LD DE,$849C    ; Point #REGde at the start of Monty's graphic (#R$849C).
 $8A35 BIT 2,(IX+$00) ; Is Monty on a ladder?
 $8A39 JR Z,$8A3F     ; Jump forward if so.
 $8A3B LD DE,($C51E)  ; Point #REGde at the offset for Monty's graphic in this room.
*$8A3F CALL $8395     ; Select the right graphic for Monty.
 $8A42 LD ($848C),HL  ; Store this. (#R$848C).
 $8A45 JP $8B34       ; Jump forward and check on room flags.
; Act on moving right?
*$8A48 CP $03         ; Was 'right' pressed?
 $8A4A JP NZ,$8B34    ; Jump forward if not to check for the room flags.
 $8A4D LD A,($5C7B)   ; { Increase the X co-ordinate by 2.
 $8A50 ADD A,$02      ;
 $8A52 LD ($5C7B),A   ; }
 $8A55 LD A,($848E)   ; Get Monty's frame counter.
 $8A58 DEC A          ; { Decrease by 1 and call the earlier routine to update
 $8A59 JR $8A2B       ; the graphic. }
; This entry point is used by the routine at #R$917A.
*$8A5B LD A,($832E)   ; { Copy the last input to a copy.
 $8A5E LD ($849B),A   ; }
 $8A61 JR $8A27       ; Jump back to draw Monty.

; Make Monty jump
;
; Used by the routine at #R$89D4.
c$8A63 LD A,($848F)   ; Get the position off the ground.
 $8A66 LD HL,($8492)  ; Get the current pointer to the jump table.
 $8A69 CP $03         ;
 $8A6B JR NZ,$8ACA    ;
 $8A6D LD A,($5C7B)   ; { Decrease the X co-ordinate.
 $8A70 DEC A          ;
*$8A71 LD ($5C7B),A   ; }
 $8A74 LD A,($5C7C)   ; { Add the scaling factor to the Y co-ordinate.
 $8A77 ADD A,(HL)     ;
 $8A78 LD ($5C7C),A   ; }
 $8A7B LD DE,($8494)  ; Get the next pitch to beep at when jumping.
 $8A7F BIT 7,(HL)     ; Is the next direction moving upwards?
 $8A81 JR NZ,$8A8A    ; Jump forward if not.
 $8A83 INC E          ; { Increase the pitch, so the jump effect increases
 $8A84 LD ($8494),DE  ; while Monty is moving upwards.
 $8A88 JR $8A93       ; }
*$8A8A DEC E          ; Otherwise decrease the pitch.
 $8A8B SET 7,(IX+$01) ; Set the falling flag.
 $8A8F LD ($8494),DE  ; Set the new pitch.
*$8A93 INC HL         ; { Move to the next position in the jump table.
 $8A94 LD ($8492),HL  ; }
 $8A97 CALL $8AD3     ; Update Monty in this jump cycle.
 $8A9A LD A,($8498)   ; { Increment the jump time 
 $8A9D INC A          ; until it reaches #N$1F, then
 $8A9E AND $1F        ; reset back to 0.
 $8AA0 LD ($8498),A   ; }
 $8AA3 OR A           ; Has the jump finished?
 $8AA4 JP NZ,$8B34    ; No, so check Monty's movement.
 $8AA7 LD ($848F),A   ; Reset the position off the ground.
 $8AAA LD ($8D58),A   ; Reset the distance fallen by.
 $8AAD LD HL,$869C    ; { Reset the pointer to the movement table
 $8AB0 LD ($8492),HL  ; to #R$869C. }
 $8AB3 LD HL,($8496)  ; { Reset the jump beep pitch back to the default.
 $8AB6 LD ($8494),HL  ; }
 $8AB9 RES 1,(IX+$00) ; Reset the jump flag.
 $8ABD RES 7,(IX+$01) ; Reset the falling flag.
 $8AC1 JP $8B34       ; Jump forward to set movement restrictions.

; Unused
u$8AC4 LD A,($5C7B)   ;
 $8AC7 INC A          ;
 $8AC8 JR $8A71       ;
*$8ACA CP $04         ;
 $8ACC JR Z,$8AC4     ;
 $8ACE LD A,($5C7B)   ;
 $8AD1 JR $8A71       ;

; Update Monty while jumping.
;
; Used by the routine at #R$8A63.
c$8AD3 LD A,($848E)   ; { Move to the next animation frame 0 - 7.
 $8AD6 INC A          ;
 $8AD7 AND $07        ;
 $8AD9 LD ($848E),A   ; }
 $8ADC SRL A          ; Halve this value to get the right graphic index.
 $8ADE PUSH AF        ; Remember #REGa.
 $8ADF LD DE,$849C    ; Point #REGde to the current jump table.
 $8AE2 LD A,($848F)   ; Get the current jump height.
 $8AE5 DEC A          ; { Decrement by 1 and store it.
 $8AE6 LD ($832E),A   ; }
 $8AE9 POP AF         ; Restore #REGa.
 $8AEA CALL $8395     ; Select the graphic to draw for Monty.
 $8AED LD ($848C),HL  ; Point to this in #R$848C.
 $8AF0 LD A,($5C7C)   ; Get the Y co-ordinate.
 $8AF3 ADD A,$02      ; { Redraw Monty to the right.
 $8AF5 CALL $8452     ; }
 $8AF8 LD A,($5C7C)   ; Get the Y co-ordinate.
 $8AFB SUB $10        ; { Redraw Monty to the left.
 $8AFD CALL $8452     ; }
 $8B00 LD HL,($8494)  ; Get the pitch for the jump sound.
 $8B03 LD DE,$0001    ; Length is always 1.
 $8B06 CALL $03B6     ; Call the ROM BEEP routine without disabling interrupts.
 $8B09 JP $8B34       ; Move forward to check for movement restrictions.

; See if Monty has walked off a ladder, and if so, set some flags.
;
; Used by the routine at #R$8B90.
c$8B0C BIT 1,(IX+$00) ; Is Monty jumping?
 $8B10 RET NZ         ; Return if so.
 $8B11 BIT 2,(IX+$00) ; Can Monty climb?
 $8B15 RET NZ         ; Return if so.
 $8B16 SET 0,(IX+$00) ; Set that background objects can move.
 $8B1A SET 7,(IX+$01) ; Set that Monty is in mid-air.
 $8B1E RET            ; Return.

; Update Monty and act on room flags
;
; Used by the routine at #R$89D4.
;
; IX Pointer to room flags (#R$8D52).
c$8B1F LD A,($5C7C)  ; { Take 2 off the current Y position.
 $8B22 SUB $02       ;
 $8B24 LD ($5C7C),A  ; }
 $8B27 LD HL,$8D58   ; { Increment the distance fallen (#R$8D58).
 $8B2A INC (HL)      ; }
 $8B2B LD A,($5C7C)  ; { Put the old Y position in #REGa.
 $8B2E ADD A,$02     ; }
 $8B30 INC (HL)      ; { Increment the distance fallen. }
 $8B31 CALL $8452    ; Redraw Monty. Control continues to #R$8B34.
; This entry point is used by the routines at #R$8A0A and #R$8A63.
*$8B34 CALL $8B90     ; Check Monty's current movement.
 $8B37 LD HL,$5C7C    ; Get the current position in #REGhl.
 $8B3A BIT 1,(IX+$00) ; Is Monty jumping?
 $8B3E JR NZ,$8B46    ; Move forward if so.
 $8B40 SET 0,(HL)     ; { Align Monty with a pixel boundary.
 $8B42 DEC HL         ;
 $8B43 RES 0,(HL)     ;
 $8B45 INC HL         ; }
; Check that Monty can move in all directions, and block movement
; that is not possible.
*$8B46 LD A,($8D7E)   ; Get the temporary Y co-ordinate.
 $8B49 BIT 7,(IX+$00) ; Can Monty move up?
 $8B4D JR Z,$8B55     ; Jump if so.
 $8B4F CP (HL)        ; Is the current co-ordinate out of bounds?
 $8B50 JR NC,$8B55    ; Jump forward if not.
 $8B52 LD (HL),A      ; { Re-align Monty on the appropriate boundary
 $8B53 JR $8B5F       ; and jump forward. }
*$8B55 BIT 6,(IX+$00) ; Can Monty move down?
 $8B59 JR Z,$8B5F     ; Jump if so.
 $8B5B CP (HL)        ; Is the current co-ordinate out of bounds?
 $8B5C JR C,$8B5F     ; Jump forward if not.
 $8B5E LD (HL),A      ; Re-align Monty on the appropriate boundary.
*$8B5F LD HL,$5C7B    ; Point #REGhl at Monty's co-ordinates.
 $8B62 LD A,($8D7D)   ; Get the temporary X co-ordinate.
 $8B65 BIT 5,(IX+$00) ; Can Monty move left?
 $8B69 JR Z,$8B71     ; Jump if so.
 $8B6B CP (HL)        ; Is the current co-ordinate out of bounds?
 $8B6C JR C,$8B71     ; Jump forward if not.
 $8B6E LD (HL),A      ; { Re-align Monty on the appropriate boundary
 $8B6F JR $8B7B       ; and jump forward. }
*$8B71 BIT 4,(IX+$00) ; Can Monty move right?
 $8B75 JR Z,$8B7B     ; Jump if so.
 $8B77 CP (HL)        ; Is the current co-ordinate out of bounds?
 $8B78 JR NC,$8B7B    ; Jump forward if not.
 $8B7A LD (HL),A      ; Re-align Monty on the appropriate boundary.
; Redraw Monty in the new screen position.
*$8B7B LD HL,($5C7B)  ; Get the screen position.
 $8B7E LD ($ECDE),HL  ; Set this for the graphic to print.
 $8B81 LD A,$04       ; { Height is 4.
 $8B83 LD ($832E),A   ; }
 $8B86 LD HL,($848C)  ; Get the pointer to the sprite data.
 $8B89 LD ($ECE0),HL  ; Set this to draw.
 $8B8C CALL $EBE0     ; { Draw the graphic and return.
 $8B8F RET            ; }

; Determine where Monty can move to
;
; Used by the routine at #R$8B34.
c$8B90 CALL $8C3D     ; Check for collision.
 $8B93 LD IX,$8D52    ; Point #REGix at the room flags (#R$8D52).
 $8B97 LD IY,$8D54    ; Point #REGiy at the direction flags (#R$8D54).
 $8B9B LD A,(IX+$00)  ; { Clear all bits except 2 and 4 on the room flags.
 $8B9E AND $0A        ;
 $8BA0 LD (IX+$00),A  ; }
; Check the movement flags.
 $8BA3 LD A,(IY+$00)  ; { Can Monty move up?
 $8BA6 OR A           ; }
 $8BA7 JR NZ,$8BAD    ; Jump forward if so.
 $8BA9 SET 7,(IX+$00) ; Set bit 7 of the room flags - Monty can't move up.
*$8BAD LD A,(IY+$01)  ; { Can Monty move down?
 $8BB0 OR A           ; }
 $8BB1 JR NZ,$8BB7    ; Jump forward if so.
 $8BB3 SET 6,(IX+$00) ; Set bit 6 of the room flags - Monty can't move down.
*$8BB7 LD A,(IY+$02)  ; { Can Monty move left?
 $8BBA OR A           ; }
 $8BBB JR NZ,$8BC1    ; Jump forward if so.
 $8BBD SET 5,(IX+$00) ; Set bit 5 of the room flags - Monty can't move left.
*$8BC1 LD A,(IY+$03)  ; { Can Monty move right?
 $8BC4 OR A           ; }
 $8BC5 JR NZ,$8BCB    ; Jump forward if so.
 $8BC7 SET 4,(IX+$00) ; Set bit 4 of the room flags - Monty can't move right.
; Check to see if there is a nasty in the proximity.
*$8BCB CP $01         ; Is a nasty to the right of Monty?
*$8BCD JP Z,$946E     ; If so, Monty dies.
 $8BD0 LD A,(IY+$02)  ; Is a nasty to the left of Monty?
 $8BD3 CP $01         ; { If so, Monty dies.
 $8BD5 JR Z,$8BCD     ; }
 $8BD7 LD A,(IY+$01)  ; Is a nasty below Monty?
 $8BDA CP $01         ; { If so, Monty dies.
 $8BDC JR Z,$8BCD     ; }
 $8BDE LD A,(IY+$00)  ; Is a nasty above Monty?
 $8BE1 CP $01         ; { If so, Monty dies.
 $8BE3 JR Z,$8BCD     ; }
; See if Monty can climb here.
 $8BE5 PUSH IY        ; Remember #REGiy.
 $8BE7 CALL $FEA2     ; Can Monty climb here?
 $8BEA JR NZ,$8BF0    ; Jump forward if not.
 $8BEC SET 2,(IX+$00) ; Set bit 2 of the room flags - Monty can climb.
*$8BF0 POP IY         ; Restore #REGiy.
; See if Monty has collided with non-empty space.
 $8BF2 LD B,$02       ;
 $8BF4 LD A,($5C7B)   ; { Get the bottom 3 bits of the X co-ordinate.
 $8BF7 AND $07        ; }
 $8BF9 JR Z,$8BFD     ; Move forward if they are zero.
 $8BFB LD B,$03       ; Scan 3 rows.
*$8BFD CALL $8D5F     ; Get the current screen address in #REGhl.
 $8C00 LD C,$00       ; Set #REGc as no bits found.
*$8C02 LD A,(HL)      ; Get the next data from screen.
 $8C03 OR C           ; OR it against #REGc to retain any bits found.
 $8C04 LD C,A         ; Store this result back in #REGc.
 $8C05 INC HL         ; Move to the next column.
 $8C06 DJNZ $8C02     ; Loop back if there are more columns to look at.
 $8C08 LD A,C         ; { Was anything found at this screen address?
 $8C09 OR A           ; }
 $8C0A JP Z,$8B0C     ; If not, set various flags.
 $8C0D BIT 7,(IX+$01) ; Is Monty in mid-air?
 $8C11 RET Z          ; Return if so.
 ; Monty has reached the ground after falling.
 $8C12 RES 7,(IX+$01) ; Reset the mid-air flag.
 $8C16 RES 0,(IX+$00) ; Enable background objects to move.
 $8C1A RES 1,(IX+$00) ; Set that Monty is not jumping.
 $8C1E LD A,($8D58)   ; Get the height fallen.
 $8C21 CP $20         ; Is it above 20?
 $8C23 JP NC,$946E    ; Yes, Monty has fallen too far, so he's dead.
 $8C26 XOR A          ; Set #REGa to 0 to reset some flags.
 $8C27 LD ($8D58),A   ; Reset the height fallen.
 $8C2A LD ($848F),A   ; Reset the position jumped off ground.
 $8C2D LD ($8498),A   ; Reset the time being jumped.
 $8C30 LD HL,$869C    ; { Reset the pointer to the movement table
 $8C33 LD ($8492),HL  ; back to #R$869C. }
 $8C36 LD HL,($8496)  ; { Reset the pitch to sound when jumping
 $8C39 LD ($8494),HL  ; back to the default. }
 $8C3C RET            ; Return.

; Check what attributes are around Monty
;
; Used by the routine at #R$8B90.
c$8C3D LD IY,$8D54     ; Point #REGiy at the movement table at #R$8D54.
 $8C41 LD B,$02        ;
 $8C43 LD A,($5C7C)    ; Get the Y co-ordinate (#R$5C7C).
 $8C46 LD C,A          ; Remember this in #REGc.
 $8C47 LD A,$BF        ; { Invert the bottom 6 bits.
 $8C49 SUB C           ; }
 $8C4A PUSH AF         ; Remember this.
 $8C4B AND $07         ; Get the lowest 3 bits.
 $8C4D JR Z,$8C51      ; Jump forward if none are set.
 $8C4F LD B,$03        ; Otherwise default to 3.
*$8C51 LD A,B          ; { Set the Y offset (#R$8D5B).
 $8C52 LD ($8D5B),A    ; }
 $8C55 LD C,$02        ; Default to 2.
 $8C57 LD A,($5C7B)    ; Get the X co-ordinate (#R$5C7C);
 $8C5A AND $07         ; Get the lowest 3 bits.
 $8C5C JR Z,$8C60      ; Jump foward if none are set.
 $8C5E LD C,$03        ; Otherwise default to 3.
*$8C60 LD A,C          ; { Set the X offset (#R$8D5C).
 $8C61 LD ($8D5C),A    ; }
 $8C64 POP AF          ; Restore Y co-ordinate.
 $8C65 AND $F8         ; { Shift the top 5 bits down
 $8C67 RRCA            ; and store in the Y co-ordinate (#R$8D5E)
 $8C68 RRCA            ;
 $8C69 RRCA            ;
 $8C6A LD ($8D5E),A    ; }
 $8C6D LD A,($5C7B)    ; Get the X co-ordinate.
 $8C70 AND $F8         ; { Shift the top 5 bits down
 $8C72 RRCA            ; and store in the X co-ordinate  (#R$8D5D)
 $8C73 RRCA            ;
 $8C74 RRCA            ;
 $8C75 LD ($8D5D),A    ; }
 $8C78 LD A,($8D5E)    ; Get the Y co-ordinate.
 $8C7B LD L,A          ; { Scale it up to a screen address.
 $8C7C LD H,$00        ;
 $8C7E ADD HL,HL       ;
 $8C7F ADD HL,HL       ;
 $8C80 ADD HL,HL       ;
 $8C81 ADD HL,HL       ;
 $8C82 ADD HL,HL       ; }
 $8C83 LD A,($8D5D)    ; Get the X co-ordinate.
 $8C86 LD D,$00        ; { Add this to get the desired offset.
 $8C88 LD E,A          ; 
 $8C89 ADD HL,DE       ; }
 $8C8A LD DE,$5800     ; { Add the base address to get an attribute on screen.
 $8C8D ADD HL,DE       ; }
 $8C8E LD ($8D59),HL   ; Store this attribute.
 $8C91 LD A,($8D5C)    ; Get the X co-ordinate for the offset.
 $8C94 LD B,A          ; Store this in #REGb.
 $8C95 LD (IY+$00),$00 ; Default to no movement in this direction.
 $8C99 PUSH IY         ; Remember #REGiy.
 $8C9B CALL $8D0F      ; Check the movement tables across.
 $8C9E LD HL,($8D59)   ; { Move back a row.
 $8CA1 LD DE,$0020     ;
 $8CA4 LD A,($8D5B)    ;
 $8CA7 DEC A           ; 
 $8CA8 LD B,A          ;
*$8CA9 ADD HL,DE       ; 
 $8CAA DJNZ $8CA9      ; }
 $8CAC LD A,($8D5C)    ; Get the X co-ordinate for the offset.
 $8CAF LD B,A          ; Store this in #REGb.
 $8CB0 INC IY          ; Move to the next direction.
 $8CB2 LD (IY+$00),$00 ; Default to no movement.
 $8CB6 CALL $8D0F      ; Check movement tables across.
 $8CB9 LD HL,($8D59)   ;
 $8CBC LD A,($8D5B)    ;
 $8CBF LD B,A          ;
 $8CC0 INC IY          ; Move to the next direction.
 $8CC2 LD (IY+$00),$00 ; Default to no movement.
 $8CC6 CALL $8D2E      ; Check movement tables down.
 $8CC9 LD HL,($8D59)   ;
 $8CCC LD A,($8D5C)    ;
 $8CCF DEC A           ;
 $8CD0 LD B,A          ;
*$8CD1 INC HL          ;
 $8CD2 DJNZ $8CD1      ;
 $8CD4 LD A,($8D5B)    ;
 $8CD7 LD B,A          ;
 $8CD8 INC IY          ; Move to the next direction.
 $8CDA LD (IY+$00),$00 ; Default to no movement.
 $8CDE CALL $8D2E      ; Check movement tables down.
 $8CE1 POP IY          ; Restore #REGiy to the base position.
 $8CE3 LD A,(IY+$00)   ; { If any direction flag was set to 3,
 $8CE6 CP $03          ; set it to 0 instead.
 $8CE8 JR NZ,$8CEE     ;
 $8CEA LD (IY+$00),$00 ;
*$8CEE LD A,(IY+$01)   ;
 $8CF1 CP $03          ;
 $8CF3 JR NZ,$8CF9     ;
 $8CF5 LD (IY+$01),$00 ;
*$8CF9 LD A,(IY+$02)   ;
 $8CFC CP $03          ;
 $8CFE JR NZ,$8D04     ;
 $8D00 LD (IY+$02),$00 ;
*$8D04 LD A,(IY+$03)   ;
 $8D07 CP $03          ;
 $8D09 RET NZ          ;
 $8D0A LD (IY+$03),$00 ; }
 $8D0E RET             ;

; Update the movement tables (across)
;
; Used by the routine at #R$8C3D.
;
; HL Attribute in the current position
; IY Pointer to movement table  (#R$8D54)
; B Number of columns
c$8D0F LD DE,$C51A     ; Get the list of attributes.
 $8D12 PUSH BC         ; Remember #REGbc
 $8D13 LD B,$04        ; Count four types.
 $8D15 LD A,(HL)       ; { Is the current attribute this one?
 $8D16 EX DE,HL        ;
*$8D17 CP (HL)         ; }
 $8D18 JR Z,$8D50      ; If so, found the attribute we want.
 $8D1A INC (IY+$00)    ; Increment the type of attribute looked for.
 $8D1D INC HL          ; Move to the next attribute.
 $8D1E DJNZ $8D17      ; Repeat for the next four types.
 $8D20 EX DE,HL        ; Restore #REGhl to the start of the table.
 $8D21 POP BC          ; Restore #REGbc.
 $8D22 LD (IY+$00),$00 ; Set to no attribute found.
 $8D26 INC HL          ; Move forward a column.
 $8D27 DJNZ $8D0F      ; Repeat until all columns have been checked.
 $8D29 LD (IY+$00),$04 ; { Mark this as empty space
 $8D2D RET             ; and return. }

; Update the movement tables (down)
;
; Used by the routine at #R$8C3D.
;
; HL Attribute in the current position
; IY Pointer to movement table  (#R$8D54)
; B Number of rows
c$8D2E LD DE,$C51A     ; Point to the start of the movement attributes table (#R$C51A).
 $8D31 PUSH BC         ; Remember #REGbc.
 $8D32 LD B,$04        ; Count four types.
 $8D34 LD A,(HL)       ; { Is the current attribute this one?
 $8D35 EX DE,HL        ;
*$8D36 CP (HL)         ; }
 $8D37 JR Z,$8D50      ; If so, found the attribute we want.
 $8D39 INC (IY+$00)    ; Increment the type of attribute looked for.
 $8D3C INC HL          ; Move to the next attribute.
 $8D3D DJNZ $8D36      ; Repeat for the next four types.
 $8D3F EX DE,HL        ; Restore #REGhl to the start of the table.
 $8D40 POP BC          ; Restore #REGbc.
 $8D41 LD (IY+$00),$00 ; Initialise to no movement.
 $8D45 LD DE,$0020     ; { Move forward a row.
 $8D48 ADD HL,DE       ; }
 $8D49 DJNZ $8D2E      ; Repeat until all rows have been checked.
 $8D4B LD (IY+$00),$04 ; { Mark this as empty space
 $8D4F RET             ; and return. }
 ; We've found a matching attribute and have set it.
 ; This entry point is used by the routine at #R$8D0F.
*$8D50 POP BC          ; { Tidy up the stack and return.
 $8D51 RET             ; }

; Room flags
;
; #TABLE( center, default )
; { =h bit | =h value }
; { 0 | }
; { 1 | Monty is jumping }
; { 2 | Monty can climb }
; { 3 | Monty has picked up the non-coal item }
; { 4 | If reset, Monty can move right }
; { 5 | If reset, Monty can move left }
; { 6 | If reset, Monty can move down }
; { 7 | If reset, Monty can move up }
; TABLE# 
g$8D52 DEFB $00

; Game flags
;
; #TABLE( center, default )
; { =h bit | =h value }
; { 0 | If reset, background objects can move }
; { 1 | If set, Monty is in mid-air }
; { 2 | }
; { 3 | }
; { 4 | }
; { 5 | }
; { 6 | }
; { 7 | }
; TABLE# 
g$8D53 DEFB $00

; Movement flags
;
; These four bytes describe what movement can be made
; up, down, left and right, with the following values:
; #TABLE( center, default )
; { =h value | =h description }
; { 0 | Movement is blocked }
; { 1 | Fire (fatal) }
; { 2 | Ladder (can be climbed) }
; { 3 | Not used }
; { 4 | Empty space (can be walked through) }
; TABLE#
;
; .
;
; Used by the routines at #R$8B90, #R$8C3D, #R$8D0F and #R$8D2E.
g$8D54 DEFB $03, $09, $52, $45

; Distance fallen by
g$8D58 DEFB $00

; Current attribute address of Monty
g$8D59 DEFW $0000

; Y screen offset for attribute
g$8D5B DEFB $00

; X screen offset for attribute
g$8D5C DEFB $00

; X co-ordinate on screen
g$8D5D DEFB $00

; Y co-ordinate on screen
g$8D5E DEFB $00

; Return the current screen address
;
; Used by the routine at #R$8B90.
;
; HL On exit, holds the screen address for the current location.
c$8D5F LD A,($5C7C)  ; Get the Y co-ordinate.
 $8D62 SUB $10       ; { Convert it to an offset in the screen address buffer.
 $8D64 LD L,A        ;
 $8D65 LD H,$00      ;
 $8D67 ADD HL,HL     ;
 $8D68 LD DE,$EA60   ;
 $8D6B ADD HL,DE     ; }
 $8D6C LD A,(HL)     ; { Put the screen address in #REGhl.
 $8D6D INC HL        ;
 $8D6E LD H,(HL)     ;
 $8D6F LD L,A        ; }
 $8D70 LD D,$00      ; Initialise D to add the X co-ordinate.
 $8D72 LD A,($5C7B)  ; Get the X co-ordinate.
 $8D75 AND $F8       ; { Convert to a screen offset and store it in E.
 $8D77 RRCA          ;
 $8D78 RRCA          ;
 $8D79 RRCA          ;
 $8D7A LD E,A        ; }
 $8D7B ADD HL,DE     ; { Put the screen address in HL and return.
 $8D7C RET           ; }

; Temp store for screen position
g$8D7D DEFB $00,$00

; Play death tune
;
; Used by the routine at #R$946E.
c$8D7F LD HL,$FFE0    ; #R$FFE0 is the "dead Monty" graphic.
 $8D82 LD ($ECE0),HL  ; Store this.
 $8D85 LD HL,($5C7B)  ; Get the current position.
 $8D88 LD ($ECDE),HL  ; Store this as the place to print.
 $8D8B CALL $EBE0     ; Print the graphic.
 $8D8E LD HL,$0000    ;
 $8D91 LD ($9177),HL  ;
 $8D94 CALL $D254     ; Copy the screen to the graphic buffer.
 $8D97 LD IX,$8D52    ; { Set Monty as being in mid-air.
 $8D9B SET 1,(IX+$01) ; }
 $8D9F EI             ; Enable interrupts
 $8DA0 LD IX,$5C7D    ; Load #REGix with the start of the death tune.
*$8DA4 PUSH IX        ; Remember this, as the ROM routine overwrites it.
 $8DA6 LD E,(IX+$00)  ; { Put the length in #REGde.
 $8DA9 LD D,(IX+$01)  ; }
 $8DAC LD L,(IX+$02)  ; { Put the frequency in #REGhl.
 $8DAF LD H,(IX+$03)  ; }
 $8DB2 CALL $03B6     ; BEEP without enabling interrupts.
 $8DB5 LD B,$FF       ; { Pause between notes.
*$8DB7 DJNZ $8DB7     ; }
 $8DB9 POP IX         ; Restore IX.
 $8DBB LD A,($9179)   ; Get the current frame number.
 $8DBE CP $FF         ; Is it #$FF, meaning the angel has gone?
 $8DC0 RET Z          ; Return if so.
 $8DC1 LD DE,$0004    ; { Move forward to the next bit of tune data.
 $8DC4 ADD IX,DE      ; }
 $8DC6 XOR A          ; { Is the length 0?
 $8DC7 OR (IX+$00)    ; }
 $8DCA JR NZ,$8DA4    ; If not, move back to play more of the tune.
 $8DCC RET            ; Otherwise return.

; Move a crusher
;
; Used by the routine at #R$8F9F.
;
; IX Pointer to room flags (#R$8D53)
c$8DCD LD IY,$C527     ; Point #REGiy at the crusher data (#R$C527).
 $8DD1 LD A,(IY+$00)   ; { Are the X and Y co-ordinates both zero?
 $8DD4 OR (IY+$01)     ; }
 $8DD7 RET Z           ; If so, there are no crushers here, so return.
 $8DD8 LD A,(IY+$03)   ; { Is it time to fire a crusher?
 $8DDB OR A            ; }
 $8DDC JR Z,$8DE2      ; Jump if it is.
 $8DDE DEC (IY+$03)    ; { Otherwise decrement the time to fire and return.
 $8DE1 RET             ; }
; The crusher should now be activated.
*$8DE2 BIT 0,(IY+$04)  ; Is the crusher descending?
 $8DE6 CALL NZ,$9148   ; See if Monty is underneath one and if so, kill him.
 $8DE9 BIT 0,(IY+$04)  ; Is the crusher descending?
 $8DED JR NZ,$8E10     ; Jump forward if not.
; The crusher is ascending.
 $8DEF INC (IY+$01)    ; { Move down two rows.
 $8DF2 INC (IY+$01)    ; }
 $8DF5 LD A,(IY+$05)   ; { Has the Y co-ordinate reached the top?
 $8DF8 CP (IY+$01)     ; }
 $8DFB JR NC,$8E0C     ; Jump forward if it hasn't.
; The crusher has reached the top.
 $8DFD LD (IY+$04),$01 ; Signal that the crusher is descending.
 $8E01 CALL $FD9B      ; Get a pseudo-random number.
 $8E04 RES 7,C         ; { Ensure it is a number between 1 and #N$80.
 $8E06 INC C           ; }
 $8E07 LD A,C          ; { Store it as the next time to fire and return.
 $8E08 LD (IY+$03),A   ; 
 $8E0B RET             ; }
*$8E0C CALL $8E2C      ; { Redraw the crusher and return.
 $8E0F RET             ; }
; The crusher is descending.
*$8E10 DEC (IY+$01)    ; { Move down two rows.
 $8E13 DEC (IY+$01)    ; }
 $8E16 LD A,(IY+$02)   ; { Has the Y co-ordinate reached the bottom?
 $8E19 CP (IY+$01)     ; }
 $8E1C JR C,$8E0C      ; Jump back if it hasn't.
; The crusher has reached the bottom.
 $8E1E LD (IY+$04),$00 ; Signal that the crusher is ascending.
 $8E22 LD DE,$0002     ; Set the length.
 $8E25 LD HL,$066A     ; Set the frequency.
 $8E28 CALL $03B6      ; Call the ROM beep routine without enabling interrupts.
 $8E2B RET             ;

; Draw a crusher
;
; Used by the routine at #R$8DCD
*$8E2C LD IY,$C527     ; Point #REGiy at the crusher data.
 $8E30 LD L,(IY+$01)   ; { Put the y co-ordinate in #REGhl.
 $8E33 LD H,$00        ; }
 $8E35 ADD HL,HL       ; Double this to get a word offset.
 $8E36 LD DE,$EA60     ; { Add the base address of the screen address buffer (#R$EA60).
 $8E39 ADD HL,DE       ; }
 $8E3A PUSH HL         ; { Put the actual address in IX.
 $8E3B POP IX          ; }
 $8E3D LD B,$09        ; 9 rows to update.
 $8E3F BIT 0,(IY+$04)  ; Is the crusher ascending?
 $8E43 JR Z,$8E4B      ; Jump forward if it is.
 $8E45 LD IY,$8E7A     ; { Point #REGiy at the crusher graphic.
 $8E49 JR $8E4F        ; }
*$8E4B LD IY,$8E80     ; Point #REGiy at the second line of the crusher graphic.
*$8E4F PUSH BC         ; Remember #REGbc.
 $8E50 LD E,(IX+$00)   ; { Put the screen address in #REGde.
 $8E53 LD D,(IX+$01)   ; }
 $8E56 DEC IX          ; { Move up a row.
 $8E58 DEC IX          ; }
 $8E5A LD H,$00        ; { Put the x co-ordinate in #REGhl.
 $8E5C LD A,($C527)    ;
 $8E5F LD L,A          ; }
 $8E60 ADD HL,DE       ; Add this to the base offset of the screen address buffer.
 $8E61 EX DE,HL        ; Swap #REGde and #REGhl.
 $8E62 LD HL,$9260     ; { Add the offset to the screen address to get an offset
 $8E65 ADD HL,DE       ; on the screen buffer from #R$D260. }
 $8E66 LD B,$03        ; 3 columns to update.
*$8E68 LD A,(IY+$00)   ; Get the graphic.
 $8E6B LD (HL),A       ; { Store it on the screen and the buffer.
 $8E6C LD (DE),A       ; }
 $8E6D INC IY          ; { Move forward.
 $8E6F INC HL          ;
 $8E70 INC DE          ; }
 $8E71 DJNZ $8E68      ; Loop until all columns on this row are drawn.
 $8E73 POP BC          ; Restore #REGbc to get the number of rows left.
 $8E74 DJNZ $8E4F      ; Loop until all the rows are drawn.
 $8E76 CALL $8E9B      ; Set the attribute for the crusher.
 $8E79 RET             ;

; Crusher graphic
;
; #UDGARRAY3,7,2,3($8E7A-$8E7C)(crusher)
b$8E7A DEFB $1F,$FF,$50,$1F,$FF,$A8,$1F,$FF
 $8E82 DEFB $50,$1F,$FF,$A8,$FF,$FF,$F5,$91
 $8E8A DEFB $52,$BA,$B7,$5A,$35,$97,$16,$BA
 $8E92 DEFB $FF,$FF,$F5,$00,$00,$00,$00,$00

 ; Unused
u$8E9A DEFB $00

; Set the attributes for a crusher.
;
; Used by the routine at #R$8DCD.
c$8E9B LD IY,$C527    ; { Get the Y co-ordinate.
 $8E9F LD A,(IY+$01)  ; }
 $8EA2 SUB $08        ; { Convert this into a screen address and put it in #REGhl.
 $8EA4 AND $F8        ;
 $8EA6 RRCA           ;
 $8EA7 RRCA           ;
 $8EA8 RRCA           ;
 $8EA9 LD B,$18       ;
 $8EAB SUB B          ;
 $8EAC NEG            ;
 $8EAE DEC A          ;
 $8EAF LD L,A         ;
 $8EB0 LD H,$00       ; }
 $8EB2 ADD HL,HL      ; { Multiply by 16 to get an appropriate offset in the attribute buffer.
 $8EB3 ADD HL,HL      ;
 $8EB4 ADD HL,HL      ;
 $8EB5 ADD HL,HL      ;
 $8EB6 ADD HL,HL      ; }
 $8EB7 LD DE,$5800    ; { Add the base offset of the attribute buffer.
 $8EBA ADD HL,DE      ; }
 $8EBB LD E,(IY+$00)  ; { Put the X co-ordinate in #REGde.
 $8EBE LD D,$00       ; }
 $8EC0 ADD HL,DE      ; Add this to get the correct attribute address.
 $8EC1 BIT 0,(IY+$04) ; Is the crusher ascending?
 $8EC5 JR Z,$8ED0     ; Move forward if so.
 $8EC7 SET 6,(HL)     ; { Turn on the brightness bit for the three colums in this row.
 $8EC9 INC HL         ;
 $8ECA RES 6,(HL)     ;
 $8ECC INC HL         ;
 $8ECD RES 6,(HL)     ; }
 $8ECF RET            ; Return.
; The crusher is ascending, turn off the brightness.
*$8ED0 LD DE,$0020    ; { Move up a row.
 $8ED3 ADD HL,DE      ; }
 $8ED4 SET 6,(HL)     ; { Turn off the brightness bits.
 $8ED6 INC HL         ;
 $8ED7 SET 6,(HL)     ;
 $8ED9 INC HL         ;
 $8EDA SET 6,(HL)     ; }
 $8EDC RET            ; Return.

; Animate Monty's angel as he has died
;
; Used by the routine at #R$8F9F.
c$8EDD LD A,($9179)  ; { Increase the frame number between 0 and 3.
 $8EE0 INC A         ;
 $8EE1 AND $03       ;
 $8EE3 LD ($9179),A  ; }
 $8EE6 OR A          ; Is the frame zero?
 $8EE7 JP NZ,$9048   ; Exit if so.
 $8EEA LD HL,$5C7C   ; Get the current Y co-ordinate.
 $8EED INC (HL)      ; { Move up two rows.
 $8EEE INC (HL)      ; }
 $8EEF LD A,$BE      ; { Has the angel reached the top of the screen?
 $8EF1 CP (HL)       ; }
 $8EF2 JR NC,$8F12   ; Move forward if not.
; The angel has now reached the top of the screen.
 $8EF4 LD HL,$7780   ; #R$7780 is the empty graphic.
 $8EF7 LD ($ECE0),HL ; Store the graphic to draw.
 $8EFA LD HL,($5C7B) ; { Get the player's position.
 $8EFD LD ($ECDE),HL ; }
 $8F00 CALL $EBE0    ; Draw (erase) the graphic.
 $8F03 LD HL,$8D53   ; Get the game flags.
 $8F06 RES 1,(HL)    ; Reset flag 1 (Monty in mid-air).
 $8F08 SET 0,(HL)    ; Set flag 0 (nasties can move)
 $8F0A LD A,$FF      ; { Set the frame to #N$FF, denoting "not used"
 $8F0C LD ($9179),A  ; }
 $8F0F JP $9048      ; Exit to restore all registers.
; The angel needs redrawing.
*$8F12 LD HL,($9177) ; { Move the current position up a row.
 $8F15 LD DE,$0020   ; 
 $8F18 ADD HL,DE     ;
 $8F19 RES 7,L       ; 
 $8F1B LD ($9177),HL ; }
 $8F1E LD DE,$FF60   ; { Move back to get an appropriate screen address.
 $8F21 ADD HL,DE     ; }
 $8F22 LD ($ECE0),HL ; Set this as the graphic to print.
 $8F25 LD HL,($5C7B) ; { Set the current position as the position to draw.
 $8F28 LD ($ECDE),HL ; }
 $8F2B CALL $EBE0    ; Draw the graphic.
 $8F2E JP $9048      ; Exit to restore all registers.

; Update the moving platforms
;
; Used by the routine at #R$F7C7.
c$8F31 LD IY,$C622    ; Set #REGiy to the moving platforms data (#R$C622).
 $8F35 BIT 7,(IY+$06) ; Are the platforms moving outward?
 $8F39 JR NZ,$8F6D    ; Jump if so.
; The platforms are moving inward.
*$8F3B LD A,(IY+$00)  ; { Are the X and Y co-ordinates both zero?
 $8F3E OR (IY+$01)    ; }
 $8F41 RET Z          ; If so, there are no moving platforms here, so return.
 $8F42 LD HL,$B600    ; This is the code for NOP; OR (HL)
 $8F45 LD ($90A4),HL  ; Set this to the drawing routine at #R$90A3 to draw inwards.
 $8F48 LD A,(IY+$03)  ; { Has the platform reached the middle?
 $8F4B CP (IY+$00)    ; }
 $8F4E JR NZ,$8F60    ; Jump forward if not.
 $8F50 LD A,$80       ; { Swap the direction from inward to outward.
 $8F52 XOR (IY+$06)   ;
 $8F55 LD (IY+$06),A  ; }
 $8F58 INC (IY+$00)   ; { Move the left platform in and the right platform out.
 $8F5B DEC (IY+$04)   ; }
 $8F5E JR $8F6D       ; Jump to move outward.
; The platforms are moving inward and have not reached the edge.
*$8F60 INC (IY+$00)   ; Move the left platform to the right
 $8F63 CALL $9052     ; Draw the left platform.
 $8F66 DEC (IY+$04)   ; Move the right platform to the left
 $8F69 CALL $9058     ; Draw the right platform.
 $8F6C RET            ; Add done.
; The platforms are moving outward.
*$8F6D LD A,(IY+$04)  ; { Are the X and Y co-ordinates both zero?
 $8F70 OR (IY+$05)    ; }
 $8F73 RET Z          ; If so, there are no moving platforms here, so return.
 $8F74 LD HL,$A62F    ; This is the code for LD A,C; CPL
 $8F77 LD ($90A4),HL  ; Set this to the drawing routine at #R$90A3 to draw outwards.
 $8F7A LD A,(IY+$02)  ; { Has the platform reached the left edge?
 $8F7D CP (IY+$00)    ; }
 $8F80 JR NZ,$8F92    ; No, so move forward.
 $8F82 LD A,$80       ; { Swap the direction from outward to inward.
 $8F84 XOR (IY+$06)   ;
 $8F87 LD (IY+$06),A  ; }
 $8F8A DEC (IY+$00)   ; { Move the left platform out and the right platform in.
 $8F8D INC (IY+$04)   ; }
 $8F90 JR $8F3B       ; Jump to move inward.
; The platforms are moving outward and have not reached the edge.
*$8F92 DEC (IY+$00)   ; Shift the left platform out.
 $8F95 CALL $9052     ; Draw it.
 $8F98 INC (IY+$04)   ; Shift the right platform in.
 $8F9B CALL $9058     ; Draw it.
 $8F9E RET            ;

; IM2 routine for main game
;
; Used by the routine at #R$5B5B. 
;
; .
;
; Animate all opening / closing platforms, crushers, water, and Monty dying (if
; appropriate)
c$8F9F PUSH AF        ; { Save all registers, as this was called by an interrupt.
 $8FA0 PUSH BC        ;
 $8FA1 PUSH DE        ;
 $8FA2 PUSH HL        ;
 $8FA3 PUSH IX        ;
 $8FA5 PUSH IY        ; }
 $8FA7 LD A,($9649)   ; { Is this room #N$11?
 $8FAA CP $11         ; }
 $8FAC CALL Z,$90BD   ; If so, animate the shower.
 $8FAF LD IX,$8D53    ; Point #REGix to game flags.
 $8FB3 BIT 0,(IX+$00) ; Can animation happen?
 $8FB7 JP NZ,$9048    ; Jump forward if not.
 $8FBA BIT 1,(IX+$00) ; Is Monty still alive?
 $8FBE JP NZ,$8EDD    ; No, so animate the angel.
 $8FC1 CALL $F7C7     ; Perform background actions.
 $8FC4 CALL $8DCD     ; Animate all moving objects.
; Some rooms have water in them which needs animating.
 $8FC7 LD A,($9649)   ; { Is this room #N$08?
 $8FCA CP $08         ; }
 $8FCC JR NZ,$8FDC    ; No, so jump forward.
; Animate the water in room #N$08.
 $8FCE LD HL,($EAAA)  ; Get the screen offset for the water's y co-ordinate in room #N$08.
 $8FD1 LD DE,$000B    ; { Add the x co-ordinate.
 $8FD4 ADD HL,DE      ; }
 $8FD5 LD C,$05       ; Width is 5.
 $8FD7 CALL $90A8     ; { Animate the water and skip the rest of this routine.
 $8FDA JR $9048       ; }
; Animate the water in room #N$09.
*$8FDC CP $09         ; Is this room #N$09?
 $8FDE JR NZ,$8FEE    ; No, so jump forward.
 $8FE0 LD HL,($EACA)  ; Get the screen offset for the water's y co-ordinate in room #N$09.
 $8FE3 LD DE,$000E    ; { Add the x co-ordinate.
 $8FE6 ADD HL,DE      ; }
 $8FE7 LD C,$12       ; Width is #N$12.
 $8FE9 CALL $90A8     ; { Animate the water and skip the rest of this routine.
 $8FEC JR $9048       ; }
; Animate the water in room #N$0A.
*$8FEE CP $0A         ; Is this room #N$0A?
 $8FF0 JR NZ,$8FFC    ; No, so jump forward.
 $8FF2 LD HL,($EACA)  ; Get the screen offset for the water's y co-ordinate in room #N$0A.
 $8FF5 LD C,$14       ; Width is #N$14.
 $8FF7 CALL $90A8     ; { Animate the water and skip the rest of this routine.
 $8FFA JR $9048       ; }
; Animate the water in room #N$0B.
*$8FFC CP $0B         ; Is this room #N$0B?
 $8FFE JR NZ,$9048    ; No, so jump foward.
 $9000 LD HL,($EAAA)  ; Get the screen offset for the first water's y co-ordinate in room #N$0B.
 $9003 LD DE,$0006    ; Set the x co-ordinate.
 $9006 LD C,$03       ; Width is 3.
 $9008 ADD HL,DE      ; Add the x co-ordinate.
 $9009 CALL $90A8     ; Animate the water.
 $900C LD HL,($EA9A)  ; Get the screen offset for the second water's y co-ordinate.
 $900F LD DE,$000C    ; { Add the x co-ordinate.
 $9012 ADD HL,DE      ; }
 $9013 LD C,$06       ; Width is 6.
 $9015 CALL $90A8     ; Animate the water.
 $9018 LD HL,($EAAA)  ; Get the screen offset for the third water's y co-ordinate.
 $901B LD DE,$0015    ; { Add the x co-ordinate.
 $901E ADD HL,DE      ; }
 $901F LD C,$03       ; Width is 3.
 $9021 CALL $90A8     ; Animate the water.
 $9024 LD HL,($EAAA)  ; Get the screen offset for the fourth water's y co-ordinate.
 $9027 LD DE,$001B    ; { Add the x co-ordinate.
 $902A ADD HL,DE      ; }
 $902B LD C,$02       ; Width is 2.
 $902D CALL $90A8     ; Animate the water.
 $9030 LD HL,($EB2A)  ; Get the screen offset for the fifth water's y co-ordinate.
 $9033 LD DE,$0015    ; { Add the x co-ordinate.
 $9036 ADD HL,DE      ; }
 $9037 LD C,$02       ; Width is 2.
 $9039 CALL $90A8     ; Animate the water.
 $903C LD HL,($EB1A)  ; Get the screen offset for the sixth water's y co-ordinate.
 $903F LD DE,$0018    ; { Add the x co-ordinate.
 $9042 ADD HL,DE      ; }
 $9043 LD C,$03       ; Width is 3.
 $9045 CALL $90A8     ; Animate the water.
; This entry point is used by the routine at #R$8EDD, and is a common exit point.
*$9048 POP IY         ; { Restore all registers.
 $904A POP IX         ;
 $904C POP HL         ;
 $904D POP DE         ;
 $904E POP BC         ;
 $904F POP AF         ; }
 $9050 EI             ; { Re-enable interrupts and return.
 $9051 RET            ; }

; Update one side of a moving platform
;
; Used by the routine at #R$8F31.
;
; .
;
; The routine is called at #R$9052 for the left side, and #R$9058 for the right
; side
c$9052 LD IY,$C622   ; { Point to the left hand buffer and jump forward.
 $9056 JR $905C      ; }
*$9058 LD IY,$C626   ; Point to the right hand buffer.
; This entry point is used by the routine at #R$8F31.
*$905C LD A,(IY+$00) ; { Are the x and y co-ordinates both zero?
 $905F OR (IY+$01)   ; }
 $9062 RET Z         ; If so, there are no moving platforms here, so return.
 $9063 LD H,$00      ; { Put the y co-ordinate in #REGhl.
 $9065 LD L,(IY+$01) ; }
 $9068 ADD HL,HL     ; Double it to get a word entry in the screen offset buffer.
 $9069 LD DE,$EA60   ; { Add the base pointer to the screen offsets (#R$EA60).
 $906C ADD HL,DE     ; }
 $906D LD A,(HL)     ; { Put the screen address in #REGhl.
 $906E INC HL        ;
 $906F LD H,(HL)     ;
 $9070 LD L,A        ; }
 $9071 LD A,(IY+$00) ; Get the x co-ordinate.
 $9074 AND $F8       ; { Extract the top 5 bits as a value.
 $9076 RRCA          ;
 $9077 RRCA          ;
 $9078 RRCA          ; }
 $9079 LD E,A        ; { Put this in #REGde.
 $907A LD D,$00      ; }
 $907C ADD HL,DE     ; Add to get the actual screen address in #REGhl.
 $907D PUSH HL       ; Remember this.
 $907E LD A,(IY+$00) ; { Get the bottom 3 bits of the x co-ordinate
 $9081 AND $07       ; }
 $9083 CALL $909B    ; { Shift it and store the result in #REGc.
 $9086 LD C,A        ; }
 $9087 LD B,$03      ; 3 rows to draw.
 $9089 POP DE        ; Restore screen address.
 $908A LD HL,$9260   ; { Add the offset to get a position in the screen buffer at #R$D260.
 $908D ADD HL,DE     ; }
*$908E CALL $90A3    ; Update a byte in the screen buffer.
 $9091 EX DE,HL      ; Swap #REGhl to the actual screen address.
 $9092 CALL $90A3    ; Update again; this ensures both the screen and the copy are in sync.
 $9095 EX DE,HL      ; Put #REGhl and #REGde the right way round again.
 $9096 INC H         ; { Move to the next row on screen.
 $9097 INC D         ; }
 $9098 DJNZ $908E    ; { Loop round until all the rows are drawn.
 $909A RET           ; }

; Shift a moving platform byte (?)
;
; Used by the routine at #R$9052.
;
; A Current bits
*$909B INC A         ; { Set #REGb to loop over this value.
 $909C LD B,A        ; }
 $909D XOR A         ; Clear #REGa.
 $909E SCF           ; Set the first shifted in bit to be 1.
*$909F RRA           ; { Shift the bits the required number of times.
 $90A0 DJNZ $909F    ; }
 $90A2 RET           ; Otherwise return.

; Update one byte of a moving platform
;
; Used by the routine at #R$9052.
;
; HL Address to update
; C New bits to include
c$90A3 LD A,C        ; Get the new bits.
 $90A4 NOP           ; { This code is changed to LD A,C ; CPL by the
 $90A5 OR (HL)       ; routine at #R$8F6D, which changes drawing inward to drawing outward. }
 $90A6 LD (HL),A     ; { Set the new value and return.
 $90A7 RET           ; }

; Animate water
;
; Used by the routines at #R$8F9F and #R$CDEF.
;
; HL Starting screen address of the water
; C Width of the water in UDGs
c$90A8 DEC C         ; Copy is from 0 to width - 1.
 $90A9 LD B,$03      ; 3 rows to draw.
*$90AB PUSH BC       ; Remember this.
 $90AC LD B,$00      ; Set #REGb to 0 so that #REGbc can be used as a length.
 $90AE PUSH HL       ; Remember the screen address.
 $90AF LD A,(HL)     ; Get the next byte.
 $90B0 RLCA          ; { Shift all bytes left and store the new value.
 $90B1 LD (HL),A     ; }
 $90B2 LD D,H        ; { Copy everything 1 byte forward. 
 $90B3 LD E,L        ;
 $90B4 INC DE        ;
 $90B5 LDIR          ; }
 $90B7 POP HL        ; Restore the screen address.
 $90B8 INC H         ; Move to next row.
 $90B9 POP BC        ; Restore count of rows.
 $90BA DJNZ $90AB    ; Loop if there is more to do.
 $90BC RET           ; Otherwise return.

; Animate the shower water in room #N$11
;
; Used by the routine at #R$8F9F.
c$90BD LD HL,$912B   ; Get the graphic index for the shower head (#R$912B).
 $90C0 LD A,($C526)  ; { Does it match the index for this room?
 $90C3 CP (HL)       ; }
 $90C4 JR NZ,$912C   ; No, so set it.
 $90C6 OR A          ; { Return if it is zero.
 $90C7 RET Z         ; }
 $90C8 LD HL,($9129) ; Put the last two bytes of the graphic in #REGhl.
 $90CB PUSH HL       ; Store it.
 $90CC LD HL,$9128   ; { Shift the other bytes down.
 $90CF LD DE,$912A   ;
 $90D2 LD BC,$001E   ;
 $90D5 LDDR          ; }
 $90D7 POP HL        ; { Restore the last byte and put it on the front.
 $90D8 LD ($910B),HL ; }
 $90DB LD IX,$910B   ; Point to the first graphic frame.
 $90DF LD HL,$4841   ; Location on screen.
 $90E2 LD DE,$DAA1   ; Location in the screen buffer.
 $90E5 CALL $90F2    ; Draw it.
 $90E8 LD HL,$4861   ; Location on screen.
 $90EB LD DE,$DAC1   ; Location in the screen buffer.
 $90EE LD IX,$911B   ; Pointer to the second graphic frame.
; Draw the next graphic. This entry point is used by the routine at #R$912C.
*$90F2 LD B,$08      ; 8 rows to draw.
*$90F4 LD A,(IX+$00) ; Get the graphic.
 $90F7 LD (HL),A     ; Put the graphic on screen.
 $90F8 LD (DE),A     ; Put the graphic in the screen buffer.
 $90F9 INC L         ; { Move to the next column. 
 $90FA INC E         ; }
 $90FB LD A,(IX+$01) ; Get the graphic.
 $90FE LD (HL),A     ; Put the graphic on screen.
 $90FF LD (DE),A     ; Put the graphic in the screen buffer.
 $9100 INC H         ; { Move to the next row,
 $9101 DEC L         ; and back to the first column.
 $9102 INC D         ;
 $9103 DEC E         ; }
 $9104 INC IX        ; { Move forward to the next graphic.
 $9106 INC IX        ; }
 $9108 DJNZ $90F4    ; { Loop until all the rows are drawn.
 $910A RET           ; }

; Graphic buffer for shower water in room #N$11
;
; #UDGARRAY2,7,2,2($910B-$910C;$911B-$911C)(shower)
b$910B DEFB $01,$B2,$00,$00,$01,$04,$03,$06
 $9113 DEFB $02,$8A,$01,$AC,$00,$00,$00,$00
 $911B DEFB $01,$A2,$01,$30,$00,$50,$00,$60
 $9123 DEFB $00,$01,$01,$10,$00,$18,$00,$28

; Graphic index for shower in room #N$11
b$912B DEFB $00

; Animate the shower water in room #N$11 (2)
;
; Used by the routine at #R$90BD.
;
; HL Graphic index for the shower head
; A ID to set.
c$912C LD (HL),A     ; Set the value
; Draw the top row.
 $912D LD IX,$7780   ; #R$7780 is the empty graphic.
 $9131 LD HL,$4841   ; Location on screen.
 $9134 LD DE,$DAA1   ; Location in the screen buffer.
 $9137 CALL $90F2    ; Draw the graphic.
; Draw the bottom row.
 $913A LD IX,$7780   ; #R$7780 is the empty graphic.
 $913E LD HL,$4861   ; Location on screen.
 $9141 LD DE,$DAC1   ; Location in the screen buffer.
 $9144 CALL $90F2    ; Draw the graphic.
; Both rows done.
 $9147 RET           ; Return.

; Check that a crusher has killed Monty
;
; This is done by checking the area three lines under the crusher is empty
; .
; If not, Monty must be underneath it, and is crushed!
c$9148 LD A,(IY+$01) ; Get the crusher Y co-ordinate.
 $914B SUB $09       ; { Convert it to a screen offset.
 $914D LD L,A        ;
 $914E LD H,$00      ;
 $9150 ADD HL,HL     ; }
 $9151 LD DE,$EA60   ; { Add to the screen offset buffer #R$EA60 to get the right screen position.
 $9154 ADD HL,DE     ; }
 $9155 LD A,(HL)     ; { Put the screen position in #REGhl.
 $9156 INC HL        ;
 $9157 LD H,(HL)     ;
 $9158 LD L,A        ; }
 $9159 LD D,$00      ; { Add the X co-ordinate to get the correct screen address.
 $915B LD E,(IY+$00) ; 
 $915E ADD HL,DE     ; }
 $915F EX DE,HL      ; { Convert the screen offset to an offset in the buffer at #R$D260.
 $9160 LD HL,$9260   ; 
 $9163 ADD HL,DE     ; }
 $9164 LD C,$00      ; Current line.
 $9166 LD B,$03      ; Number of lines.
*$9168 LD A,(DE)     ; Get the line from the screen.
 $9169 XOR (HL)      ; { Check for any bits on screen found.
 $916A OR C          ; and copy from the previous line. }
 $916B LD C,A        ; Store next line data.
 $916C INC HL        ; { Move to next column on screen.
 $916D INC DE        ; }
 $916E DJNZ $9168    ; Loop back if there is more to do.
 $9170 LD A,C        ; { Were any bits set?
 $9171 OR A          ; }
 $9172 RET Z         ; Return if not.
 $9173 DI            ; { Otherwise, something was in the way of the crusher, which must have been Monty,
 $9174 JP $946E      ; so kill him. }

; Offset for Monty's angel as it is animated
g$9177 DEFW $0000    ;

; Frame number for the angel (0-3)
g$9179 DEFB $00     ;


; Make Monty climb a ladder
;
; Used by the routine at #R$89D4.
c$917A LD A,($849B)  ; { Put the last input data from climbing or falling (#R$849B) in #REGb.
 $917D LD B,A        ; }
 $917E LD A,($832E)  ; { Compare this against the actual last input data.
 $9181 CP B          ; }
 $9182 JP NZ,$8A5B   ; Jump back if there isn't a match.
 $9185 LD HL,$5C7C   ; Point #REGhl at the current Y co-ordinate (#R$5C7C).
 $9188 LD A,($832E)  ; { Was the direction up?
 $918B OR A          ; }
 $918C JR NZ,$9193   ; Jump back if not.
; Monty is moving up the ladder.
 $918E INC (HL)      ; { Increase the Y co-ordinate by 2.
 $918F INC (HL)      ; }
 $9190 JP $8A27      ; Jump back to update Monty's position.
; Monty is not moving up the ladder, is he moving down?
*$9193 CP $01        ; Was the direction down?
 $9195 JP NZ,$8A0A   ; Jump back if not.
 $9198 DEC (HL)      ; { Decrease the Y co-ordinate by 2.
 $9199 DEC (HL)      ; }
 $919A JP $8A27      ; Jump back to update Monty's position.

; Add value of coal to the current score
;
; Used by the routine at #R$935C.
;
; A Score to add
c$919D LD B,A          ; Start a loop based on the score value.
 $919E LD A,$0A        ; Flag $0A as the digit requiring decimal adjustment. 
 $91A0 LD IX,$9217     ; Point to the score (#R$9217).
*$91A4 INC (IX+$00)    ; { Increment the score, but jump forward if it reaches #N$A.
 $91A7 CP (IX+$00)     ;
 $91AA JR Z,$91B2      ; }
*$91AC DJNZ $91A4      ; Otherwise loop back round and add more.
 $91AE CALL $91E8      ; { Print the score and return.
 $91B1 RET             ; }
; The score needs adjusting for decimal.
*$91B2 LD (IX+$00),$00 ; { Carry the 10s.
 $91B6 INC (IX+$01)    ; }
 $91B9 CP (IX+$01)     ; { Continue if there is no more overflow.
 $91BC JR NZ,$91AC     ; }
 $91BE LD (IX+$01),$00 ; { Carry the 100s.
 $91C2 INC (IX+$02)    ; }
 $91C5 CP (IX+$02)     ; { Continue if there is no more overflow.
 $91C8 JR NZ,$91AC     ; }
 $91CA LD (IX+$02),$00 ; { Carry the 1000s.
 $91CE INC (IX+$03)    ; }
 $91D1 CP (IX+$03)     ; { Continue if there is no more overflow.
 $91D4 JR NZ,$91AC     ; }
 $91D6 LD (IX+$03),$00 ; { Carry the 10,000s.
 $91DA INC (IX+$04)    ; }
 $91DD CP (IX+$04)     ; { Continue if there is no more overflow.
 $91E0 JR NZ,$91AC     ; }
 $91E2 LD (IX+$04),$00 ; { The maximum possible score is 99,999 - overflow to 0 and continue.
 $91E6 JR $91AC        ; }

; Print the score
;
; Used by the routines at #R$919D, #R$9551, #R$CAD1, #R$CD41 and #R$F817.
c$91E8 LD B,$05       ; Print 5 characters
 $91EA LD IX,$9217    ; Point IX to the score digits at #R$9217.
 $91EE LD IY,$9227    ; Point IY to the end of the score text at #R$9223.
*$91F2 LD A,(IX+$00)  ; Get the next digit.
 $91F5 ADD A,$1B      ; Convert it to a character in the character set (#R$813B).
 $91F7 LD (IY+$00),A  ; Store the digit in the printable text.
 $91FA DEC IY         ; Move back a character.
 $91FC INC IX         ; Move forward a digit.
 $91FE DJNZ $91F2     ; Loop until all 5 characters are done.
 $9200 SET 7,(IY+$05) ; Set bit 7 on the last character to mark the end of the string.
 $9204 LD IX,$9212    ; Point IX at the score position data.
 $9208 LD IY,$921C    ; Point IY at the text to print.
 $920C LD B,$01       ; Print one line.
 $920E PUSH BC        ; Ensure the stack is correct for the printing routine.
 $920F JP $809D       ; Print the string.

; Score position data
;
; Format is x position, y position, attribute, depth, attribute offset
; Used by the routine in #R$91E8
b$9212 DEFB $00,$BC,$0C,$45,$00

; Current score (in reverse digits)
g$9217 DEFB $00,$00,$00,$00,$00

; "SCORE: "
;
; Used by the routine in #R$91E8
b$921C DEFB $13,$03,$0F,$12,$05,$25,$00

; Current score (in text).
;
; Used by the routine in #R$91E8
g$9223 DEFB $1B,$1B,$1B,$1B,$1B

; Check to see if Monty has collided with a nasty
;
; Used by the routine at #R$9298.
;
; H Holds the Y co-ordinate
; L Holds the X co-ordinate
; F On exit, resets the zero flag if there was a collision
c$9228 LD A,L        ; Get the X co-ordinate.
 $9229 AND $07       ; { Convert it to a frame number
 $922B INC A         ; and put it in #REGb.
 $922C LD B,A        ;
 $922D LD A,$00      ;
 $922F SCF           ;
*$9230 RRA           ;
 $9231 DJNZ $9230    ; 
 $9233 LD B,A        ; }
 $9234 LD A,L        ; Get the X co-ordinate.
 $9235 AND $F8       ; { Convert it to a screen offset.
 $9237 RRCA          ; 
 $9238 RRCA          ;
 $9239 RRCA          ; }
 $923A LD L,H        ; { Put the Y co-ordinate in #REGhl.
 $923B LD H,$00      ;
 $923D ADD HL,HL     ; }
 $923E LD DE,$EA60   ; { Add the base offset for the screen address table
 $9241 ADD HL,DE     ; (#$EA60). }
 $9242 PUSH AF       ; Remember the X co-ordinate.
 $9243 LD A,(HL)     ; { Get the actual screen address
 $9244 INC HL        ; and put it in #REGhl.
 $9245 LD H,(HL)     ;
 $9246 LD L,A        ; }
 $9247 POP AF        ; Restore the X co-ordinate.
 $9248 LD D,$00      ; { Add this to the existing screen address
 $924A LD E,A        ; to get an actual address.
 $924B ADD HL,DE     ; }
 $924C EX DE,HL      ; { Add an offset to get an address in the
 $924D LD HL,$9260   ; screen buffer at #R$D260.
 $9250 ADD HL,DE     ; }
 $9251 LD A,(HL)     ; Get the byte there.
 $9252 AND B         ; { Test the bits against the X co-ordinate
 $9253 LD C,A        ; and store this in #REGc. }
 $9254 LD A,(DE)     ; Get the byte on screen.
 $9255 AND B         ; { Test the bits on screen against that in the buffer,
 $9256 XOR C         ; which will reset the zero flag if they don't match. }
 $9257 RET           ; Return.

; See if Monty is touching some coal and can collect it
;
; Used by the routine at #R$935C.
;
; H Current Y position
; L Current X position
; HL On exit, returns the address in the coal attribute buffer that was checked.
; F Resets the zero flag if there is coal here, otherwise sets it.
c$9258 LD A,L        ; { Divide the X co-ordinate by 8 and put it in #REGc.
 $9259 AND $F8       ;
 $925B RRCA          ;
 $925C RRCA          ;
 $925D RRCA          ;
 $925E LD C,A        ; }
 $925F LD A,H        ; { Divide the Y co-ordinate by 8 and put it in #REGb.
 $9260 AND $F8       ;
 $9262 RRCA          ;
 $9263 RRCA          ;
 $9264 RRCA          ;
 $9265 LD B,A        ; }
 $9266 LD A,$18      ; { Flip the Y co-ordinate to be the right way round
 $9268 SUB B         ; for a screen address.
 $9269 DEC A         ;
 $926A LD B,A        ; }
 $926B LD L,B        ; { Convert this into a screen offset.
 $926C LD H,$00      ;
 $926E ADD HL,HL     ;
 $926F ADD HL,HL     ;
 $9270 ADD HL,HL     ;
 $9271 ADD HL,HL     ;
 $9272 ADD HL,HL     ; }
 $9273 LD D,$00      ; { Add the column to the screen offset.
 $9275 LD E,C        ;
 $9276 ADD HL,DE     ; }
 $9277 LD DE,$CF54   ; { Add the base position of the coal attributes (#R$CF54).
 $927A ADD HL,DE     ; }
 $927B LD A,(HL)     ; { Reset the zero flag if there is coal at this position and return.
 $927C OR A          ;
 $927D RET           ; }

; Check if Monty is touching a (non-coal) collectable item, and if so, pick it
; up
;
; Used by the routine at #R$940C.
c$927E LD HL,($5C7B)  ; Get the current position in #REGhl.
 $9281 LD A,($C526)   ; Get the collectable item flag (#R$C526).
 $9284 OR A           ; Is it zero?
 $9285 RET Z          ; Return if so - there is no item here.
 $9286 LD A,($C524)   ; { Does the X co-ordinate match?
 $9289 CP L           ; }
 $928A RET NZ         ; Return if not.
 $928B LD A,($C525)   ; { Does the Y co-ordinate match?
 $928E CP H           ;
 $928F RET NZ         ; }
 $9290 SET 3,(IX+$00) ; Mark the item as collected.
 $9294 CALL $9568     ; { Pick up the item and return.
 $9297 RET            ; }

; Check if Monty has collided with a nasty that can be removed with an item
;
; Used by the routines at #R$940C, #R$CD41 and #R$CE1B.
c$9298 LD HL,($5C7B) ; Get the current position in #REGhl (#R$5C7B)
 $929B CALL $9228    ; Was there a collision?
 $929E JR NZ,$92DF   ; Move forward if so.
 $92A0 LD HL,($5C7B) ; Get the current position.
 $92A3 LD DE,$010A   ; { Move forward one column and ten rows (?)
 $92A6 ADD HL,DE     ; }
 $92A7 CALL $9228    ; Was there a collision?
 $92AA JR NZ,$92DF   ; Move forward if so.
 $92AC LD HL,($5C7B) ; Get the current position.
 $92AF LD D,$F1      ; { Move back ten rows (?)
 $92B1 LD E,$00      ;
 $92B3 ADD HL,DE     ; }
 $92B4 CALL $9228    ; Was there a collision?
 $92B7 JR NZ,$92DF   ; Move forward if so.
 $92B9 LD HL,($5C7B) ; Get the current position.
 $92BC LD D,$F8      ; { Move back a row and a column (?)
 $92BE LD E,$FF      ;
 $92C0 ADD HL,DE     ; }
 $92C1 CALL $9228    ; Was there a collision?
 $92C4 JR NZ,$92DF   ; Jump if so.
 $92C6 LD HL,($5C7B) ; Get the position.
 $92C9 LD D,$F8      ; { Move back a column and ten rows (?)
 $92CB LD E,$10      ;
 $92CD ADD HL,DE     ; }
 $92CE CALL $9228    ; Was there a collision?
 $92D1 JR NZ,$92DF   ; Jump if so.
 $92D3 LD HL,($5C7B) ; Get the position
 $92D6 LD D,$F1      ; { Move forward a column and back two rows (?)
 $92D8 LD E,$0F      ;
 $92DA ADD HL,DE     ; }
 $92DB CALL $9228    ; Was there a collision?
 $92DE RET Z         ; Return if no collision was found.
; Monty has touched a nasty, react appropriately
*$92DF LD IX,$8D52     ; Point #REGix at the room flags.
 $92E3 BIT 3,(IX+$00)  ; Has Monty picked up the collectable (non-coal) item?
 $92E7 JP Z,$946E      ; No, so kill Monty.
 $92EA RES 3,(IX+$00)  ; Otherwise reset the collectable item flag, as it's had its one chance to be used.
 $92EE LD DE,$0031     ; { Beep without disabling interrupts
 $92F1 LD HL,$0376     ;
 $92F4 CALL $03B6      ; }
 $92F7 CALL $9327      ;
 $92FA LD HL,$7780     ; #R$7780 is the empty graphic.
 $92FD LD (IX+$01),L   ; { Clear the data so it is no longer visible or active.
 $9300 LD (IX+$03),L   ;
 $9303 LD (IX+$05),L   ;
 $9306 LD (IX+$07),L   ;
 $9309 LD (IX+$02),H   ;
 $930C LD (IX+$04),H   ;
 $930F LD (IX+$06),H   ;
 $9312 LD (IX+$08),H   ; }
 $9315 LD A,($C54E)    ; { Set the attribute to the first attribute 
 $9318 LD (IX+$09),A   ; used in the room's static data. (#R$C54E) }
 $931B PUSH IX         ; Remember #REGix.
 $931D CALL $8751      ; Update the nasties on screen.
 $9320 POP IX          ; Restore #REGix.
 $9322 LD (IX+$00),$03 ; Flag the nasty as being invisible.
 $9326 RET             ; Return.

; Return IX pointing to the index of the nasty Monty is touching, or 0
;
; Used by the routine at #R$92DF.
c$9327 LD IX,$C596   ; Point IX to the nasties buffer at #R$C596.
 $932B LD B,$06      ; Maximum of 6 nasties per room.
*$932D LD HL,($5C7B) ; Get the current 
 $9330 LD A,L        ; Put the X co-ordinate in A.
 $9331 SUB (IX+$0C)  ; Subtract the X co-ordinate of the nasty.
 $9334 JR NC,$9338   ; If it is less than or the same, skip forward.
 $9336 NEG           ; { If it is greater than, skip forward.
*$9338 AND $F0       ;
 $933A JR NZ,$9350   ; }
 $933C LD A,H        ; Put the Y co-ordinate in A.
 $933D SUB (IX+$0D)  ; Subtract the Y co-ordinate of the nasty.
 $9340 JR NC,$9344   ; If it is less than or the same, skip forward.
 $9342 NEG           ; { If it is greater than, skip forward.
*$9344 AND $F0       ; 
 $9346 JR NZ,$9350   ; }
 $9348 LD A,(IX+$00) ; { Is the collectable item flag set?
 $934B CP $03        ; }
 $934D JR Z,$9350    ; No, so loop forward.
 $934F RET           ; Return with IX pointing at the nasty found.
*$9350 LD DE,$0014   ; { Loop round to the next nasty.
 $9353 ADD IX,DE     ;
 $9355 DJNZ $932D    ; }
 $9357 LD IX,$0000   ; { Clear #REGix and return.
 $935B RET           ; }

; Check to see if Monty has moved near any coal, and if so, pick it up
;
; Used by the routine at #R$940C.
c$935C LD HL,($5C7B) ; Get the current position.
 $935F CALL $9258    ; Is there any coal here?
 $9362 JR NZ,$93C1   ; Jump forward if there is.
 $9364 LD HL,($5C7B) ; { Get the current X position plus 7.
 $9367 LD A,$07      ;
 $9369 ADD A,L       ;
 $936A LD L,A        ; }
 $936B CALL $9258    ; Is there any coal here?
 $936E JR NZ,$93C1   ; Jump forward if there is.
 $9370 LD HL,($5C7B) ; { Get the current X position plus #N$F.
 $9373 LD A,$0F      ;
 $9375 ADD A,L       ;
 $9376 LD L,A        ; }
 $9377 CALL $9258    ; Is there any coal here?
 $937A JR NZ,$93C1   ; Jump forward if there is.
 $937C LD HL,($5C7B) ; { Get the current Y position minus 7.
 $937F LD A,$F8      ;
 $9381 ADD A,H       ;
 $9382 LD H,A        ; }
 $9383 CALL $9258    ; Is there any coal here?
 $9386 JR NZ,$93C1   ; Jump forward if there is.
 $9388 LD HL,($5C7B) ; { Get the current X position plus #N$F.
 $938B LD A,$0F      ;
 $938D ADD A,L       ;
 $938E LD L,A        ; }
 $938F LD A,$F8      ; { Get the current Y position minus 7.
 $9391 ADD A,H       ;
 $9392 LD H,A        ; }
 $9393 CALL $9258    ; Is there any coal here?
 $9396 JR NZ,$93C1   ; Jump forward if there is.
 $9398 LD HL,($5C7B) ; { Get the current Y position minus 15.
 $939B LD A,$F0      ;
 $939D ADD A,H       ;
 $939E LD H,A        ; }
 $939F LD ($9647),HL ; Store this temporarily.
 $93A2 CALL $9258    ; Is there any coal here?
 $93A5 JR NZ,$93C1   ; Jump forward if there is.
 $93A7 LD HL,($9647) ; Restore the previously cached position.
 $93AA LD A,$08      ; { Add 8 to the X position.
 $93AC ADD A,L       ;
 $93AD LD L,A        ; }
 $93AE LD ($9647),HL ; Cache this.
 $93B1 CALL $9258    ; Is there any coal here?
 $93B4 JR NZ,$93C1   ; Jump forward if there is.
 $93B6 LD HL,($9647) ; Restore the previously cached position.
 $93B9 LD A,$07      ; { Add 7 to the X position.
 $93BB ADD A,L       ;
 $93BC LD L,A        ; }
 $93BD CALL $9258    ; Is there any coal here?
 $93C0 RET Z         ; No, so there's nothing near.
; At this point, Monty has walked near enough some coal to be able to pick it up.
*$93C1 LD (HL),$00   ; Set that there's no coal here.
 $93C3 LD DE,$88AC   ;
 $93C6 ADD HL,DE     ;
 $93C7 LD A,($C54E)  ;
 $93CA LD (HL),A     ;
 $93CB LD ($9647),BC ; Put the found screen position for the coal in #R$9647.
 $93CF LD DE,$0031   ; { Make a beep using the ROM routine, but skip the first
 $93D2 LD HL,$0376   ; instruction so that interrupts remain enabled.
 $93D5 CALL $03B6    ; }
 $93D8 LD IX,$C53F   ; #R$C53F holds coal positions in the room.
 $93DC LD B,$05      ; 5 positions to check.
*$93DE LD A,($9647)  ; Get the found X position.
 $93E1 CP (IX+$01)   ; Is it this one?
 $93E4 JR Z,$93ED    ; Move forward if so.
*$93E6 LD DE,$0003   ; { Look at the next coal position.
 $93E9 ADD IX,DE     ;
 $93EB DJNZ $93DE    ; }
*$93ED LD A,($9648)  ; Get the found Y position.
 $93F0 CP (IX+$02)   ; Is it this one?
 $93F3 JR NZ,$93E6   ; Loop back if not.
; Found the necessary entry for coal.
 $93F5 PUSH IX       ;
 $93F7 LD E,(IX+$00) ; { Put the coal index in #REGde.
 $93FA LD D,$00      ; }
 $93FC LD HL,$964D   ; #R$964D holds scores for coal.
 $93FF ADD HL,DE     ; Get the right offset.
 $9400 RES 7,(HL)    ; Bit 7 is not used here.
 $9402 LD A,(HL)     ; { Add to the score.
 $9403 CALL $919D    ; }
 $9406 POP IX        ;
 $9408 CALL $96AA    ; Refresh the coal flags.
 $940B RET           ;

; Enter a room
;
; Used by the routines at #R$946E, #R$94D9, #R$96D9, #R$CD41 and #R$F7D6.
c$940C LD SP,$5FFE   ; Reset the stack to #N$5FFE.
 $940F LD A,($9649)  ; Get the current room (#R$9649).
 $9412 CP $15        ; Is it the final room?
 $9414 JP Z,$F858    ; Jump forward if so.
 $9417 CP $2C        ; Is it the first room?
 $9419 JP Z,$CD41    ; Jump forward if so.
 $941C DI            ; { Set up interrupts at #R$C700 which points to #R$5B5B.
 $941D IM 2          ;
 $941F LD A,$C7      ;
 $9421 LD I,A        ; }
 $9423 LD HL,$8F9F   ; { Use #R$8F9F as the routine to be called.
 $9426 LD ($5B5C),HL ; }
 $9429 LD A,$C3      ; { Put a "JP" command as the first byte.
 $942B LD ($5B5B),A  ; }
 $942E CALL $94C3    ; Copy the current room's data to the working set.
 $9431 CALL $9551    ; Display the room.
 $9434 LD A,($9649)  ; { Are we on room #N$10?
 $9437 CP $10        ; }
 $9439 JP Z,$96D9    ; Jump forward if so.
; Run the main loop in this room.
; This entry point is used by the routine at #R$96D9.
*$943C HALT          ; Let interrupts run.
 $943D CALL $8751    ; Move the nasties.
 $9440 CALL $935C    ; Check for picking up coal.
 $9443 CALL $95B3    ; Animate the coal.
 $9446 CALL $9298    ; See if Monty collided with a white nasty.
 $9449 CALL $82A6    ; Check for player input.
 $944C CALL $89D4    ; Update Monty's position.
 $944F CALL $927E    ; Check for picking up a collectable item.
 $9452 LD A,($5C7B)  ; { Move to a new room (#R$94D9) 
 $9455 OR A          ; if Monty is off the edge of the room.
 $9456 JP Z,$94D9    ;
 $9459 CP $F0        ;
 $945B JP Z,$94D9    ;
 $945E LD A,($5C7C)  ;
 $9461 CP $21        ;
 $9463 JP C,$94D9    ;
 $9466 CP $AF        ;
 $9468 JP NC,$94D9   ; }
 $946B JP $943C      ; Otherwise loop back.

; Monty has died. Play the "death" tune and lose a life
;
; Used by the routines at #R$8B90, #R$9148 and #R$9298.
c$946E CALL $8D7F    ; Play the tune.
 $9471 LD HL,$964A   ; { Subtract 1 from the number of lives.
 $9474 DEC (HL)      ; }
 $9475 CALL $949E    ; Redraw the display for this.
 $9478 LD A,($964A)  ; { Have we run out of lives?
 $947B OR A          ; }
 $947C JP Z,$F817    ; Jump if so.
 $947F LD HL,($964B) ; { Set the current position to the
 $9482 LD ($5C7B),HL ; start position in this room. }
 $9485 XOR A         ; Set #REGa to 0 to reset some flags.
 $9486 LD ($8D58),A  ; Reset distance fallen.
 $9489 LD ($8D52),A  ; Reset room flags.
 $948C LD ($8D53),A  ; Reset game flags.
 $948F LD HL,$869C   ; { Reset the pointer to the movement table
 $9492 LD ($8492),HL ; back to #R$869C. }
 $9495 LD ($848F),A  ; Reset jump position.
 $9498 LD ($8498),A  ;
 $949B JP $940C      ; Re-enter the room.

; Print the number of lives on the screen
;
; Used by the routines at #R$946E, #R$9551 and #R$CD41.
c$949E LD A,($964A)  ; Get the number of lives.
 $94A1 ADD A,$1B     ; Convert this to an offset into the character set at #R$813B.
 $94A3 SET 7,A       ; Set bit 7 to make the string printing routine terminate after this character.
 $94A5 LD ($94C2),A  ; Store this printable value at the end of the string text.
 $94A8 LD IX,$94B6   ; Point IX to the string position and data.
 $94AC LD IY,$94BB   ; Point IY to the string text
 $94B0 LD B,$01      ; Set to print one row.
 $94B2 PUSH BC       ; Make sure the stack returns from the string printing routine correctly.
 $94B3 JP $809D      ; Print the string.

; Lives display position
;
; Format is x position, y position, attribute, depth, attribute offset
b$94B6 DEFB $0C,$0C,$08,$44,$16

; Lives display text
;
; "LIVES:  "
b$94BB DEFB $0C,$09,$16,$05,$13,$25,$00,$00

; Copy the data for the current room into the working buffer
;
; Used by the routine at #R$940C.
c$94C3 LD A,($9649)  ; Get the current room (#R$9649).
 $94C6 DI            ; Disable interrupts.
 $94C7 LD D,A        ; { Put the current room multipled by #N$200 in #REGde.
 $94C8 LD E,$00      ; 
 $94CA RLC D         ; }
 $94CC LD HL,$9A2A   ; Get the base address of the rooms (#R$9A2A).
 $94CF ADD HL,DE     ; Add the offset.
 $94D0 LD DE,$C42A   ; Destination is the working buffer at #R$C42A.
 $94D3 LD BC,$0200   ; Length is always #N$200 bytes.
 $94D6 LDIR          ; { Do the copy and return.
 $94D8 RET           ; }

; Move into a new room
;
; Used by the routine at #R$940C.
c$94D9 LD IX,$8D52    ; { Reset bit 3 in the room flags (#R$8D52), so touching any nasty is fatal.
 $94DD RES 3,(IX+$00) ; }
; Test for moving left.
 $94E1 LD A,($5C7B)   ; { Is the X co-ordinate (#R$5C7B) far left?
 $94E4 OR A           ; }
 $94E5 JR NZ,$94F6    ; Jump forward if not.
 ; Moving left.
 $94E7 LD HL,$C522    ; { Get the next room to the left.
 $94EA LD A,(HL)      ; }
 $94EB LD ($9649),A   ; Make this the current room (#R$9649).
 $94EE LD A,$EE       ; { Set the position to the far right.
*$94F0 LD ($5C7B),A   ; }
 $94F3 JP $9526       ; Jump forward.
; Test for moving right.
*$94F6 CP $F0         ; Is the X co-ordinate far right?
 $94F8 JR NZ,$9505    ; Jump forward if not.
; Moving right.
 $94FA LD HL,$C523    ; { Get the next room to the right.
 $94FD LD A,(HL)      ; }
 $94FE LD ($9649),A   ; Make this the current room (#R$9649).
 $9501 LD A,$02       ; Make the position the far left.
 $9503 JR $94F0       ; Jump back to set this.
; Test for moving up.
*$9505 LD A,($5C7C)   ; { Is the Y co-ordinate (#R$5C7C) at the top?
 $9508 CP $AF         ; }
 $950A JR C,$951B     ; Jump forward if not.
; Moving up.
 $950C LD HL,$C520    ; { Get the next room up.
 $950F LD A,(HL)      ; }
 $9510 LD ($9649),A   ; Make this the current room (#R$9649).
 $9513 LD A,$23       ; { Set the position to the bottom.
*$9515 LD ($5C7C),A   ; }
 $9518 JP $9526       ; Jump forward.
; If the next room is not left, right or up, it must be down.
*$951B LD HL,$C521    ; { Get the next room down.
 $951E LD A,(HL)      ; }
 $951F LD ($9649),A   ; Make this the current room (#R$9649).
 $9522 LD A,$AD       ; Make the position the top.
 $9524 JR $9515       ; Jump back to set this.
*$9526 LD HL,($5C7B)  ; { Make the new position (#R$5C7B, #R$5C7C) the one to reset back to
 $9529 LD ($964B),HL  ; if a life is lost (#R$964B). }
 $952C JP $940C       ; Enter the new room.

; Put (non coal) collectable objects on screen
;
; Used by the routine at #R$9551.
c$952F LD A,($C526)  ; Get the object ID.
 $9532 OR A          ; { Return if it's zero.
 $9533 RET Z         ; }
 $9534 DEC A         ; Convert from 1 to 0-based.
 $9535 LD L,A        ; { Multiply by 32 to give an appropriate offset.
 $9536 LD H,$00      ;
 $9538 ADD HL,HL     ;
 $9539 ADD HL,HL     ;
 $953A ADD HL,HL     ;
 $953B ADD HL,HL     ;
 $953C ADD HL,HL     ; }
 $953D LD DE,$7A00   ; #R$7A00 = start of collectable objects.
 $9540 ADD HL,DE     ; Add the appropriate offset.
 $9541 LD ($ECE0),HL ; Store this as the next graphic to draw.
 $9544 LD HL,($C524) ; { Get the position to draw the graphic.
 $9547 LD ($ECDE),HL ; }
 $954A CALL $EBE0    ; Print the graphic.
 $954D CALL $D254    ; { Copy the screen to the storage buffer and return.
 $9550 RET           ; }

; Display the current room
;
; Used by the routine at #R$940C.
c$9551 CALL $FDD5    ; Print all static characters in the screen buffer.
 $9554 CALL $C62A    ; Make the screen buffer "live" so it is visible.
 $9557 CALL $952F    ; Display collectable objects.
 $955A CALL $95B3    ; Animate the coal.
 $955D CALL $91E8    ; Print the score.
 $9560 CALL $949E    ; Print the number of lives.
 $9563 CALL $D254    ; Make a copy of the screen.
 $9566 EI            ; { Re-enable interrupts and return. 
 $9567 RET           ; }

; Pick up an item
;
; Used by the routine at #R$927E.
c$9568 LD DE,$0031   ; { BEEP without disabling interrupts.
 $956B LD HL,$0376   ;
 $956E CALL $03B6    ; }
 $9571 LD HL,($C524) ; Put the X co-ordinate in #REGl and the Y co-ordinate in #REGh.
 $9574 LD C,L        ; Remember the X co-ordinate in #REGc.
 $9575 LD L,H        ; { Convert the Y co-ordinate to a word offset.
 $9576 LD H,$00      ;
 $9578 ADD HL,HL     ; }
 $9579 LD DE,$EA60   ; { Add this to get a pointer in the screen offset buffer (#R$EA60).
 $957C ADD HL,DE     ; }
 $957D PUSH HL       ; Remember this.
 $957E LD A,(HL)     ; { Get the screen address in #REGhl.
 $957F INC HL        ;
 $9580 LD H,(HL)     ;
 $9581 LD L,A        ; }
 $9582 LD A,C        ; Restore the X co-ordinate.
 $9583 RRCA          ; { Divide by 8 to get an offset from a screen address.
 $9584 RRCA          ;
 $9585 RRCA          ; }
 $9586 LD C,A        ; Remember this offset.
 $9587 LD D,$00      ; { Combine the screen address with the offset to get the right position.
 $9589 LD E,A        ;
 $958A ADD HL,DE     ; }
 $958B LD DE,$9260   ; { Convert up to put the graphic in the buffer at #R$D260.
 $958E ADD HL,DE     ; }
; The appropriate location of the item was found, now blank it out.
 $958F LD B,$08      ; 8 lines.
*$9591 LD (HL),$00   ; { Blank the graphic.
 $9593 INC HL        ;
 $9594 LD (HL),$00   ;
 $9596 DEC HL        ; }
 $9597 INC H         ; Next line on screen.
 $9598 DJNZ $9591    ; Loop until all lines are done.
 $959A POP HL        ; Restore the screen offset.
 $959B LD DE,$FFF0   ; { Move back a line.
 $959E ADD HL,DE     ; }
 $959F LD A,(HL)     ; { Get the screen address in #REGhl.
 $95A0 INC HL        ;
 $95A1 LD H,(HL)     ;
 $95A2 LD L,A        ; }
 $95A3 LD E,C        ; { Restore the offset and add it to get the right position.
 $95A4 LD D,$00      ;
 $95A6 ADD HL,DE     ; }
 $95A7 LD DE,$9260   ; { Convert this to an offset in the screen buffer at #R$D260.
 $95AA ADD HL,DE     ; }
 $95AB JP $968D      ; Jump forward to clear the second line of the item.

; Reset the index of the collectable item, as it was picked up
;
; Used by the routine at #R$968D.
c$95AE XOR A         ; { Set the index at #R$C526 to 0.
 $95AF LD ($C526),A  ;
 $95B2 RET           ; }

; Animate the coal colours in the room
;
; Used by the routines at #R$940C and #R$9551.
c$95B3 LD IX,$C53F   ; Point IX at the coal data (#R$C53F).
 $95B7 LD HL,$CF54   ; { Blank out the screen attribute buffer #R$CF54.
 $95BA LD (HL),$00   ;
 $95BC LD DE,$CF55   ;
 $95BF LD BC,$02FF   ;
 $95C2 LDIR          ; }
 $95C4 LD B,$05      ; { Loop round five items.
*$95C6 PUSH BC       ; }
 $95C7 LD L,(IX+$00) ; { Get the coal score index in #REGhl.
 $95CA LD H,$00      ; }
 $95CC LD DE,$964D   ; #R$964D is the base pointer to the coal score table.
 $95CF ADD HL,DE     ; Get the right position.
 $95D0 BIT 7,(HL)    ; Has Monty already picked the coal up?
 $95D2 JR Z,$95DF    ; If so, there's nothing to do here.
 $95D4 LD A,(IX+$01) ; { Are the X and Y co-ordinates both zero?
 $95D7 OR (IX+$02)   ; }
 $95DA JR Z,$95DF    ; Move forward if so, there's no coal here.
 $95DC CALL $95E8    ;
*$95DF LD DE,$0003   ; { Point at the next position.
 $95E2 ADD IX,DE     ; }
 $95E4 POP BC        ; { Loop round to the next item.
 $95E5 DJNZ $95C6    ; }
 $95E7 RET           ;

; Animate an item of coal in a room.
;
; Used by the routine at #R$95B3.
;
; IX Pointer to coal data (see #R$964D)
c$95E8 LD L,(IX+$02) ; {Multiply the Y position by 32 and put it in #REGhl.
 $95EB LD H,$00      ; 
 $95ED ADD HL,HL     ;
 $95EE ADD HL,HL     ;
 $95EF ADD HL,HL     ;
 $95F0 ADD HL,HL     ;
 $95F1 ADD HL,HL     ; }
 $95F2 LD E,(IX+$01) ; { Put the X position in #REGde.
 $95F5 LD D,$00      ; }
 $95F7 ADD HL,DE     ; Add the two together to get a screen offset.
 $95F8 PUSH HL       ; Remember the base address.
 $95F9 LD DE,$5800   ; { Convert to an attribute address.
 $95FC ADD HL,DE     ; }
 $95FD LD A,(HL)     ; { Switch the attribute colour.
 $95FE OR $07        ;
 $9600 INC A         ;
 $9601 AND $78       ;
 $9603 LD (HL),A     ; }
 $9604 POP HL        ; Restore the base address.
 $9605 LD DE,$CF54   ; { Point to the correct place in the
 $9608 ADD HL,DE     ; screen attribute buffer (#R$CF54). }
 $9609 LD (HL),$FF   ; Flash the attribute here.
 $960B CALL $960F    ; { Redraw the coal and return.
 $960E RET           ; }

; Draw the coal in the room
;
; Used by the routines at #R$95B3 and #R$96AA.
;
; IX Pointer to coal information (offset from #R$C53F)
c$960F LD B,(IX+$02) ; { Convert the Y co-ordinate to a screen address
 $9612 LD A,$18      ; and put it in #REGhl.
 $9614 SUB B         ;
 $9615 RLCA          ;
 $9616 RLCA          ;
 $9617 RLCA          ;
 $9618 DEC A         ;
 $9619 LD L,A        ;
 $961A LD H,$00      ; }
 $961C ADD HL,HL     ; Double it to get an appropriate entry in the screen address table.
 $961D LD DE,$EA60   ; { Add the basic address of the screen address table
 $9620 ADD HL,DE     ; to get the right entry. }
 $9621 LD A,(HL)     ; { Put the actual screen address in #REGhl.
 $9622 INC HL        ;
 $9623 LD H,(HL)     ;
 $9624 LD L,A        ; }
 $9625 LD E,(IX+$01) ; { Add the X co-ordinate.
 $9628 LD D,$00      ;
 $962A ADD HL,DE     ; }
 $962B EX DE,HL      ; { Add an offset to give an address in the screen buffer from #R$D260.
 $962C LD HL,$9260   ;
 $962F ADD HL,DE     ; }
 $9630 LD IY,$C537   ; Point #REGiy at the coal UDG.
 $9634 LD B,$08      ; 8 rows to draw.
*$9636 LD A,(IY+$00) ; Get the graphic data.
 $9639 CPL           ; Invert it.
 $963A LD (HL),A     ; { Store it on the screen and in the screen buffer.
 $963B LD (DE),A     ; }
 $963C INC D         ; Move to the next row on screen.
 $963D INC H         ; Move to the next row in the screen buffer.
 $963E INC IY        ; Move to the next graphic data.
 $9640 DJNZ $9636    ; { Loop while there are more rows to draw.
 $9642 RET           ; }

; Unused
s$9643 DEFS $04

; Storage block for calculating coal pickups
;
; Used by the routine in #R$935C.
b$9647 DEFB $00,$00

; Current room
g$9649 DEFB $0F

; Number of lives
g$964A DEFB $09

; Start position for this room (when a life is lost)
g$964B DEFB $3C,$3B

; Array of points given for each 'nth' coal item
;
; If bit 7 is reset, Monty has picked this coal up.
; When the game starts, bit 7 on all bytes is set, so coal will not appear.
; After grabbing the bucket, the bit is reset, so coal can be collected.
;
; .
;
; Although seemingly random, clearing bit 7 reveals the assembler text
; A LD (NUTDROP), A LD (NUTEXP),A LD HL,30592 LD (60640
; which is the code at #R$CD0A.
b$964D DEFB $41,$0D,$5A,$0A,$09,$4C,$44,$09
 $9655 DEFB $28,$4E,$55,$54,$44,$52,$4F,$50
 $965D DEFB $29,$2C,$41,$0D,$64,$0A,$09,$4C
 $9665 DEFB $44,$09,$28,$4E,$55,$54,$45,$58
 $966D DEFB $50,$29,$2C,$41,$0D,$6E,$0A,$09
 $9675 DEFB $4C,$44,$09,$48,$4C,$2C,$33,$30
 $967D DEFB $35,$39,$32,$0D,$78,$0A,$09,$4C
 $9685 DEFB $44,$09,$28,$36,$30,$36,$34,$30

; Clear a non-coal item, as it has been collected
;
; Used by the routine at #R$9568.
;
; HL Screen offset of the item
c$968D LD B,$08      ; 8 lines to clear.
*$968F LD (HL),$00   ; { Blank the part of the line where the item was.
 $9691 INC HL        ;
 $9692 LD (HL),$00   ;
 $9694 DEC HL        ; }
 $9695 INC H         ; Next line.
 $9696 DJNZ $968F    ; Jump back if there is more to do.
 $9698 LD HL,($C524) ; { Put the co-ordinate of the item in #R$ECDE.
 $969B LD ($ECDE),HL ; }
 $969E LD HL,$7780   ; #R$7780 is the empty graphic.
 $96A1 LD ($ECE0),HL ; Store the graphic.
 $96A4 CALL $EBE0    ; Print the item.
 $96A7 JP $95AE      ; Reset the index and exit.

; Refresh any coal in the room.
;
; Used by the routine at #R$935C.
c$96AA LD DE,$96D1   ; { Put the tempoary store back in the main area.
 $96AD LD HL,$C537   ;
 $96B0 LD BC,$0008   ;
 $96B3 LDIR          ; }
 $96B5 LD HL,$C537   ; { Blank out all fields to #N$FF.
 $96B8 LD (HL),$FF   ;
 $96BA LD DE,$C538   ;
 $96BD LD BC,$0007   ;
 $96C0 LDIR          ; }
 $96C2 CALL $960F    ; Redraw the coal.
 $96C5 LD HL,$96D1   ; { Copy the temporary store back again and return.
 $96C8 LD DE,$C537   ;
 $96CB LD BC,$0008   ;
 $96CE LDIR          ; 
 $96D0 RET           ; }

; Temporary space for coal data
b$96D1 DEFB $55,$53,$48,$09,$48,$4C,$0D,$B4

; Animate the rolling minecart in room #N$10
;
; Used by the routine at #R$940C.
c$96D9 LD A,($5C7C)  ; { Is Monty at the bottom of the screen?
 $96DC CP $41        ; }
 $96DE JP NC,$943C   ; Jump back to the main loop if not.
 $96E1 LD HL,$2F02   ; Initialize the minecart's position to X=02 y=#N$2F
 $96E4 LD ($9797),HL ; Store this
 $96E7 LD HL,$3702   ; Initialize Monty's position to X=02 y=#N$37
 $96EA LD ($5C7B),HL ; Store this.
 $96ED LD B,$80      ; Run for #N$80 times.
*$96EF PUSH BC       ; Store #REGbc
 $96F0 LD HL,$5C7B   ; { Increment Monty's x co-ordinate.
 $96F3 INC (HL)      ; }
 $96F4 LD HL,$9797   ; { Increment the minecart's x co-ordinate.
 $96F7 INC (HL)      ; }
 $96F8 LD HL,($5C7B) ; { Set Monty's co-ordinates as the location to print.
 $96FB LD ($ECDE),HL ; }
 $96FE LD HL,$861C   ; { Set the graphic to Monty right (#R$861C).
 $9701 LD ($ECE0),HL ; }
 $9704 CALL $EBE0    ; Print the graphic.
 $9707 LD HL,($9797) ; { Set the minecart's co-ordinates as the location to print.
 $970A LD ($ECDE),HL ; }
 $970D LD HL,$6F80   ; { Set the graphic to the minecart (#R$6F80).}
 $9710 LD A,($848E)  ; { Cycle Monty's current frame from 0 to 7.
 $9713 INC A         ; This is used in the animation cycle for the minecart.
 $9714 AND $07       ;
 $9716 LD ($848E),A  ; }
 $9719 RRCA          ; { Put the lowest 3 bits in #REGb.
 $971A AND $03       ;
 $971C LD B,A        ; }
 $971D LD DE,$0020   ; Set #REGde to move forward a graphic frame with each iteration.
 $9720 OR A          ; { If the frame is 0, skip ahead.
 $9721 JR Z,$9726    ; }
*$9723 ADD HL,DE     ; { Move to the next row.
 $9724 DJNZ $9723    ; }
*$9726 LD ($ECE0),HL ; Set the graphic frame as the one to draw.
 $9729 CALL $EBE0    ; Draw the minecart.
 $972C POP BC        ; { Restore #REGbc and loop if there is more to do.
 $972D DJNZ $96EF    ; }
; The minecart has now hit the buffers. Tip it.
 $972F LD HL,$7780   ; #R$7780 is the empty graphic.
 $9732 LD ($ECE0),HL ; Set the graphic to draw.
 $9735 LD HL,($5C7B) ; { Set at the current position.
 $9738 LD ($ECDE),HL ; }
 $973B CALL $EBE0    ; Draw the graphic.
 $973E LD HL,$3F98   ; { Set a new position to #N$98, #N$3F.
 $9741 LD ($5C7B),HL ; }
 $9744 LD B,$20      ; Run for #N$20 times.
*$9746 PUSH BC       ; Remember #REGbc.
 $9747 LD A,B        ; { Put the next frame in #REGde.
 $9748 DEC A         ;
 $9749 AND $18       ;
 $974B ADD A,A       ;
 $974C ADD A,A       ;
 $974D LD E,A        ;
 $974E LD D,$00      ; }
 $9750 PUSH DE       ; Remember this.
 $9751 LD HL,$7000   ; { Add to the base offset of the tipping minecart graphic (#R$7000).
 $9754 ADD HL,DE     ; }
 $9755 LD ($ECE0),HL ; Set this as the graphic to print.
 $9758 LD HL,($9797) ; { Set the location to be X = #N$97 Y = #N$97.
 $975B LD ($ECDE),HL ; }
 $975E CALL $EBE0    ; Draw the graphic.
 $9761 LD HL,($5C7B) ; Get Monty's position.
 $9764 LD ($ECDE),HL ; Set this as the position of the next sprite to update. (#R$ECDE).
 $9767 POP DE        ; Restore #REGde.
 $9768 ADD HL,DE     ; No effect, #REGhl is overwritten in the next instruction.
 $9769 LD HL,$9799   ; { Set the location to be X = #N$97 Y = #N$99.
 $976C LD ($ECE0),HL ; }
 $976F CALL $EBE0    ; Draw the graphic.
 $9772 LD IX,$5C7B   ; { Move monty 1 to the right and 1 down.
 $9776 INC (IX+$00)  ; 
 $9779 DEC (IX+$01)  ; }
 $977C POP BC        ; Restore #REGbc.
 $977D DJNZ $9746    ; Loop while there is still more to draw.
; Monty has fallen off the edge, put him in the next room.
 $977F LD A,$11      ; Set #REGa to #N$11 to set up some flags.
 $9781 LD HL,$A1C0   ; { Set the position to X = $C0, Y = $A1
 $9784 LD ($5C7B),HL ;
 $9787 LD ($964B),HL ; }
 $978A LD ($9649),A  ; Set the current room to #N$11.
 $978D XOR A         ; { Reset distance fallen.
 $978E LD ($8D58),A  ; }
 $9791 LD ($8498),A  ; Reset time jumping.
 $9794 JP $940C      ; Enter the new room.

; X co-ordinate of the minecart in room #N$10
g$9797 DEFB $00

; Y co-ordinate of the minecart in room #N$10
g$9798 DEFB $00

; Unused
u$9799 DEFS $02

; Monty rolling (not used)
;
; #GRAFIXSTR($979B)(Monty_rolling)
u$979B DEFB $03,$F8,$03,$FE,$05,$FE,$0E,$78
 $97A3 DEFB $1D,$86,$1D,$6F,$14,$6F,$37,$F7
 $97AB DEFB $36,$F6,$39,$F8,$1F,$F8,$3D,$F0
 $97B3 DEFB $3E,$F7,$1C,$7C,$0F,$38,$00,$00
 $97BB DEFB $00,$00,$1B,$80,$3F,$F0,$7E,$38
 $97C3 DEFB $7C,$FC,$55,$8B,$4E,$B7,$1F,$97
 $97CB DEFB $3F,$EF,$7F,$EF,$7F,$8F,$66,$6F
 $97D3 DEFB $31,$F6,$11,$F6,$10,$E0,$00,$00
 $97DB DEFB $07,$3C,$0F,$8E,$3B,$DF,$03,$EF
 $97E3 DEFB $07,$FE,$07,$E7,$1B,$DB,$3B,$FB
 $97EB DEFB $3D,$8A,$3D,$AE,$18,$6E,$07,$9C
 $97F3 DEFB $1F,$E8,$1F,$F0,$07,$F0,$00,$00
 $97FB DEFB $00,$00,$03,$84,$37,$C4,$37,$C6
 $9803 DEFB $7B,$33,$78,$FF,$7B,$FF,$7B,$FE
 $980B DEFB $74,$FC,$76,$B9,$68,$D5,$1F,$DF
 $9813 DEFB $0E,$3F,$07,$FE,$00,$EC,$D1,$C9

; Unused
u$981B CALL $985F
 $981E LD HL,$0000
*$9821 CALL $97E2
 $9824 CP $30
 $9826 JR C,$983A
 $9828 CP $3A
 $982A JR NC,$983A
 $982C AND $0F
 $982E LD D,H
 $982F LD E,L
 $9830 ADD HL,HL
 $9831 ADD HL,HL
 $9832 ADD HL,DE
 $9833 ADD HL,HL
 $9834 LD E,A
 $9835 LD D,$00
 $9837 ADD HL,DE
 $9838 JR $9821
*$983A LD DE,$1409
 $983D CALL $8A31
 $9840 LD A,$3D
 $9842 CALL $88D8
 $9845 CALL $9856
 $9848 EX DE,HL
 $9849 CALL $964E
 $984C JR $97E2
 $984E LD HL,$9CA6
 $9851 LD A,(HL)
 $9852 XOR $80
 $9854 LD (HL),A
 $9855 RET
*$9856 LD A,$20
*$9858 JP $88D8
 $985B LD A,$0D
 $985D JR $9858
*$985F LD A,($9C41)
 $9862 JR $9858
 $9864 CALL $9A24
 $9867 CP $18
 $9869 RET Z
 $986A INC HL
 $986B PUSH HL
 $986C LD HL,$9B28
 $986F CALL $9A43
 $9872 CP $18
 $9874 LD A,L
 $9875 EX DE,HL
 $9876 POP BC
 $9877 RET Z
*$9878 LD (HL),A
 $9879 CPI
 $987B RET PO
 $987C JR $9878
*$987E PUSH HL
 $987F LD HL,($9C75)
 $9882 LD ($5C51),HL
 $9885 POP HL
 $9886 RET
 $9887 XOR A
 $9888 JR $988C
 $988A LD A,$01
*$988C CALL $987E
 $988F LD HL,$0010
 $9892 ADD HL,SP
 $9893 LD E,(HL)
 $9894 INC HL
 $9895 LD D,(HL)
 $9896 PUSH AF
 $9897 PUSH DE
 $9898 LD HL,$9C4E
 $989B LD BC,$0000
 $989E LD A,$20
 $98A0 CPIR
 $98A2 LD A,C
 $98A3 NEG
 $98A5 SRL A
 $98A7 LD C,A
 $98A8 LD B,$00
 $98AA PUSH BC
 $98AB LD HL,$9C88
 $98AE EX DE,HL
 $98AF LDIR
 $98B1 EX DE,HL
 $98B2 LD (HL),$C3
 $98B4 INC HL
 $98B5 LD DE,$9441
 $98B8 LD (HL),E
 $98B9 INC HL
 $98BA LD (HL),D
 $98BB POP HL
 $98BC POP DE
 $98BD ADD HL,DE
 $98BE LD ($9C46),HL
 $98C1 POP AF
 $98C2 OR A
 $98C3 JR Z,$98D4
 $98C5 LD A,(DE)
 $98C6 LD HL,$9BD7
 $98C9 OR A
 $98CA JR Z,$98D4
 $98CC LD B,$31
*$98CE CP (HL)
 $98CF INC HL
 $98D0 JR Z,$98E8
 $98D2 DJNZ $98CE
*$98D4 POP AF
 $98D5 POP AF
 $98D6 POP BC
 $98D7 POP DE
 $98D8 POP HL
 $98D9 POP IX
 $98DB POP IY
 $98DD EX (SP),HL
 $98DE POP HL
 $98DF EX (SP),HL
 $98E0 POP HL
 $98E1 LD SP,($9C44)
 $98E5 JP $9C88
*$98E8 LD A,$31
 $98EA SUB B
 $98EB JR NZ,$9900
 $98ED LD HL,$0008
*$98F0 ADD HL,SP
 $98F1 LD E,(HL)
 $98F2 INC HL
 $98F3 LD D,(HL)
*$98F4 LD HL,$0010
 $98F7 ADD HL,SP
 $98F8 LD (HL),E
 $98F9 INC HL
 $98FA LD (HL),D
 $98FB LD ($9C32),DE
 $98FF RET
*$9900 DEC A
 $9901 JR NZ,$9912
 $9903 LD HL,$0005
 $9906 ADD HL,SP
 $9907 LD A,(HL)
 $9908 DEC A
 $9909 JR Z,$98D4
 $990B LD (HL),A
 $990C LD HL,($9C46)
 $990F JP $9977
*$9912 DEC A
 $9913 CP $24
 $9915 JR C,$9962
 $9917 CP $2C
 $9919 JR NC,$9928
 $991B CALL $9991
 $991E SUB $24
 $9920 RLCA
 $9921 RLCA
 $9922 RLCA
 $9923 LD D,$00
 $9925 LD E,A
 $9926 JR $98F4
*$9928 CP $2E
 $992A JR Z,$9942
 $992C LD HL,($9C46)
 $992F DEC HL
 $9930 LD A,(HL)
 $9931 CP $E9
 $9933 JR NZ,$98D4
 $9935 DEC HL
 $9936 LD A,(HL)
 $9937 LD HL,$000A
 $993A CP $DD
 $993C JR Z,$98F0
 $993E INC HL
 $993F INC HL
 $9940 JR $98F0
*$9942 LD HL,($9C46)
 $9945 DEC HL
 $9946 LD A,(HL)
 $9947 CP $4D
 $9949 JR Z,$994F
 $994B CP $45
 $994D JR NZ,$98D4
*$994F LD ($9C42),SP
 $9953 LD SP,($9C44)
 $9957 POP DE
 $9958 LD ($9C44),SP
 $995C LD SP,($9C42)
*$9960 JR $98F4
*$9962 LD E,A
 $9963 CALL $99A6
 $9966 JP Z,$98D4
 $9969 LD HL,($9C46)
 $996C LD A,E
 $996D AND $03
 $996F JR Z,$9986
 $9971 DEC A
 $9972 JR Z,$998C
 $9974 DEC A
 $9975 JR Z,$994F
*$9977 DEC HL
 $9978 LD E,(HL)
 $9979 INC HL
 $997A LD D,$00
 $997C LD A,E
 $997D OR A
 $997E JP P,$9982
 $9981 DEC D
*$9982 ADD HL,DE
 $9983 EX DE,HL
 $9984 JR $9960
*$9986 DEC HL
 $9987 LD D,(HL)
 $9988 DEC HL
 $9989 LD E,(HL)
 $998A JR $9960
*$998C CALL $9991
 $998F JR $9986
*$9991 LD HL,($9C46)
 $9994 LD ($9C42),SP
 $9998 LD SP,($9C44)
 $999C PUSH HL
 $999D LD ($9C44),SP
 $99A1 LD SP,($9C42)
 $99A5 RET
*$99A6 LD HL,$0004
 $99A9 ADD HL,SP
 $99AA LD L,(HL)
 $99AB SUB $04
 $99AD RET C
 $99AE LD C,A
 $99AF XOR A
 $99B0 BIT 7,L
 $99B2 JR Z,$99B6
 $99B4 SET 7,A
*$99B6 BIT 6,L
 $99B8 JR Z,$99BC
 $99BA SET 1,A
*$99BC BIT 0,L
 $99BE JR Z,$99C2
 $99C0 SET 3,A
*$99C2 BIT 2,L
 $99C4 JR Z,$99C8
 $99C6 SET 5,A
*$99C8 LD B,$04
*$99CA RLA
 $99CB JR C,$99CF
 $99CD SET 7,A
*$99CF RLA
 $99D0 DJNZ $99CA
 $99D2 RLA
 $99D3 LD B,A
 $99D4 LD D,$01
 $99D6 LD A,C
*$99D7 SUB $04
 $99D9 JR C,$99DF
 $99DB RL D
 $99DD JR $99D7
*$99DF LD A,B
 $99E0 AND D
 $99E1 RET
 $99E2 PUSH DE
 $99E3 EX DE,HL
 $99E4 LD HL,$9C38
 $99E7 INC (HL)
 $99E8 JR NZ,$99ED
 $99EA DEC (HL)
 $99EB JR $9A08
*$99ED LD HL,($9C36)
 $99F0 LD (HL),E
 $99F1 INC HL
 $99F2 LD (HL),D
 $99F3 INC HL
 $99F4 EX DE,HL
 $99F5 LD BC,$0003
 $99F8 LDIR
 $99FA LD ($9C36),DE
 $99FE LD DE,$9458
 $9A01 DEC HL
 $9A02 LD (HL),D
 $9A03 DEC HL
 $9A04 LD (HL),E
 $9A05 DEC HL
 $9A06 LD (HL),$CD
*$9A08 POP DE
 $9A09 RET
 $9A0A PUSH DE
 $9A0B CALL $8A2E
 $9A0E PUSH BC
 $9A0F LD B,$20
*$9A11 CALL $9856
 $9A14 DJNZ $9A11
 $9A16 POP BC
 $9A17 CALL $8A2E
 $9A1A POP DE
*$9A1B LD A,(HL)
 $9A1C OR A
 $9A1D RET Z
 $9A1E CALL $88D8
 $9A21 INC HL
 $9A22 JR $9A1B
*$9A24 LD HL,$9B17
 $9A27 CALL $9A43

; Room 00
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_00)
b$9A2A DEFB $92,$48,$49                                                                     ; {Static
 $9A2D DEFB $24,$92,$49                                                                     ; characters
 $9A30 DEFB $24,$92,$49                                                                     ;
 $9A33 DEFB $24,$C9,$24                                                                     ;
 $9A36 DEFB $92,$42,$64                                                                     ;
 $9A39 DEFB $49,$20,$00                                                                     ;
 $9A3C DEFB $00,$04,$92                                                                     ;
 $9A3F DEFB $90,$99,$24                                                                     ;
 $9A42 DEFB $92,$42,$92                                                                     ;
 $9A45 DEFB $48,$00,$00                                                                     ;
 $9A48 DEFB $00,$00,$12                                                                     ;
 $9A4B DEFB $49,$19,$24                                                                     ;
 $9A4E DEFB $92,$12,$80                                                                     ;
 $9A51 DEFB $00,$00,$00                                                                     ;
 $9A54 DEFB $00,$00,$30                                                                     ;
 $9A57 DEFB $01,$13,$24                                                                     ;
 $9A5A DEFB $24,$90,$00                                                                     ;
 $9A5D DEFB $00,$00,$00                                                                     ;
 $9A60 DEFB $00,$00,$30                                                                     ;
 $9A63 DEFB $00,$02,$49                                                                     ;
 $9A66 DEFB $20,$00,$00                                                                     ;
 $9A69 DEFB $00,$00,$00                                                                     ;
 $9A6C DEFB $00,$00,$30                                                                     ;
 $9A6F DEFB $00,$00,$31                                                                     ;
 $9A72 DEFB $20,$00,$00                                                                     ;
 $9A75 DEFB $00,$00,$00                                                                     ;
 $9A78 DEFB $00,$00,$30                                                                     ;
 $9A7B DEFB $00,$00,$31                                                                     ;
 $9A7E DEFB $4D,$B6,$DB                                                                     ;
 $9A81 DEFB $00,$00,$00                                                                     ;
 $9A84 DEFB $6D,$B6,$30                                                                     ;
 $9A87 DEFB $0D,$B6,$32                                                                     ;
 $9A8A DEFB $40,$00,$00                                                                     ;
 $9A8D DEFB $00,$00,$30                                                                     ;
 $9A90 DEFB $00,$0C,$30                                                                     ;
 $9A93 DEFB $00,$00,$32                                                                     ;
 $9A96 DEFB $40,$00,$00                                                                     ;
 $9A99 DEFB $00,$00,$30                                                                     ;
 $9A9C DEFB $00,$0C,$30                                                                     ;
 $9A9F DEFB $00,$00,$32                                                                     ;
 $9AA2 DEFB $40,$00,$00                                                                     ;
 $9AA5 DEFB $00,$00,$30                                                                     ;
 $9AA8 DEFB $00,$0C,$30                                                                     ;
 $9AAB DEFB $00,$00,$32                                                                     ;
 $9AAE DEFB $48,$00,$00                                                                     ;
 $9AB1 DEFB $01,$B6,$30                                                                     ;
 $9AB4 DEFB $00,$0C,$30                                                                     ;
 $9AB7 DEFB $00,$00,$32                                                                     ;
 $9ABA DEFB $49,$00,$00                                                                     ;
 $9ABD DEFB $00,$00,$30                                                                     ;
 $9AC0 DEFB $00,$0C,$38                                                                     ;
 $9AC3 DEFB $00,$00,$3A                                                                     ;
 $9AC6 DEFB $49,$20,$00                                                                     ;
 $9AC9 DEFB $00,$00,$33                                                                     ;
 $9ACC DEFB $6D,$8C,$09                                                                     ;
 $9ACF DEFB $24,$92,$4A                                                                     ;
 $9AD2 DEFB $49,$24,$00                                                                     ;
 $9AD5 DEFB $00,$00,$30                                                                     ;
 $9AD8 DEFB $24,$8C,$00                                                                     ;
 $9ADB DEFB $C0,$A9,$22                                                                     ;
 $9ADE DEFB $00,$04,$00                                                                     ;
 $9AE1 DEFB $00,$00,$30                                                                     ;
 $9AE4 DEFB $24,$8C,$00                                                                     ;
 $9AE7 DEFB $C0,$29,$22                                                                     ;
 $9AEA DEFB $00,$04,$00                                                                     ;
 $9AED DEFB $00,$00,$30                                                                     ;
 $9AF0 DEFB $24,$8C,$00                                                                     ;
 $9AF3 DEFB $C0,$25,$22                                                                     ;
 $9AF6 DEFB $00,$06,$DB                                                                     ;
 $9AF9 DEFB $00,$00,$30                                                                     ;
 $9AFC DEFB $24,$8C,$00                                                                     ;
 $9AFF DEFB $C0,$05,$22                                                                     ;
 $9B02 DEFB $00,$00,$00                                                                     ;
 $9B05 DEFB $00,$00,$38                                                                     ;
 $9B08 DEFB $24,$8E,$00                                                                     ;
 $9B0B DEFB $C0,$04,$A2                                                                     ;
 $9B0E DEFB $49,$24,$89                                                                     ;
 $9B11 DEFB $24,$92,$49                                                                     ;
 $9B14 DEFB $24,$92,$48                                                                     ;
 $9B17 DEFB $C0,$00,$92                                                                     ; }
 $9B1A DEFB $4D,$44,$45,$42                                                                 ; Wall
                                                                                            ; attributes
 $9B1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $9B20 DEFB $00                                                                             ; Next room
                                                                                            ; UP
 $9B21 DEFB $01                                                                             ; Next room
                                                                                            ; DOWN
 $9B22 DEFB $2C                                                                             ; Next room
                                                                                            ; LEFT
 $9B23 DEFB $00                                                                             ; Next room
                                                                                            ; RIGHT
 $9B24 DEFB $08                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $9B25 DEFB $7F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $9B26 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $9B27 DEFB $10                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $9B28 DEFB $A9                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $9B29 DEFB $80
 $9B2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $9B2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $9B2C DEFB $A9
 $9B2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $9B35 DEFB $00,$00
 $9B37 DEFB $00,$0C,$1E,$3F,$7F,$BE,$5E,$24                                                 ; Coal UDG
 $9B3F DEFB $00,$03,$08                                                                     ; {Coal
 $9B42 DEFB $01,$1A,$08                                                                     ; positions
 $9B45 DEFB $02,$0B,$0C                                                                     ; }
 $9B48 DEFB $00,$00,$00,$00,$00,$00
 $9B4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $9B57 DEFB $42,$00,$E7,$F7,$F3,$00,$7E,$7F,$3F                                             ; character
 $9B60 DEFB $4D,$00,$BB,$AA,$BB,$00,$BB,$AA,$BB                                             ; graphics
 $9B69 DEFB $43,$FF,$55,$FF,$AA,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $9B72 DEFB $46,$82,$82,$86,$FE,$C0,$1E,$F6,$B2                                             ;
 $9B7B DEFB $44,$00,$1C,$14,$08,$08,$08,$1C,$1C                                             ;
 $9B84 DEFB $45,$10,$38,$20,$70,$10,$38,$08,$1C                                             ;
 $9B8D DEFB $45,$00,$1C,$3E,$1C,$2C,$2A,$4A,$8A                                             ; }
 $9B96 DEFB $00,$80,$67,$80,$67,$80,$FF,$80,$FF,$44,$00,$00,$30,$37,$20,$00,$20,$00,$00,$00 ; {Nasty
 $9BAA DEFB $00,$00,$67,$00,$67,$80,$FF,$80,$FF,$47,$01,$01,$58,$4F,$28,$00,$28,$01,$00,$00 ; data
 $9BBE DEFB $02,$80,$FF,$80,$FF,$80,$60,$80,$60,$40,$02,$02,$00,$3F,$00,$00,$00,$00,$00,$00 ;
 $9BD2 DEFB $02,$00,$61,$00,$61,$00,$61,$00,$61,$40,$03,$00,$00,$2F,$00,$00,$00,$00,$00,$00 ;
 $9BE6 DEFB $03,$80,$FF,$80,$FF,$80,$61,$80,$61,$40,$01,$02,$00,$AF,$00,$00,$00,$00,$00,$00 ;
 $9BFA DEFB $03,$80,$FF,$80,$FF,$00,$62,$00,$62,$40,$01,$02,$00,$AF,$00,$00,$00,$00,$00,$00 ;
 $9C0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $9C22 DEFB $40,$77,$40,$60,$80,$77,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 01
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_01)
b$9C2A DEFB $49,$24,$92                                                                     ; {Static
 $9C2D DEFB $49,$24,$92                                                                     ; characters
 $9C30 DEFB $24,$80,$00                                                                     ;
 $9C33 DEFB $C0,$00,$49                                                                     ;
 $9C36 DEFB $49,$00,$00                                                                     ;
 $9C39 DEFB $00,$00,$92                                                                     ;
 $9C3C DEFB $24,$80,$00                                                                     ;
 $9C3F DEFB $C0,$00,$49                                                                     ;
 $9C42 DEFB $40,$00,$00                                                                     ;
 $9C45 DEFB $00,$00,$12                                                                     ;
 $9C48 DEFB $24,$80,$00                                                                     ;
 $9C4B DEFB $C0,$00,$49                                                                     ;
 $9C4E DEFB $40,$00,$00                                                                     ;
 $9C51 DEFB $00,$00,$12                                                                     ;
 $9C54 DEFB $24,$80,$00                                                                     ;
 $9C57 DEFB $C0,$00,$49                                                                     ;
 $9C5A DEFB $40,$00,$00                                                                     ;
 $9C5D DEFB $00,$00,$12                                                                     ;
 $9C60 DEFB $24,$80,$00                                                                     ;
 $9C63 DEFB $C0,$00,$49                                                                     ;
 $9C66 DEFB $40,$09,$FA                                                                     ;
 $9C69 DEFB $49,$24,$92                                                                     ;
 $9C6C DEFB $44,$80,$00                                                                     ;
 $9C6F DEFB $C0,$00,$4A                                                                     ;
 $9C72 DEFB $40,$00,$00                                                                     ;
 $9C75 DEFB $00,$24,$92                                                                     ;
 $9C78 DEFB $44,$80,$00                                                                     ;
 $9C7B DEFB $C0,$00,$49                                                                     ;
 $9C7E DEFB $53,$C0,$00                                                                     ;
 $9C81 DEFB $00,$00,$12                                                                     ;
 $9C84 DEFB $48,$B6,$DB                                                                     ;
 $9C87 DEFB $60,$00,$49                                                                     ;
 $9C8A DEFB $48,$00,$00                                                                     ;
 $9C8D DEFB $00,$00,$02                                                                     ;
 $9C90 DEFB $49,$00,$00                                                                     ;
 $9C93 DEFB $00,$00,$49                                                                     ;
 $9C96 DEFB $49,$29,$E4                                                                     ;
 $9C99 DEFB $9C,$00,$00                                                                     ;
 $9C9C DEFB $01,$00,$00                                                                     ;
 $9C9F DEFB $00,$00,$49                                                                     ;
 $9CA2 DEFB $49,$24,$00                                                                     ;
 $9CA5 DEFB $00,$00,$00                                                                     ;
 $9CA8 DEFB $00,$00,$00                                                                     ;
 $9CAB DEFB $6D,$B6,$52                                                                     ;
 $9CAE DEFB $49,$24,$00                                                                     ;
 $9CB1 DEFB $12,$70,$00                                                                     ;
 $9CB4 DEFB $00,$00,$00                                                                     ;
 $9CB7 DEFB $00,$00,$4A                                                                     ;
 $9CBA DEFB $49,$24,$90                                                                     ;
 $9CBD DEFB $00,$00,$00                                                                     ;
 $9CC0 DEFB $00,$00,$00                                                                     ;
 $9CC3 DEFB $00,$00,$49                                                                     ;
 $9CC6 DEFB $48,$00,$12                                                                     ;
 $9CC9 DEFB $49,$25,$24                                                                     ;
 $9CCC DEFB $FE,$00,$1B                                                                     ;
 $9CCF DEFB $60,$00,$49                                                                     ;
 $9CD2 DEFB $48,$00,$00                                                                     ;
 $9CD5 DEFB $49,$00,$00                                                                     ;
 $9CD8 DEFB $00,$00,$00                                                                     ;
 $9CDB DEFB $00,$00,$49                                                                     ;
 $9CDE DEFB $40,$00,$00                                                                     ;
 $9CE1 DEFB $00,$00,$00                                                                     ;
 $9CE4 DEFB $00,$00,$00                                                                     ;
 $9CE7 DEFB $00,$00,$4A                                                                     ;
 $9CEA DEFB $40,$00,$00                                                                     ;
 $9CED DEFB $00,$00,$00                                                                     ;
 $9CF0 DEFB $00,$01,$80                                                                     ;
 $9CF3 DEFB $00,$00,$4A                                                                     ;
 $9CF6 DEFB $52,$4E,$00                                                                     ;
 $9CF9 DEFB $00,$00,$12                                                                     ;
 $9CFC DEFB $48,$81,$9B                                                                     ;
 $9CFF DEFB $6D,$B6,$52                                                                     ;
 $9D02 DEFB $48,$00,$00                                                                     ;
 $9D05 DEFB $00,$04,$92                                                                     ;
 $9D08 DEFB $44,$81,$80                                                                     ;
 $9D0B DEFB $00,$00,$49                                                                     ;
 $9D0E DEFB $49,$24,$92                                                                     ;
 $9D11 DEFB $49,$24,$92                                                                     ;
 $9D14 DEFB $24,$81,$80                                                                     ;
 $9D17 DEFB $00,$00,$49                                                                     ; }
 $9D1A DEFB $72,$44,$05,$02                                                                 ; Wall
                                                                                            ; attributes
 $9D1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $9D20 DEFB $00                                                                             ; Next room
                                                                                            ; UP
 $9D21 DEFB $02                                                                             ; Next room
                                                                                            ; DOWN
 $9D22 DEFB $01                                                                             ; Next room
                                                                                            ; LEFT
 $9D23 DEFB $01                                                                             ; Next room
                                                                                            ; RIGHT
 $9D24 DEFB $78                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $9D25 DEFB $37                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $9D26 DEFB $10                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $9D27 DEFB $08                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $9D28 DEFB $A9                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $9D29 DEFB $90
 $9D2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $9D2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $9D2C DEFB $A9
 $9D2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $9D35 DEFB $00,$00
 $9D37 DEFB $00,$06,$77,$ED,$DB,$D7,$DA,$6E                                                 ; Coal UDG
 $9D3F DEFB $03,$0C,$06                                                                     ; {Coal
 $9D42 DEFB $04,$02,$10                                                                     ; positions
 $9D45 DEFB $05,$1A,$0B                                                                     ; }
 $9D48 DEFB $00,$00,$00,$00,$00,$00
 $9D4E DEFB $47,$00,$00,$00,$00,$00,$00,$00                                                 ; {Static
 $9D56 DEFB $00,$72,$FB,$FB,$FB,$00,$7F,$7F                                                 ; character
 $9D5E DEFB $7F,$00,$02,$38,$79,$63,$0C,$78                                                 ; graphics
 $9D66 DEFB $D8,$83,$07,$45,$FF,$FF,$EF,$FF                                                 ; #UDGSTR(#PC)
 $9D6E DEFB $FF,$00,$00,$00,$42,$FF,$7F,$3C                                                 ;
 $9D76 DEFB $70,$B0,$60,$00,$00,$44,$10,$54                                                 ;
 $9D7E DEFB $A5,$A9,$5A,$3C,$FC,$18,$05,$28                                                 ;
 $9D86 DEFB $1C,$38,$70,$28,$1C,$38,$70,$42                                                 ;
 $9D8E DEFB $FF,$FE,$3C,$0E,$0D,$06,$00,$00                                                 ; }
 $9D96 DEFB $02,$00,$6E,$00,$6E,$80,$A0,$80,$A0,$40,$01,$01,$A0,$AF,$48,$06,$48,$02,$00,$00 ; {Nasty
 $9DAA DEFB $03,$80,$77,$80,$77,$00,$9D,$80,$9C,$40,$00,$01,$A0,$1F,$04,$01,$04,$00,$00,$00 ; data
 $9DBE DEFB $00,$00,$64,$00,$64,$00,$64,$80,$63,$46,$02,$00,$28,$27,$14,$00,$14,$00,$00,$00 ;
 $9DD2 DEFB $03,$00,$6F,$00,$6F,$80,$FF,$80,$FF,$40,$04,$01,$D0,$AF,$48,$00,$48,$02,$00,$00 ;
 $9DE6 DEFB $02,$80,$77,$80,$77,$80,$FF,$80,$FF,$40,$03,$00,$D0,$1F,$1C,$00,$1C,$00,$00,$00 ;
 $9DFA DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $9E0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $9E22 DEFB $00,$00,$00,$00,$00,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 02
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_02)
b$9E2A DEFB $49,$24,$92                                                                     ; {Static
 $9E2D DEFB $49,$24,$92                                                                     ; characters
 $9E30 DEFB $24,$81,$80                                                                     ;
 $9E33 DEFB $00,$00,$49                                                                     ;
 $9E36 DEFB $49,$24,$00                                                                     ;
 $9E39 DEFB $00,$04,$92                                                                     ;
 $9E3C DEFB $24,$81,$80                                                                     ;
 $9E3F DEFB $00,$00,$49                                                                     ;
 $9E42 DEFB $49,$00,$00                                                                     ;
 $9E45 DEFB $00,$00,$92                                                                     ;
 $9E48 DEFB $24,$81,$80                                                                     ;
 $9E4B DEFB $00,$00,$49                                                                     ;
 $9E4E DEFB $48,$00,$00                                                                     ;
 $9E51 DEFB $00,$24,$92                                                                     ;
 $9E54 DEFB $24,$81,$80                                                                     ;
 $9E57 DEFB $00,$00,$49                                                                     ;
 $9E5A DEFB $48,$00,$00                                                                     ;
 $9E5D DEFB $49,$24,$92                                                                     ;
 $9E60 DEFB $24,$81,$80                                                                     ;
 $9E63 DEFB $00,$00,$49                                                                     ;
 $9E66 DEFB $49,$01,$A7                                                                     ;
 $9E69 DEFB $49,$24,$92                                                                     ;
 $9E6C DEFB $44,$81,$80                                                                     ;
 $9E6F DEFB $00,$00,$4A                                                                     ;
 $9E72 DEFB $49,$21,$80                                                                     ;
 $9E75 DEFB $48,$24,$92                                                                     ;
 $9E78 DEFB $44,$81,$80                                                                     ;
 $9E7B DEFB $00,$02,$49                                                                     ;
 $9E7E DEFB $49,$21,$80                                                                     ;
 $9E81 DEFB $08,$00,$12                                                                     ;
 $9E84 DEFB $48,$81,$80                                                                     ;
 $9E87 DEFB $00,$02,$49                                                                     ;
 $9E8A DEFB $49,$01,$80                                                                     ;
 $9E8D DEFB $00,$00,$02                                                                     ;
 $9E90 DEFB $24,$81,$80                                                                     ;
 $9E93 DEFB $00,$02,$49                                                                     ;
 $9E96 DEFB $49,$21,$80                                                                     ;
 $9E99 DEFB $00,$00,$00                                                                     ;
 $9E9C DEFB $09,$01,$80                                                                     ;
 $9E9F DEFB $00,$12,$49                                                                     ;
 $9EA2 DEFB $49,$25,$27                                                                     ;
 $9EA5 DEFB $E0,$00,$00                                                                     ;
 $9EA8 DEFB $00,$01,$80                                                                     ;
 $9EAB DEFB $00,$12,$52                                                                     ;
 $9EAE DEFB $49,$24,$00                                                                     ;
 $9EB1 DEFB $00,$00,$00                                                                     ;
 $9EB4 DEFB $00,$01,$80                                                                     ;
 $9EB7 DEFB $00,$12,$4A                                                                     ;
 $9EBA DEFB $49,$24,$90                                                                     ;
 $9EBD DEFB $09,$00,$00                                                                     ;
 $9EC0 DEFB $00,$01,$80                                                                     ;
 $9EC3 DEFB $00,$12,$49                                                                     ;
 $9EC6 DEFB $49,$24,$92                                                                     ;
 $9EC9 DEFB $49,$24,$00                                                                     ;
 $9ECC DEFB $00,$96,$D8                                                                     ;
 $9ECF DEFB $00,$12,$49                                                                     ;
 $9ED2 DEFB $49,$24,$92                                                                     ;
 $9ED5 DEFB $49,$00,$00                                                                     ;
 $9ED8 DEFB $09,$10,$00                                                                     ;
 $9EDB DEFB $00,$12,$49                                                                     ;
 $9EDE DEFB $49,$24,$80                                                                     ;
 $9EE1 DEFB $00,$00,$00                                                                     ;
 $9EE4 DEFB $48,$90,$30                                                                     ;
 $9EE7 DEFB $00,$92,$4A                                                                     ;
 $9EEA DEFB $49,$24,$00                                                                     ;
 $9EED DEFB $00,$00,$92                                                                     ;
 $9EF0 DEFB $48,$90,$33                                                                     ;
 $9EF3 DEFB $6C,$92,$4A                                                                     ;
 $9EF6 DEFB $49,$24,$00                                                                     ;
 $9EF9 DEFB $09,$24,$92                                                                     ;
 $9EFC DEFB $44,$90,$30                                                                     ;
 $9EFF DEFB $00,$92,$52                                                                     ;
 $9F02 DEFB $49,$24,$92                                                                     ;
 $9F05 DEFB $49,$24,$92                                                                     ;
 $9F08 DEFB $24,$90,$30                                                                     ;
 $9F0B DEFB $00,$92,$49                                                                     ;
 $9F0E DEFB $49,$24,$92                                                                     ;
 $9F11 DEFB $49,$24,$92                                                                     ;
 $9F14 DEFB $24,$90,$30                                                                     ;
 $9F17 DEFB $00,$92,$49                                                                     ; }
 $9F1A DEFB $72,$44,$05,$02                                                                 ; Wall
                                                                                            ; attributes
 $9F1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $9F20 DEFB $01                                                                             ; Next room
                                                                                            ; UP
 $9F21 DEFB $03                                                                             ; Next room
                                                                                            ; DOWN
 $9F22 DEFB $02                                                                             ; Next room
                                                                                            ; LEFT
 $9F23 DEFB $02                                                                             ; Next room
                                                                                            ; RIGHT
 $9F24 DEFB $48                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $9F25 DEFB $37                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $9F26 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $9F27 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $9F28 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $9F29 DEFB $60
 $9F2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $9F2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $9F2C DEFB $00
 $9F2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $9F35 DEFB $00,$00
 $9F37 DEFB $00,$0F,$1F,$39,$72,$64,$78,$00                                                 ; Coal UDG
 $9F3F DEFB $06,$09,$05                                                                     ; {Coal
 $9F42 DEFB $07,$17,$08                                                                     ; positions
 $9F45 DEFB $08,$07,$13                                                                     ; }
 $9F48 DEFB $00,$00,$00,$00,$00,$00
 $9F4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $9F57 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $9F60 DEFB $02,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $9F69 DEFB $45,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $9F72 DEFB $42,$FF,$7F,$3C,$70,$B0,$60,$00,$00                                             ;
 $9F7B DEFB $44,$10,$54,$A5,$A9,$5A,$3C,$FC,$18                                             ;
 $9F84 DEFB $05,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $9F8D DEFB $42,$FF,$FE,$3C,$0E,$0D,$06,$00,$00                                             ; }
 $9F96 DEFB $02,$80,$6E,$80,$6E,$80,$FF,$80,$FF,$40,$01,$01,$B8,$AF,$48,$03,$48,$02,$00,$00 ; {Nasty
 $9FAA DEFB $03,$80,$77,$80,$77,$80,$A5,$80,$A5,$40,$00,$00,$B8,$1F,$20,$03,$20,$00,$00,$00 ; data
 $9FBE DEFB $00,$80,$FF,$80,$FF,$80,$64,$80,$64,$43,$02,$03,$30,$6F,$38,$00,$38,$01,$00,$00 ;
 $9FD2 DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $9FE6 DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $9FFA DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $A00E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $A022 DEFB $68,$47,$68,$7C,$90,$47,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 03
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_03)
b$A02A DEFB $49,$24,$92                                                                     ; {Static
 $A02D DEFB $49,$24,$92                                                                     ; characters
 $A030 DEFB $44,$90,$30                                                                     ;
 $A033 DEFB $00,$92,$92                                                                     ;
 $A036 DEFB $49,$00,$00                                                                     ;
 $A039 DEFB $00,$00,$02                                                                     ;
 $A03C DEFB $48,$90,$30                                                                     ;
 $A03F DEFB $00,$92,$92                                                                     ;
 $A042 DEFB $49,$00,$00                                                                     ;
 $A045 DEFB $00,$00,$00                                                                     ;
 $A048 DEFB $00,$10,$30                                                                     ;
 $A04B DEFB $00,$92,$92                                                                     ;
 $A04E DEFB $48,$00,$00                                                                     ;
 $A051 DEFB $00,$00,$00                                                                     ;
 $A054 DEFB $00,$00,$30                                                                     ;
 $A057 DEFB $00,$A2,$92                                                                     ;
 $A05A DEFB $48,$00,$00                                                                     ;
 $A05D DEFB $09,$24,$00                                                                     ;
 $A060 DEFB $00,$00,$30                                                                     ;
 $A063 DEFB $00,$A4,$92                                                                     ;
 $A066 DEFB $49,$00,$27                                                                     ;
 $A069 DEFB $49,$24,$92                                                                     ;
 $A06C DEFB $49,$B6,$D8                                                                     ;
 $A06F DEFB $00,$94,$92                                                                     ;
 $A072 DEFB $49,$20,$00                                                                     ;
 $A075 DEFB $48,$24,$92                                                                     ;
 $A078 DEFB $40,$01,$80                                                                     ;
 $A07B DEFB $00,$92,$92                                                                     ;
 $A07E DEFB $49,$20,$00                                                                     ;
 $A081 DEFB $08,$0C,$12                                                                     ;
 $A084 DEFB $48,$91,$80                                                                     ;
 $A087 DEFB $00,$92,$92                                                                     ;
 $A08A DEFB $49,$49,$C0                                                                     ;
 $A08D DEFB $00,$0C,$02                                                                     ;
 $A090 DEFB $44,$91,$9B                                                                     ;
 $A093 DEFB $6C,$A4,$92                                                                     ;
 $A096 DEFB $49,$20,$00                                                                     ;
 $A099 DEFB $00,$0C,$00                                                                     ;
 $A09C DEFB $09,$11,$80                                                                     ;
 $A09F DEFB $00,$94,$92                                                                     ;
 $A0A2 DEFB $49,$24,$00                                                                     ;
 $A0A5 DEFB $00,$0C,$00                                                                     ;
 $A0A8 DEFB $00,$11,$80                                                                     ;
 $A0AB DEFB $00,$92,$92                                                                     ;
 $A0AE DEFB $49,$24,$00                                                                     ;
 $A0B1 DEFB $00,$0C,$00                                                                     ;
 $A0B4 DEFB $00,$11,$80                                                                     ;
 $A0B7 DEFB $00,$92,$92                                                                     ;
 $A0BA DEFB $49,$24,$90                                                                     ;
 $A0BD DEFB $00,$0C,$00                                                                     ;
 $A0C0 DEFB $00,$11,$80                                                                     ;
 $A0C3 DEFB $00,$92,$92                                                                     ;
 $A0C6 DEFB $49,$24,$92                                                                     ;
 $A0C9 DEFB $49,$0C,$07                                                                     ;
 $A0CC DEFB $9C,$91,$80                                                                     ;
 $A0CF DEFB $00,$92,$92                                                                     ;
 $A0D2 DEFB $49,$24,$00                                                                     ;
 $A0D5 DEFB $00,$00,$00                                                                     ;
 $A0D8 DEFB $09,$11,$80                                                                     ;
 $A0DB DEFB $00,$94,$92                                                                     ;
 $A0DE DEFB $48,$00,$00                                                                     ;
 $A0E1 DEFB $00,$01,$27                                                                     ;
 $A0E4 DEFB $48,$91,$80                                                                     ;
 $A0E7 DEFB $00,$94,$92                                                                     ;
 $A0EA DEFB $40,$00,$00                                                                     ;
 $A0ED DEFB $00,$00,$00                                                                     ;
 $A0F0 DEFB $48,$91,$80                                                                     ;
 $A0F3 DEFB $00,$92,$92                                                                     ;
 $A0F6 DEFB $40,$00,$00                                                                     ;
 $A0F9 DEFB $09,$24,$92                                                                     ;
 $A0FC DEFB $45,$11,$80                                                                     ;
 $A0FF DEFB $00,$94,$92                                                                     ;
 $A102 DEFB $48,$00,$00                                                                     ;
 $A105 DEFB $49,$24,$92                                                                     ;
 $A108 DEFB $49,$11,$80                                                                     ;
 $A10B DEFB $00,$92,$92                                                                     ;
 $A10E DEFB $49,$24,$92                                                                     ;
 $A111 DEFB $49,$24,$92                                                                     ;
 $A114 DEFB $44,$91,$80                                                                     ;
 $A117 DEFB $00,$94,$92                                                                     ; }
 $A11A DEFB $72,$44,$05,$02                                                                 ; Wall
                                                                                            ; attributes
 $A11E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $A120 DEFB $02                                                                             ; Next room
                                                                                            ; UP
 $A121 DEFB $04                                                                             ; Next room
                                                                                            ; DOWN
 $A122 DEFB $03                                                                             ; Next room
                                                                                            ; LEFT
 $A123 DEFB $03                                                                             ; Next room
                                                                                            ; RIGHT
 $A124 DEFB $88                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $A125 DEFB $57                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $A126 DEFB $01                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $A127 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $A128 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $A129 DEFB $28
 $A12A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $A12B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $A12C DEFB $00
 $A12D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $A135 DEFB $00,$00
 $A137 DEFB $00,$00,$0C,$FA,$A5,$75,$DA,$EC                                                 ; Coal UDG
 $A13F DEFB $09,$04,$14                                                                     ; {Coal
 $A142 DEFB $00,$00,$00                                                                     ; positions
 $A145 DEFB $00,$00,$00                                                                     ; }
 $A148 DEFB $00,$00,$00,$00,$00,$00
 $A14E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $A157 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $A160 DEFB $02,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $A169 DEFB $45,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $A172 DEFB $42,$FF,$7F,$3C,$70,$B0,$60,$00,$00                                             ;
 $A17B DEFB $44,$10,$54,$A5,$A9,$5A,$3C,$FC,$18                                             ;
 $A184 DEFB $05,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $A18D DEFB $42,$FF,$FE,$3C,$0E,$0D,$06,$00,$00                                             ; }
 $A196 DEFB $03,$00,$6F,$00,$6F,$80,$A6,$80,$A6,$40,$01,$01,$A8,$AF,$48,$03,$48,$02,$00,$00 ; {Nasty
 $A1AA DEFB $02,$80,$77,$80,$77,$80,$FF,$80,$FF,$40,$00,$00,$A8,$1F,$24,$00,$24,$00,$00,$00 ; data
 $A1BE DEFB $00,$80,$FF,$80,$FF,$80,$69,$80,$69,$44,$02,$03,$10,$37,$48,$00,$48,$01,$00,$00 ;
 $A1D2 DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $A1E6 DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $A1FA DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $A20E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $A222 DEFB $28,$5F,$28,$5E,$A0,$5F,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 04
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_04)
b$A22A DEFB $49,$24,$92                                                                     ; {Static
 $A22D DEFB $49,$24,$92                                                                     ; characters
 $A230 DEFB $44,$91,$80                                                                     ;
 $A233 DEFB $00,$92,$92                                                                     ;
 $A236 DEFB $49,$24,$80                                                                     ;
 $A239 DEFB $00,$04,$92                                                                     ;
 $A23C DEFB $44,$91,$80                                                                     ;
 $A23F DEFB $00,$92,$92                                                                     ;
 $A242 DEFB $49,$00,$00                                                                     ;
 $A245 DEFB $00,$00,$12                                                                     ;
 $A248 DEFB $48,$91,$80                                                                     ;
 $A24B DEFB $00,$92,$92                                                                     ;
 $A24E DEFB $48,$00,$00                                                                     ;
 $A251 DEFB $00,$00,$02                                                                     ;
 $A254 DEFB $44,$91,$80                                                                     ;
 $A257 DEFB $00,$A2,$92                                                                     ;
 $A25A DEFB $48,$00,$00                                                                     ;
 $A25D DEFB $00,$00,$00                                                                     ;
 $A260 DEFB $04,$91,$80                                                                     ;
 $A263 DEFB $00,$A4,$92                                                                     ;
 $A266 DEFB $49,$00,$00                                                                     ;
 $A269 DEFB $93,$80,$00                                                                     ;
 $A26C DEFB $04,$91,$80                                                                     ;
 $A26F DEFB $00,$94,$92                                                                     ;
 $A272 DEFB $49,$20,$00                                                                     ;
 $A275 DEFB $18,$00,$00                                                                     ;
 $A278 DEFB $00,$11,$80                                                                     ;
 $A27B DEFB $00,$92,$92                                                                     ;
 $A27E DEFB $49,$20,$00                                                                     ;
 $A281 DEFB $18,$4F,$E7                                                                     ;
 $A284 DEFB $E8,$91,$80                                                                     ;
 $A287 DEFB $00,$92,$92                                                                     ;
 $A28A DEFB $49,$24,$80                                                                     ;
 $A28D DEFB $18,$00,$00                                                                     ;
 $A290 DEFB $00,$91,$80                                                                     ;
 $A293 DEFB $00,$94,$92                                                                     ;
 $A296 DEFB $49,$24,$80                                                                     ;
 $A299 DEFB $18,$00,$00                                                                     ;
 $A29C DEFB $00,$01,$80                                                                     ;
 $A29F DEFB $00,$94,$92                                                                     ;
 $A2A2 DEFB $49,$24,$97                                                                     ;
 $A2A5 DEFB $93,$F0,$00                                                                     ;
 $A2A8 DEFB $00,$01,$80                                                                     ;
 $A2AB DEFB $00,$92,$92                                                                     ;
 $A2AE DEFB $49,$24,$90                                                                     ;
 $A2B1 DEFB $00,$00,$00                                                                     ;
 $A2B4 DEFB $00,$01,$80                                                                     ;
 $A2B7 DEFB $00,$92,$92                                                                     ;
 $A2BA DEFB $49,$24,$92                                                                     ;
 $A2BD DEFB $80,$00,$00                                                                     ;
 $A2C0 DEFB $04,$96,$D8                                                                     ;
 $A2C3 DEFB $00,$A4,$92                                                                     ;
 $A2C6 DEFB $49,$24,$92                                                                     ;
 $A2C9 DEFB $49,$40,$27                                                                     ;
 $A2CC DEFB $48,$90,$00                                                                     ;
 $A2CF DEFB $00,$20,$12                                                                     ;
 $A2D2 DEFB $49,$24,$00                                                                     ;
 $A2D5 DEFB $09,$20,$00                                                                     ;
 $A2D8 DEFB $49,$10,$00                                                                     ;
 $A2DB DEFB $00,$00,$02                                                                     ;
 $A2DE DEFB $49,$00,$00                                                                     ;
 $A2E1 DEFB $00,$24,$80                                                                     ;
 $A2E4 DEFB $48,$90,$00                                                                     ;
 $A2E7 DEFB $00,$00,$02                                                                     ;
 $A2EA DEFB $49,$00,$00                                                                     ;
 $A2ED DEFB $00,$00,$00                                                                     ;
 $A2F0 DEFB $48,$90,$1B                                                                     ;
 $A2F3 DEFB $6C,$94,$92                                                                     ;
 $A2F6 DEFB $49,$24,$00                                                                     ;
 $A2F9 DEFB $49,$24,$92                                                                     ;
 $A2FC DEFB $44,$90,$06                                                                     ;
 $A2FF DEFB $00,$A4,$92                                                                     ;
 $A302 DEFB $49,$24,$80                                                                     ;
 $A305 DEFB $49,$24,$92                                                                     ;
 $A308 DEFB $44,$90,$06                                                                     ;
 $A30B DEFB $00,$92,$92                                                                     ;
 $A30E DEFB $49,$24,$90                                                                     ;
 $A311 DEFB $49,$24,$92                                                                     ;
 $A314 DEFB $44,$96,$DE                                                                     ;
 $A317 DEFB $00,$94,$92                                                                     ; }
 $A31A DEFB $72,$01,$05,$02                                                                 ; Wall
                                                                                            ; attributes
 $A31E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $A320 DEFB $03                                                                             ; Next room
                                                                                            ; UP
 $A321 DEFB $05                                                                             ; Next room
                                                                                            ; DOWN
 $A322 DEFB $04                                                                             ; Next room
                                                                                            ; LEFT
 $A323 DEFB $04                                                                             ; Next room
                                                                                            ; RIGHT
 $A324 DEFB $30                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $A325 DEFB $6F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $A326 DEFB $02                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $A327 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $A328 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $A329 DEFB $60
 $A32A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $A32B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $A32C DEFB $00
 $A32D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $A335 DEFB $00,$00
 $A337 DEFB $00,$00,$00,$00,$18,$2C,$5E,$BF                                                 ; Coal UDG
 $A33F DEFB $0A,$09,$04                                                                     ; {Coal
 $A342 DEFB $0B,$19,$11                                                                     ; positions
 $A345 DEFB $0C,$0F,$12                                                                     ; }
 $A348 DEFB $00,$00,$00,$00,$00,$00
 $A34E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $A357 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $A360 DEFB $02,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $A369 DEFB $45,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $A372 DEFB $42,$FF,$7F,$3C,$70,$B0,$60,$00,$00                                             ;
 $A37B DEFB $04,$10,$54,$A5,$A9,$5A,$3C,$FC,$18                                             ;
 $A384 DEFB $05,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $A38D DEFB $42,$FF,$FE,$3C,$0E,$0D,$06,$00,$00                                             ; }
 $A396 DEFB $00,$80,$FF,$80,$FF,$80,$63,$80,$63,$45,$00,$03,$10,$97,$58,$07,$58,$01,$00,$00 ; {Nasty
 $A3AA DEFB $00,$00,$64,$00,$64,$80,$FF,$80,$FF,$46,$01,$00,$E0,$3F,$00,$02,$00,$00,$00,$00 ; data
 $A3BE DEFB $02,$80,$FF,$80,$FF,$00,$6C,$00,$6C,$40,$03,$03,$00,$27,$78,$07,$78,$02,$00,$00 ;
 $A3D2 DEFB $03,$80,$FF,$80,$FF,$80,$6B,$80,$6B,$40,$02,$02,$F0,$27,$78,$07,$78,$02,$00,$00 ;
 $A3E6 DEFB $03,$80,$6E,$80,$6E,$80,$FF,$80,$FF,$40,$05,$01,$A8,$AF,$48,$00,$48,$02,$00,$00 ;
 $A3FA DEFB $02,$80,$77,$80,$77,$80,$FF,$80,$FF,$40,$04,$00,$A8,$1F,$24,$00,$24,$00,$00,$00 ;
 $A40E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $A422 DEFB $00,$00,$00,$00,$00,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 05
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_05)
b$A42A DEFB $49,$24,$90                                                                     ; {Static
 $A42D DEFB $49,$24,$92                                                                     ; characters
 $A430 DEFB $44,$90,$06                                                                     ;
 $A433 DEFB $00,$92,$92                                                                     ;
 $A436 DEFB $49,$24,$80                                                                     ;
 $A439 DEFB $C9,$24,$92                                                                     ;
 $A43C DEFB $44,$90,$06                                                                     ;
 $A43F DEFB $00,$92,$92                                                                     ;
 $A442 DEFB $49,$24,$00                                                                     ;
 $A445 DEFB $C0,$24,$92                                                                     ;
 $A448 DEFB $48,$90,$06                                                                     ;
 $A44B DEFB $00,$92,$92                                                                     ;
 $A44E DEFB $49,$24,$00                                                                     ;
 $A451 DEFB $C0,$00,$02                                                                     ;
 $A454 DEFB $40,$00,$06                                                                     ;
 $A457 DEFB $00,$A0,$12                                                                     ;
 $A45A DEFB $49,$00,$00                                                                     ;
 $A45D DEFB $C0,$00,$00                                                                     ;
 $A460 DEFB $00,$00,$06                                                                     ;
 $A463 DEFB $00,$00,$02                                                                     ;
 $A466 DEFB $48,$00,$00                                                                     ;
 $A469 DEFB $C0,$00,$00                                                                     ;
 $A46C DEFB $00,$00,$06                                                                     ;
 $A46F DEFB $00,$00,$02                                                                     ;
 $A472 DEFB $48,$00,$00                                                                     ;
 $A475 DEFB $D2,$74,$92                                                                     ;
 $A478 DEFB $24,$B0,$03                                                                     ;
 $A47B DEFB $6C,$90,$02                                                                     ;
 $A47E DEFB $48,$01,$80                                                                     ;
 $A481 DEFB $C0,$24,$92                                                                     ;
 $A484 DEFB $24,$80,$00                                                                     ;
 $A487 DEFB $00,$80,$02                                                                     ;
 $A48A DEFB $4A,$7F,$80                                                                     ;
 $A48D DEFB $C0,$24,$92                                                                     ;
 $A490 DEFB $24,$80,$00                                                                     ;
 $A493 DEFB $00,$80,$12                                                                     ;
 $A496 DEFB $40,$01,$80                                                                     ;
 $A499 DEFB $C0,$24,$92                                                                     ;
 $A49C DEFB $24,$80,$00                                                                     ;
 $A49F DEFB $00,$00,$92                                                                     ;
 $A4A2 DEFB $40,$01,$80                                                                     ;
 $A4A5 DEFB $C0,$24,$91                                                                     ;
 $A4A8 DEFB $24,$00,$00                                                                     ;
 $A4AB DEFB $00,$00,$92                                                                     ;
 $A4AE DEFB $40,$09,$38                                                                     ;
 $A4B1 DEFB $C0,$24,$91                                                                     ;
 $A4B4 DEFB $24,$00,$00                                                                     ;
 $A4B7 DEFB $00,$00,$92                                                                     ;
 $A4BA DEFB $53,$81,$80                                                                     ;
 $A4BD DEFB $C0,$24,$91                                                                     ;
 $A4C0 DEFB $24,$00,$00                                                                     ;
 $A4C3 DEFB $00,$A4,$92                                                                     ;
 $A4C6 DEFB $00,$01,$80                                                                     ;
 $A4C9 DEFB $49,$24,$91                                                                     ;
 $A4CC DEFB $25,$B6,$DB                                                                     ;
 $A4CF DEFB $6D,$A4,$92                                                                     ;
 $A4D2 DEFB $40,$01,$92                                                                     ;
 $A4D5 DEFB $49,$24,$80                                                                     ;
 $A4D8 DEFB $00,$0C,$00                                                                     ;
 $A4DB DEFB $00,$04,$92                                                                     ;
 $A4DE DEFB $40,$01,$82                                                                     ;
 $A4E1 DEFB $49,$00,$00                                                                     ;
 $A4E4 DEFB $00,$0C,$00                                                                     ;
 $A4E7 DEFB $00,$04,$92                                                                     ;
 $A4EA DEFB $49,$01,$80                                                                     ;
 $A4ED DEFB $00,$00,$00                                                                     ;
 $A4F0 DEFB $00,$0C,$00                                                                     ;
 $A4F3 DEFB $00,$94,$92                                                                     ;
 $A4F6 DEFB $49,$21,$80                                                                     ;
 $A4F9 DEFB $00,$00,$09                                                                     ;
 $A4FC DEFB $2D,$BC,$00                                                                     ;
 $A4FF DEFB $00,$94,$92                                                                     ;
 $A502 DEFB $49,$24,$92                                                                     ;
 $A505 DEFB $49,$24,$89                                                                     ;
 $A508 DEFB $20,$0C,$00                                                                     ;
 $A50B DEFB $00,$92,$92                                                                     ;
 $A50E DEFB $49,$24,$92                                                                     ;
 $A511 DEFB $49,$24,$89                                                                     ;
 $A514 DEFB $20,$0C,$00                                                                     ;
 $A517 DEFB $00,$92,$92                                                                     ; }
 $A51A DEFB $72,$01,$05,$02                                                                 ; Wall
                                                                                            ; attributes
 $A51E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $A520 DEFB $04                                                                             ; Next room
                                                                                            ; UP
 $A521 DEFB $06                                                                             ; Next room
                                                                                            ; DOWN
 $A522 DEFB $05                                                                             ; Next room
                                                                                            ; LEFT
 $A523 DEFB $05                                                                             ; Next room
                                                                                            ; RIGHT
 $A524 DEFB $78                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $A525 DEFB $8F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $A526 DEFB $0C                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $A527 DEFB $0E                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $A528 DEFB $41                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $A529 DEFB $30
 $A52A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $A52B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $A52C DEFB $41
 $A52D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $A535 DEFB $00,$00
 $A537 DEFB $00,$00,$38,$7C,$BC,$CA,$F6,$6C                                                 ; Coal UDG
 $A53F DEFB $0D,$03,$07                                                                     ; {Coal
 $A542 DEFB $0E,$0D,$11                                                                     ; positions
 $A545 DEFB $00,$00,$00                                                                     ; }
 $A548 DEFB $00,$00,$00,$00,$00,$00
 $A54E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $A557 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $A560 DEFB $02,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $A569 DEFB $45,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $A572 DEFB $42,$FF,$7F,$3C,$70,$B0,$60,$00,$00                                             ;
 $A57B DEFB $44,$10,$54,$A5,$A9,$5A,$3C,$FC,$18                                             ;
 $A584 DEFB $05,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $A58D DEFB $42,$FF,$FE,$3C,$0E,$0D,$06,$00,$00                                             ; }
 $A596 DEFB $00,$00,$65,$00,$65,$00,$65,$00,$65,$42,$00,$00,$18,$7F,$14,$05,$14,$00,$00,$00 ; {Nasty
 $A5AA DEFB $00,$80,$A0,$80,$A0,$00,$68,$80,$68,$44,$01,$02,$E8,$8F,$14,$03,$14,$02,$00,$00 ; data
 $A5BE DEFB $02,$00,$64,$00,$64,$80,$FF,$80,$FF,$40,$02,$00,$D0,$5F,$10,$07,$10,$00,$00,$00 ;
 $A5D2 DEFB $03,$00,$6F,$00,$6F,$80,$FF,$80,$FF,$40,$04,$01,$A8,$AF,$48,$00,$48,$02,$00,$00 ;
 $A5E6 DEFB $02,$80,$77,$80,$77,$80,$FF,$80,$FF,$40,$03,$00,$A8,$1F,$48,$00,$48,$00,$00,$00 ;
 $A5FA DEFB $03,$80,$FF,$80,$FF,$80,$FF,$80,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $A60E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $A622 DEFB $00,$00,$00,$04,$08,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 06
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_06)
b$A62A DEFB $49,$24,$49                                                                     ; {Static
 $A62D DEFB $24,$A4,$49                                                                     ; characters
 $A630 DEFB $20,$0C,$00                                                                     ;
 $A633 DEFB $00,$94,$92                                                                     ;
 $A636 DEFB $49,$24,$89                                                                     ;
 $A639 DEFB $29,$24,$49                                                                     ;
 $A63C DEFB $20,$00,$00                                                                     ;
 $A63F DEFB $00,$94,$92                                                                     ;
 $A642 DEFB $49,$22,$49                                                                     ;
 $A645 DEFB $24,$92,$49                                                                     ;
 $A648 DEFB $20,$00,$00                                                                     ;
 $A64B DEFB $00,$A4,$92                                                                     ;
 $A64E DEFB $49,$22,$48                                                                     ;
 $A651 DEFB $00,$00,$00                                                                     ;
 $A654 DEFB $20,$36,$C0                                                                     ;
 $A657 DEFB $00,$A4,$92                                                                     ;
 $A65A DEFB $49,$22,$48                                                                     ;
 $A65D DEFB $00,$00,$00                                                                     ;
 $A660 DEFB $20,$01,$80                                                                     ;
 $A663 DEFB $00,$94,$92                                                                     ;
 $A666 DEFB $49,$22,$48                                                                     ;
 $A669 DEFB $00,$00,$00                                                                     ;
 $A66C DEFB $20,$01,$80                                                                     ;
 $A66F DEFB $00,$94,$92                                                                     ;
 $A672 DEFB $49,$22,$48                                                                     ;
 $A675 DEFB $00,$00,$00                                                                     ;
 $A678 DEFB $20,$01,$9B                                                                     ;
 $A67B DEFB $6C,$92,$92                                                                     ;
 $A67E DEFB $49,$22,$48                                                                     ;
 $A681 DEFB $00,$00,$00                                                                     ;
 $A684 DEFB $20,$01,$80                                                                     ;
 $A687 DEFB $00,$92,$92                                                                     ;
 $A68A DEFB $49,$22,$88                                                                     ;
 $A68D DEFB $00,$00,$00                                                                     ;
 $A690 DEFB $20,$01,$80                                                                     ;
 $A693 DEFB $00,$92,$92                                                                     ;
 $A696 DEFB $49,$24,$88                                                                     ;
 $A699 DEFB $03,$00,$00                                                                     ;
 $A69C DEFB $20,$01,$80                                                                     ;
 $A69F DEFB $00,$92,$92                                                                     ;
 $A6A2 DEFB $49,$22,$48                                                                     ;
 $A6A5 DEFB $03,$36,$C9                                                                     ;
 $A6A8 DEFB $24,$81,$81                                                                     ;
 $A6AB DEFB $24,$92,$92                                                                     ;
 $A6AE DEFB $49,$22,$48                                                                     ;
 $A6B1 DEFB $03,$00,$09                                                                     ;
 $A6B4 DEFB $24,$81,$81                                                                     ;
 $A6B7 DEFB $24,$92,$92                                                                     ;
 $A6BA DEFB $49,$22,$48                                                                     ;
 $A6BD DEFB $03,$00,$09                                                                     ;
 $A6C0 DEFB $24,$91,$81                                                                     ;
 $A6C3 DEFB $28,$94,$92                                                                     ;
 $A6C6 DEFB $49,$22,$48                                                                     ;
 $A6C9 DEFB $03,$00,$09                                                                     ;
 $A6CC DEFB $29,$21,$82                                                                     ;
 $A6CF DEFB $49,$24,$92                                                                     ;
 $A6D2 DEFB $49,$22,$48                                                                     ;
 $A6D5 DEFB $03,$00,$09                                                                     ;
 $A6D8 DEFB $29,$21,$82                                                                     ;
 $A6DB DEFB $48,$00,$92                                                                     ;
 $A6DE DEFB $49,$24,$48                                                                     ;
 $A6E1 DEFB $03,$00,$09                                                                     ;
 $A6E4 DEFB $29,$21,$82                                                                     ;
 $A6E7 DEFB $00,$00,$12                                                                     ;
 $A6EA DEFB $49,$22,$48                                                                     ;
 $A6ED DEFB $03,$00,$09                                                                     ;
 $A6F0 DEFB $29,$21,$80                                                                     ;
 $A6F3 DEFB $00,$00,$12                                                                     ;
 $A6F6 DEFB $49,$24,$48                                                                     ;
 $A6F9 DEFB $03,$00,$09                                                                     ;
 $A6FC DEFB $29,$21,$80                                                                     ;
 $A6FF DEFB $02,$49,$12                                                                     ;
 $A702 DEFB $49,$22,$48                                                                     ;
 $A705 DEFB $03,$00,$09                                                                     ;
 $A708 DEFB $29,$21,$80                                                                     ;
 $A70B DEFB $00,$00,$12                                                                     ;
 $A70E DEFB $49,$22,$48                                                                     ;
 $A711 DEFB $03,$00,$09                                                                     ;
 $A714 DEFB $29,$24,$92                                                                     ;
 $A717 DEFB $49,$24,$92                                                                     ; }
 $A71A DEFB $72,$44,$05,$02                                                                 ; Wall
                                                                                            ; attributes
 $A71E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $A720 DEFB $05                                                                             ; Next room
                                                                                            ; UP
 $A721 DEFB $07                                                                             ; Next room
                                                                                            ; DOWN
 $A722 DEFB $06                                                                             ; Next room
                                                                                            ; LEFT
 $A723 DEFB $06                                                                             ; Next room
                                                                                            ; RIGHT
 $A724 DEFB $E0                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $A725 DEFB $37                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $A726 DEFB $05                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $A727 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $A728 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $A729 DEFB $68
 $A72A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $A72B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $A72C DEFB $99
 $A72D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $A735 DEFB $00,$00
 $A737 DEFB $00,$00,$38,$7C,$BC,$CA,$F6,$6C                                                 ; Coal UDG
 $A73F DEFB $0F,$1B,$10                                                                     ; {Coal
 $A742 DEFB $00,$00,$00                                                                     ; positions
 $A745 DEFB $00,$00,$00                                                                     ; }
 $A748 DEFB $00,$00,$00,$00,$00,$00
 $A74E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $A757 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $A760 DEFB $02,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $A769 DEFB $45,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $A772 DEFB $42,$FF,$7F,$3C,$70,$B0,$60,$00,$00                                             ;
 $A77B DEFB $44,$10,$54,$A5,$A9,$5A,$3C,$FC,$18                                             ;
 $A784 DEFB $05,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $A78D DEFB $42,$FF,$FE,$3C,$0E,$0D,$06,$00,$00                                             ; }
 $A796 DEFB $02,$80,$FF,$80,$FF,$00,$69,$00,$69,$40,$01,$03,$38,$6F,$10,$00,$10,$00,$00,$00 ; {Nasty
 $A7AA DEFB $03,$80,$FF,$80,$FF,$00,$6D,$00,$6D,$40,$02,$03,$38,$6F,$88,$00,$88,$01,$00,$00 ; data
 $A7BE DEFB $03,$80,$FF,$80,$FF,$00,$69,$00,$69,$40,$03,$02,$C0,$6F,$2C,$05,$2C,$00,$00,$00 ;
 $A7D2 DEFB $03,$00,$B4,$00,$B4,$80,$77,$80,$77,$00,$00,$02,$C0,$6F,$1C,$04,$1C,$00,$00,$00 ;
 $A7E6 DEFB $00,$00,$65,$00,$65,$80,$A1,$80,$A1,$42,$04,$01,$40,$3F,$04,$03,$04,$00,$00,$00 ;
 $A7FA DEFB $03,$00,$9D,$80,$9C,$00,$A1,$80,$A0,$40,$00,$01,$00,$AF,$00,$00,$00,$00,$00,$00 ;
 $A80E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $A822 DEFB $00,$00,$00,$00,$00,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 07
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_07)
b$A82A DEFB $49,$24,$48                                                                     ; {Static
 $A82D DEFB $03,$00,$09                                                                     ; characters
 $A830 DEFB $49,$24,$92                                                                     ;
 $A833 DEFB $49,$24,$92                                                                     ;
 $A836 DEFB $49,$24,$88                                                                     ;
 $A839 DEFB $03,$00,$09                                                                     ;
 $A83C DEFB $49,$24,$92                                                                     ;
 $A83F DEFB $49,$24,$92                                                                     ;
 $A842 DEFB $49,$22,$88                                                                     ;
 $A845 DEFB $03,$00,$0A                                                                     ;
 $A848 DEFB $24,$94,$89                                                                     ;
 $A84B DEFB $24,$94,$89                                                                     ;
 $A84E DEFB $49,$24,$88                                                                     ;
 $A851 DEFB $03,$00,$09                                                                     ;
 $A854 DEFB $24,$92,$49                                                                     ;
 $A857 DEFB $24,$94,$49                                                                     ;
 $A85A DEFB $49,$22,$88                                                                     ;
 $A85D DEFB $03,$00,$00                                                                     ;
 $A860 DEFB $00,$01,$80                                                                     ;
 $A863 DEFB $00,$90,$00                                                                     ;
 $A866 DEFB $49,$22,$48                                                                     ;
 $A869 DEFB $03,$00,$00                                                                     ;
 $A86C DEFB $00,$01,$80                                                                     ;
 $A86F DEFB $00,$90,$00                                                                     ;
 $A872 DEFB $49,$22,$48                                                                     ;
 $A875 DEFB $03,$00,$00                                                                     ;
 $A878 DEFB $00,$01,$9B                                                                     ;
 $A87B DEFB $6C,$90,$00                                                                     ;
 $A87E DEFB $49,$24,$4B                                                                     ;
 $A881 DEFB $6D,$80,$00                                                                     ;
 $A884 DEFB $00,$01,$80                                                                     ;
 $A887 DEFB $00,$90,$00                                                                     ;
 $A88A DEFB $49,$24,$88                                                                     ;
 $A88D DEFB $00,$00,$00                                                                     ;
 $A890 DEFB $00,$01,$80                                                                     ;
 $A893 DEFB $00,$00,$00                                                                     ;
 $A896 DEFB $49,$24,$88                                                                     ;
 $A899 DEFB $03,$00,$00                                                                     ;
 $A89C DEFB $00,$01,$80                                                                     ;
 $A89F DEFB $00,$00,$00                                                                     ;
 $A8A2 DEFB $49,$24,$48                                                                     ;
 $A8A5 DEFB $03,$36,$C9                                                                     ;
 $A8A8 DEFB $2D,$81,$80                                                                     ;
 $A8AB DEFB $00,$00,$00                                                                     ;
 $A8AE DEFB $49,$24,$48                                                                     ;
 $A8B1 DEFB $03,$00,$09                                                                     ;
 $A8B4 DEFB $20,$01,$80                                                                     ;
 $A8B7 DEFB $00,$00,$00                                                                     ;
 $A8BA DEFB $49,$24,$48                                                                     ;
 $A8BD DEFB $03,$00,$09                                                                     ;
 $A8C0 DEFB $20,$01,$80                                                                     ;
 $A8C3 DEFB $00,$00,$00                                                                     ;
 $A8C6 DEFB $49,$22,$48                                                                     ;
 $A8C9 DEFB $03,$00,$09                                                                     ;
 $A8CC DEFB $20,$01,$80                                                                     ;
 $A8CF DEFB $00,$00,$09                                                                     ;
 $A8D2 DEFB $49,$22,$48                                                                     ;
 $A8D5 DEFB $03,$00,$09                                                                     ;
 $A8D8 DEFB $20,$01,$80                                                                     ;
 $A8DB DEFB $00,$02,$49                                                                     ;
 $A8DE DEFB $49,$24,$88                                                                     ;
 $A8E1 DEFB $03,$00,$09                                                                     ;
 $A8E4 DEFB $20,$01,$80                                                                     ;
 $A8E7 DEFB $00,$92,$49                                                                     ;
 $A8EA DEFB $49,$24,$88                                                                     ;
 $A8ED DEFB $03,$00,$09                                                                     ;
 $A8F0 DEFB $20,$01,$80                                                                     ;
 $A8F3 DEFB $24,$92,$49                                                                     ;
 $A8F6 DEFB $49,$24,$88                                                                     ;
 $A8F9 DEFB $03,$00,$09                                                                     ;
 $A8FC DEFB $20,$01,$80                                                                     ;
 $A8FF DEFB $00,$00,$00                                                                     ;
 $A902 DEFB $49,$22,$88                                                                     ;
 $A905 DEFB $03,$00,$09                                                                     ;
 $A908 DEFB $20,$01,$80                                                                     ;
 $A90B DEFB $00,$00,$00                                                                     ;
 $A90E DEFB $49,$22,$49                                                                     ;
 $A911 DEFB $24,$92,$49                                                                     ;
 $A914 DEFB $24,$92,$49                                                                     ;
 $A917 DEFB $24,$92,$49                                                                     ; }
 $A91A DEFB $72,$44,$04,$42                                                                 ; Wall
                                                                                            ; attributes
 $A91E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $A920 DEFB $06                                                                             ; Next room
                                                                                            ; UP
 $A921 DEFB $07                                                                             ; Next room
                                                                                            ; DOWN
 $A922 DEFB $07                                                                             ; Next room
                                                                                            ; LEFT
 $A923 DEFB $08                                                                             ; Next room
                                                                                            ; RIGHT
 $A924 DEFB $90                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $A925 DEFB $27                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $A926 DEFB $06                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $A927 DEFB $0E                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $A928 DEFB $91                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $A929 DEFB $68
 $A92A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $A92B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $A92C DEFB $91
 $A92D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $A935 DEFB $00,$00
 $A937 DEFB $00,$06,$77,$ED,$DB,$D7,$DA,$6E                                                 ; Coal UDG
 $A93F DEFB $10,$08,$14                                                                     ; {Coal
 $A942 DEFB $11,$0C,$14                                                                     ; positions
 $A945 DEFB $12,$18,$07                                                                     ; }
 $A948 DEFB $13,$1C,$14,$00,$00,$00
 $A94E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $A957 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $A960 DEFB $42,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $A969 DEFB $45,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $A972 DEFB $42,$FF,$7F,$3C,$70,$B0,$60,$00,$00                                             ;
 $A97B DEFB $44,$10,$54,$A5,$A9,$5A,$3C,$FC,$18                                             ;
 $A984 DEFB $04,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $A98D DEFB $42,$FF,$FE,$3C,$0E,$0D,$06,$00,$00                                             ; }
 $A996 DEFB $00,$80,$6A,$80,$6A,$83,$02,$83,$02,$45,$00,$00,$C0,$27,$18,$03,$18,$00,$03,$03 ; {Nasty
 $A9AA DEFB $03,$00,$6F,$00,$6F,$83,$02,$83,$02,$40,$02,$01,$50,$AF,$44,$03,$44,$02,$03,$03 ; data
 $A9BE DEFB $02,$80,$77,$80,$77,$83,$02,$83,$02,$40,$01,$00,$50,$27,$28,$03,$28,$00,$03,$03 ;
 $A9D2 DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $A9E6 DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $A9FA DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $AA0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $AA22 DEFB $00,$00,$00,$00,$00,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 08
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_08)
b$AA2A DEFB $49,$24,$92                                                                     ; {Static
 $AA2D DEFB $49,$24,$92                                                                     ; characters
 $AA30 DEFB $49,$24,$92                                                                     ;
 $AA33 DEFB $49,$24,$92                                                                     ;
 $AA36 DEFB $49,$24,$92                                                                     ;
 $AA39 DEFB $49,$24,$92                                                                     ;
 $AA3C DEFB $49,$24,$92                                                                     ;
 $AA3F DEFB $49,$24,$92                                                                     ;
 $AA42 DEFB $24,$92,$49                                                                     ;
 $AA45 DEFB $49,$24,$49                                                                     ;
 $AA48 DEFB $24,$92,$49                                                                     ;
 $AA4B DEFB $49,$12,$52                                                                     ;
 $AA4E DEFB $24,$92,$52                                                                     ;
 $AA51 DEFB $49,$24,$89                                                                     ;
 $AA54 DEFB $24,$92,$49                                                                     ;
 $AA57 DEFB $24,$92,$4A                                                                     ;
 $AA5A DEFB $00,$00,$00                                                                     ;
 $AA5D DEFB $00,$00,$00                                                                     ;
 $AA60 DEFB $00,$00,$00                                                                     ;
 $AA63 DEFB $00,$92,$92                                                                     ;
 $AA66 DEFB $00,$00,$00                                                                     ;
 $AA69 DEFB $00,$00,$00                                                                     ;
 $AA6C DEFB $00,$00,$00                                                                     ;
 $AA6F DEFB $00,$62,$49                                                                     ;
 $AA72 DEFB $00,$00,$00                                                                     ;
 $AA75 DEFB $00,$00,$00                                                                     ;
 $AA78 DEFB $00,$00,$00                                                                     ;
 $AA7B DEFB $00,$60,$49                                                                     ;
 $AA7E DEFB $00,$00,$00                                                                     ;
 $AA81 DEFB $00,$00,$00                                                                     ;
 $AA84 DEFB $2D,$B6,$C0                                                                     ;
 $AA87 DEFB $00,$60,$09                                                                     ;
 $AA8A DEFB $00,$00,$00                                                                     ;
 $AA8D DEFB $00,$00,$01                                                                     ;
 $AA90 DEFB $20,$00,$00                                                                     ;
 $AA93 DEFB $00,$60,$09                                                                     ;
 $AA96 DEFB $00,$00,$00                                                                     ;
 $AA99 DEFB $00,$00,$09                                                                     ;
 $AA9C DEFB $20,$00,$00                                                                     ;
 $AA9F DEFB $00,$60,$01                                                                     ;
 $AAA2 DEFB $00,$00,$00                                                                     ;
 $AAA5 DEFB $00,$00,$49                                                                     ;
 $AAA8 DEFB $20,$00,$3F                                                                     ;
 $AAAB DEFB $FF,$E0,$01                                                                     ;
 $AAAE DEFB $00,$10,$00                                                                     ;
 $AAB1 DEFB $00,$02,$49                                                                     ;
 $AAB4 DEFB $20,$00,$00                                                                     ;
 $AAB7 DEFB $00,$60,$01                                                                     ;
 $AABA DEFB $00,$90,$00                                                                     ;
 $AABD DEFB $00,$00,$00                                                                     ;
 $AAC0 DEFB $00,$00,$00                                                                     ;
 $AAC3 DEFB $00,$60,$01                                                                     ;
 $AAC6 DEFB $24,$90,$00                                                                     ;
 $AAC9 DEFB $00,$00,$00                                                                     ;
 $AACC DEFB $00,$00,$00                                                                     ;
 $AACF DEFB $00,$60,$00                                                                     ;
 $AAD2 DEFB $24,$80,$00                                                                     ;
 $AAD5 DEFB $00,$00,$00                                                                     ;
 $AAD8 DEFB $00,$00,$00                                                                     ;
 $AADB DEFB $00,$00,$00                                                                     ;
 $AADE DEFB $24,$80,$00                                                                     ;
 $AAE1 DEFB $00,$00,$00                                                                     ;
 $AAE4 DEFB $00,$00,$00                                                                     ;
 $AAE7 DEFB $00,$00,$00                                                                     ;
 $AAEA DEFB $24,$00,$00                                                                     ;
 $AAED DEFB $00,$00,$00                                                                     ;
 $AAF0 DEFB $00,$00,$00                                                                     ;
 $AAF3 DEFB $00,$00,$00                                                                     ;
 $AAF6 DEFB $00,$00,$00                                                                     ;
 $AAF9 DEFB $24,$DB,$6D                                                                     ;
 $AAFC DEFB $24,$80,$00                                                                     ;
 $AAFF DEFB $00,$00,$00                                                                     ;
 $AB02 DEFB $00,$00,$49                                                                     ;
 $AB05 DEFB $24,$C9,$24                                                                     ;
 $AB08 DEFB $24,$92,$40                                                                     ;
 $AB0B DEFB $00,$00,$00                                                                     ;
 $AB0E DEFB $24,$92,$49                                                                     ;
 $AB11 DEFB $24,$92,$49                                                                     ;
 $AB14 DEFB $24,$92,$49                                                                     ;
 $AB17 DEFB $24,$92,$49                                                                     ; }
 $AB1A DEFB $72,$45,$44,$42                                                                 ; Wall
                                                                                            ; attributes
 $AB1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $AB20 DEFB $08                                                                             ; Next room
                                                                                            ; UP
 $AB21 DEFB $08                                                                             ; Next room
                                                                                            ; DOWN
 $AB22 DEFB $07                                                                             ; Next room
                                                                                            ; LEFT
 $AB23 DEFB $09                                                                             ; Next room
                                                                                            ; RIGHT
 $AB24 DEFB $90                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $AB25 DEFB $87                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $AB26 DEFB $07                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $AB27 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $AB28 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $AB29 DEFB $60
 $AB2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $AB2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $AB2C DEFB $00
 $AB2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $AB35 DEFB $00,$00
 $AB37 DEFB $00,$00,$18,$3C,$2C,$18,$00,$7E                                                 ; Coal UDG
 $AB3F DEFB $14,$08,$0A                                                                     ; {Coal
 $AB42 DEFB $15,$06,$13                                                                     ; positions
 $AB45 DEFB $00,$00,$00                                                                     ; }
 $AB48 DEFB $00,$00,$00,$00,$00,$00
 $AB4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $AB57 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $AB60 DEFB $42,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $AB69 DEFB $46,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $AB72 DEFB $45,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF                                             ;
 $AB7B DEFB $45,$00,$00,$10,$3C,$7F,$FF,$FF,$FF                                             ;
 $AB84 DEFB $44,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $AB8D DEFB $46,$FF,$FF,$3C,$18,$34,$3C,$18,$00                                             ; }
 $AB96 DEFB $00,$00,$6A,$00,$6A,$83,$02,$83,$02,$46,$00,$00,$C8,$6F,$0C,$03,$0C,$00,$03,$03 ; {Nasty
 $ABAA DEFB $02,$00,$6F,$00,$6F,$83,$02,$83,$02,$40,$02,$01,$38,$8F,$2C,$03,$2C,$02,$03,$03 ; data
 $ABBE DEFB $03,$00,$6F,$00,$6F,$83,$02,$83,$02,$40,$01,$00,$38,$37,$58,$03,$58,$01,$03,$03 ;
 $ABD2 DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $ABE6 DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $ABFA DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $AC0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $AC22 DEFB $20,$57,$20,$40,$60,$57,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 09
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_09)
b$AC2A DEFB $49,$24,$92                                                                     ; {Static
 $AC2D DEFB $49,$24,$92                                                                     ; characters
 $AC30 DEFB $49,$24,$92                                                                     ;
 $AC33 DEFB $49,$24,$92                                                                     ;
 $AC36 DEFB $49,$24,$92                                                                     ;
 $AC39 DEFB $49,$24,$92                                                                     ;
 $AC3C DEFB $49,$24,$92                                                                     ;
 $AC3F DEFB $49,$24,$92                                                                     ;
 $AC42 DEFB $44,$92,$49                                                                     ;
 $AC45 DEFB $24,$92,$49                                                                     ;
 $AC48 DEFB $24,$92,$49                                                                     ;
 $AC4B DEFB $24,$92,$49                                                                     ;
 $AC4E DEFB $48,$92,$00                                                                     ;
 $AC51 DEFB $00,$00,$00                                                                     ;
 $AC54 DEFB $24,$92,$40                                                                     ;
 $AC57 DEFB $00,$00,$00                                                                     ;
 $AC5A DEFB $29,$10,$00                                                                     ;
 $AC5D DEFB $00,$00,$00                                                                     ;
 $AC60 DEFB $00,$60,$00                                                                     ;
 $AC63 DEFB $00,$00,$00                                                                     ;
 $AC66 DEFB $24,$80,$00                                                                     ;
 $AC69 DEFB $00,$00,$00                                                                     ;
 $AC6C DEFB $00,$60,$07                                                                     ;
 $AC6F DEFB $FC,$00,$00                                                                     ;
 $AC72 DEFB $24,$00,$00                                                                     ;
 $AC75 DEFB $00,$00,$00                                                                     ;
 $AC78 DEFB $00,$60,$06                                                                     ;
 $AC7B DEFB $00,$00,$00                                                                     ;
 $AC7E DEFB $27,$FF,$F8                                                                     ;
 $AC81 DEFB $00,$01,$FF                                                                     ;
 $AC84 DEFB $FC,$60,$06                                                                     ;
 $AC87 DEFB $1F,$80,$00                                                                     ;
 $AC8A DEFB $20,$00,$00                                                                     ;
 $AC8D DEFB $18,$00,$00                                                                     ;
 $AC90 DEFB $00,$60,$06                                                                     ;
 $AC93 DEFB $00,$00,$00                                                                     ;
 $AC96 DEFB $20,$00,$00                                                                     ;
 $AC99 DEFB $18,$00,$00                                                                     ;
 $AC9C DEFB $00,$60,$06                                                                     ;
 $AC9F DEFB $00,$00,$00                                                                     ;
 $ACA2 DEFB $20,$00,$00                                                                     ;
 $ACA5 DEFB $18,$00,$00                                                                     ;
 $ACA8 DEFB $00,$60,$06                                                                     ;
 $ACAB DEFB $01,$B6,$DB                                                                     ;
 $ACAE DEFB $24,$00,$00                                                                     ;
 $ACB1 DEFB $18,$00,$00                                                                     ;
 $ACB4 DEFB $00,$60,$06                                                                     ;
 $ACB7 DEFB $00,$00,$00                                                                     ;
 $ACBA DEFB $24,$92,$4F                                                                     ;
 $ACBD DEFB $FC,$00,$00                                                                     ;
 $ACC0 DEFB $00,$00,$1B                                                                     ;
 $ACC3 DEFB $6C,$00,$00                                                                     ;
 $ACC6 DEFB $00,$00,$06                                                                     ;
 $ACC9 DEFB $00,$00,$00                                                                     ;
 $ACCC DEFB $00,$00,$00                                                                     ;
 $ACCF DEFB $00,$00,$00                                                                     ;
 $ACD2 DEFB $00,$00,$06                                                                     ;
 $ACD5 DEFB $00,$02,$40                                                                     ;
 $ACD8 DEFB $01,$B6,$C0                                                                     ;
 $ACDB DEFB $00,$00,$00                                                                     ;
 $ACDE DEFB $00,$00,$06                                                                     ;
 $ACE1 DEFB $00,$02,$6D                                                                     ;
 $ACE4 DEFB $B6,$DB,$6D                                                                     ;
 $ACE7 DEFB $B6,$DB,$6D                                                                     ;
 $ACEA DEFB $00,$00,$06                                                                     ;
 $ACED DEFB $00,$02,$64                                                                     ;
 $ACF0 DEFB $92,$49,$24                                                                     ;
 $ACF3 DEFB $92,$49,$24                                                                     ;
 $ACF6 DEFB $00,$00,$00                                                                     ;
 $ACF9 DEFB $00,$02,$4C                                                                     ;
 $ACFC DEFB $92,$49,$24                                                                     ;
 $ACFF DEFB $92,$49,$24                                                                     ;
 $AD02 DEFB $00,$00,$00                                                                     ;
 $AD05 DEFB $04,$92,$49                                                                     ;
 $AD08 DEFB $92,$49,$24                                                                     ;
 $AD0B DEFB $92,$49,$24                                                                     ;
 $AD0E DEFB $24,$92,$49                                                                     ;
 $AD11 DEFB $24,$92,$49                                                                     ;
 $AD14 DEFB $24,$92,$49                                                                     ;
 $AD17 DEFB $24,$92,$49                                                                     ; }
 $AD1A DEFB $72,$45,$44,$42                                                                 ; Wall
                                                                                            ; attributes
 $AD1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $AD20 DEFB $09                                                                             ; Next room
                                                                                            ; UP
 $AD21 DEFB $09                                                                             ; Next room
                                                                                            ; DOWN
 $AD22 DEFB $08                                                                             ; Next room
                                                                                            ; LEFT
 $AD23 DEFB $0A                                                                             ; Next room
                                                                                            ; RIGHT
 $AD24 DEFB $C0                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $AD25 DEFB $97                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $AD26 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $AD27 DEFB $04                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $AD28 DEFB $49                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $AD29 DEFB $20
 $AD2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $AD2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $AD2C DEFB $49
 $AD2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $AD35 DEFB $00,$00
 $AD37 DEFB $00,$06,$77,$ED,$DB,$D7,$DA,$6E                                                 ; Coal UDG
 $AD3F DEFB $16,$09,$06                                                                     ; {Coal
 $AD42 DEFB $17,$15,$0F                                                                     ; positions
 $AD45 DEFB $00,$00,$00                                                                     ; }
 $AD48 DEFB $00,$00,$00,$00,$00,$00
 $AD4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $AD57 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $AD60 DEFB $42,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $AD69 DEFB $46,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $AD72 DEFB $45,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF                                             ;
 $AD7B DEFB $45,$00,$00,$10,$3C,$7F,$FF,$FF,$FF                                             ;
 $AD84 DEFB $44,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $AD8D DEFB $46,$FF,$FF,$3C,$18,$34,$3C,$18,$00                                             ; }
 $AD96 DEFB $02,$00,$72,$00,$72,$83,$02,$83,$02,$40,$01,$00,$A0,$37,$28,$03,$28,$01,$03,$03 ; {Nasty
 $ADAA DEFB $03,$00,$73,$00,$73,$83,$02,$83,$02,$40,$02,$01,$A0,$5F,$09,$03,$04,$00,$03,$03 ; data
 $ADBE DEFB $03,$00,$74,$00,$74,$83,$02,$83,$02,$40,$00,$01,$A0,$5F,$28,$03,$28,$01,$03,$03 ;
 $ADD2 DEFB $02,$80,$72,$80,$72,$83,$02,$83,$02,$40,$04,$00,$A0,$27,$28,$03,$28,$01,$03,$03 ;
 $ADE6 DEFB $03,$80,$73,$80,$73,$83,$02,$83,$02,$40,$05,$01,$A0,$4F,$09,$03,$04,$00,$03,$03 ;
 $ADFA DEFB $03,$80,$74,$80,$74,$83,$02,$83,$02,$40,$03,$01,$A0,$4F,$28,$03,$28,$01,$03,$03 ;
 $AE0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $AE22 DEFB $38,$77,$38,$50,$68,$77,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 0A
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_0A)
b$AE2A DEFB $49,$24,$92                                                                     ; {Static
 $AE2D DEFB $49,$24,$92                                                                     ; characters
 $AE30 DEFB $49,$24,$92                                                                     ;
 $AE33 DEFB $49,$24,$92                                                                     ;
 $AE36 DEFB $49,$24,$92                                                                     ;
 $AE39 DEFB $49,$24,$92                                                                     ;
 $AE3C DEFB $49,$24,$92                                                                     ;
 $AE3F DEFB $49,$24,$92                                                                     ;
 $AE42 DEFB $48,$92,$49                                                                     ;
 $AE45 DEFB $24,$92,$49                                                                     ;
 $AE48 DEFB $49,$12,$49                                                                     ;
 $AE4B DEFB $24,$94,$51                                                                     ;
 $AE4E DEFB $24,$92,$00                                                                     ;
 $AE51 DEFB $00,$00,$49                                                                     ;
 $AE54 DEFB $24,$92,$49                                                                     ;
 $AE57 DEFB $24,$A4,$49                                                                     ;
 $AE5A DEFB $00,$00,$00                                                                     ;
 $AE5D DEFB $00,$00,$00                                                                     ;
 $AE60 DEFB $00,$00,$00                                                                     ;
 $AE63 DEFB $00,$00,$00                                                                     ;
 $AE66 DEFB $00,$00,$00                                                                     ;
 $AE69 DEFB $00,$00,$00                                                                     ;
 $AE6C DEFB $00,$00,$00                                                                     ;
 $AE6F DEFB $00,$00,$00                                                                     ;
 $AE72 DEFB $00,$00,$00                                                                     ;
 $AE75 DEFB $00,$00,$00                                                                     ;
 $AE78 DEFB $00,$00,$00                                                                     ;
 $AE7B DEFB $00,$00,$00                                                                     ;
 $AE7E DEFB $00,$00,$3F                                                                     ;
 $AE81 DEFB $FF,$F0,$00                                                                     ;
 $AE84 DEFB $00,$00,$00                                                                     ;
 $AE87 DEFB $00,$00,$00                                                                     ;
 $AE8A DEFB $00,$00,$00                                                                     ;
 $AE8D DEFB $C0,$00,$00                                                                     ;
 $AE90 DEFB $00,$00,$00                                                                     ;
 $AE93 DEFB $00,$00,$00                                                                     ;
 $AE96 DEFB $00,$00,$00                                                                     ;
 $AE99 DEFB $C0,$00,$00                                                                     ;
 $AE9C DEFB $00,$00,$00                                                                     ;
 $AE9F DEFB $00,$92,$49                                                                     ;
 $AEA2 DEFB $6D,$B6,$00                                                                     ;
 $AEA5 DEFB $C0,$0F,$F8                                                                     ;
 $AEA8 DEFB $00,$00,$00                                                                     ;
 $AEAB DEFB $00,$12,$49                                                                     ;
 $AEAE DEFB $00,$00,$00                                                                     ;
 $AEB1 DEFB $C0,$00,$00                                                                     ;
 $AEB4 DEFB $00,$00,$00                                                                     ;
 $AEB7 DEFB $00,$00,$09                                                                     ;
 $AEBA DEFB $00,$00,$00                                                                     ;
 $AEBD DEFB $C0,$00,$03                                                                     ;
 $AEC0 DEFB $6D,$B2,$00                                                                     ;
 $AEC3 DEFB $00,$00,$00                                                                     ;
 $AEC6 DEFB $00,$00,$DB                                                                     ;
 $AEC9 DEFB $60,$00,$00                                                                     ;
 $AECC DEFB $00,$02,$40                                                                     ;
 $AECF DEFB $00,$00,$00                                                                     ;
 $AED2 DEFB $00,$00,$00                                                                     ;
 $AED5 DEFB $00,$00,$00                                                                     ;
 $AED8 DEFB $00,$02,$48                                                                     ;
 $AEDB DEFB $00,$00,$00                                                                     ;
 $AEDE DEFB $B6,$DB,$6D                                                                     ;
 $AEE1 DEFB $B6,$DB,$6D                                                                     ;
 $AEE4 DEFB $B6,$D2,$49                                                                     ;
 $AEE7 DEFB $00,$00,$00                                                                     ;
 $AEEA DEFB $92,$49,$24                                                                     ;
 $AEED DEFB $92,$49,$24                                                                     ;
 $AEF0 DEFB $92,$12,$49                                                                     ;
 $AEF3 DEFB $00,$00,$00                                                                     ;
 $AEF6 DEFB $92,$49,$24                                                                     ;
 $AEF9 DEFB $92,$49,$24                                                                     ;
 $AEFC DEFB $92,$12,$49                                                                     ;
 $AEFF DEFB $24,$00,$00                                                                     ;
 $AF02 DEFB $92,$49,$24                                                                     ;
 $AF05 DEFB $92,$49,$24                                                                     ;
 $AF08 DEFB $90,$92,$49                                                                     ;
 $AF0B DEFB $24,$80,$00                                                                     ;
 $AF0E DEFB $24,$92,$49                                                                     ;
 $AF11 DEFB $24,$92,$49                                                                     ;
 $AF14 DEFB $24,$92,$49                                                                     ;
 $AF17 DEFB $24,$92,$49                                                                     ; }
 $AF1A DEFB $72,$45,$04,$42                                                                 ; Wall
                                                                                            ; attributes
 $AF1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $AF20 DEFB $0A                                                                             ; Next room
                                                                                            ; UP
 $AF21 DEFB $0A                                                                             ; Next room
                                                                                            ; DOWN
 $AF22 DEFB $09                                                                             ; Next room
                                                                                            ; LEFT
 $AF23 DEFB $0B                                                                             ; Next room
                                                                                            ; RIGHT
 $AF24 DEFB $18                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $AF25 DEFB $6F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $AF26 DEFB $09                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $AF27 DEFB $1B                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $AF28 DEFB $59                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $AF29 DEFB $20
 $AF2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $AF2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $AF2C DEFB $59
 $AF2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $AF35 DEFB $00,$00
 $AF37 DEFB $00,$00,$18,$3C,$2C,$18,$00,$7E                                                 ; Coal UDG
 $AF3F DEFB $18,$06,$0E                                                                     ; {Coal
 $AF42 DEFB $19,$09,$08                                                                     ; positions
 $AF45 DEFB $1A,$1C,$0A                                                                     ; }
 $AF48 DEFB $00,$00,$00,$00,$00,$00
 $AF4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $AF57 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $AF60 DEFB $42,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $AF69 DEFB $46,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $AF72 DEFB $45,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF                                             ;
 $AF7B DEFB $45,$00,$00,$10,$3C,$7F,$FF,$FF,$FF                                             ;
 $AF84 DEFB $04,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $AF8D DEFB $46,$FF,$FF,$3C,$18,$34,$3C,$18,$00                                             ; }
 $AF96 DEFB $03,$80,$70,$80,$70,$00,$00,$00,$00,$40,$01,$00,$28,$27,$48,$07,$48,$01,$00,$00 ; {Nasty
 $AFAA DEFB $03,$00,$71,$00,$71,$00,$00,$00,$00,$40,$02,$01,$28,$6F,$09,$07,$09,$00,$00,$00 ; data
 $AFBE DEFB $02,$80,$71,$80,$71,$00,$00,$00,$00,$40,$00,$01,$28,$37,$48,$00,$10,$01,$00,$00 ;
 $AFD2 DEFB $02,$80,$6E,$80,$6E,$00,$00,$00,$00,$40,$04,$01,$78,$5B,$3C,$03,$12,$02,$00,$00 ;
 $AFE6 DEFB $03,$00,$69,$00,$69,$00,$00,$00,$00,$40,$03,$00,$78,$38,$24,$04,$24,$00,$00,$00 ;
 $AFFA DEFB $00,$00,$00,$00,$00,$00,$6F,$00,$6F,$43,$00,$03,$64,$77,$48,$05,$46,$02,$00,$00 ;
 $B00E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B022 DEFB $00,$00,$00,$04,$08,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 0B
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_0B)
b$B02A DEFB $48,$60,$92                                                                     ; {Static
 $B02D DEFB $49,$24,$92                                                                     ; characters
 $B030 DEFB $49,$24,$92                                                                     ;
 $B033 DEFB $49,$24,$92                                                                     ;
 $B036 DEFB $48,$60,$00                                                                     ;
 $B039 DEFB $09,$20,$00                                                                     ;
 $B03C DEFB $00,$00,$00                                                                     ;
 $B03F DEFB $00,$0C,$12                                                                     ;
 $B042 DEFB $24,$60,$00                                                                     ;
 $B045 DEFB $00,$00,$00                                                                     ;
 $B048 DEFB $00,$00,$00                                                                     ;
 $B04B DEFB $00,$0C,$09                                                                     ;
 $B04E DEFB $24,$92,$48                                                                     ;
 $B051 DEFB $00,$00,$09                                                                     ;
 $B054 DEFB $24,$92,$49                                                                     ;
 $B057 DEFB $24,$8C,$09                                                                     ;
 $B05A DEFB $00,$00,$09                                                                     ;
 $B05D DEFB $24,$92,$4E                                                                     ;
 $B060 DEFB $00,$02,$00                                                                     ;
 $B063 DEFB $00,$0C,$01                                                                     ;
 $B066 DEFB $00,$00,$00                                                                     ;
 $B069 DEFB $00,$00,$06                                                                     ;
 $B06C DEFB $00,$02,$00                                                                     ;
 $B06F DEFB $00,$0C,$01                                                                     ;
 $B072 DEFB $00,$00,$00                                                                     ;
 $B075 DEFB $00,$00,$06                                                                     ;
 $B078 DEFB $00,$02,$00                                                                     ;
 $B07B DEFB $00,$0C,$01                                                                     ;
 $B07E DEFB $00,$00,$00                                                                     ;
 $B081 DEFB $00,$00,$06                                                                     ;
 $B084 DEFB $00,$02,$00                                                                     ;
 $B087 DEFB $00,$0C,$01                                                                     ;
 $B08A DEFB $00,$00,$00                                                                     ;
 $B08D DEFB $00,$00,$06                                                                     ;
 $B090 DEFB $00,$02,$00                                                                     ;
 $B093 DEFB $00,$0C,$09                                                                     ;
 $B096 DEFB $24,$92,$4B                                                                     ;
 $B099 DEFB $6D,$B6,$06                                                                     ;
 $B09C DEFB $01,$B3,$69                                                                     ;
 $B09F DEFB $6C,$92,$49                                                                     ;
 $B0A2 DEFB $24,$92,$40                                                                     ;
 $B0A5 DEFB $C0,$00,$06                                                                     ;
 $B0A8 DEFB $00,$02,$49                                                                     ;
 $B0AB DEFB $B6,$92,$49                                                                     ;
 $B0AE DEFB $24,$80,$00                                                                     ;
 $B0B1 DEFB $C0,$00,$46                                                                     ;
 $B0B4 DEFB $04,$00,$01                                                                     ;
 $B0B7 DEFB $32,$49,$09                                                                     ;
 $B0BA DEFB $00,$00,$00                                                                     ;
 $B0BD DEFB $C0,$12,$46                                                                     ;
 $B0C0 DEFB $04,$00,$00                                                                     ;
 $B0C3 DEFB $24,$92,$49                                                                     ;
 $B0C6 DEFB $00,$00,$00                                                                     ;
 $B0C9 DEFB $C0,$90,$06                                                                     ;
 $B0CC DEFB $04,$90,$00                                                                     ;
 $B0CF DEFB $00,$00,$09                                                                     ;
 $B0D2 DEFB $00,$36,$DB                                                                     ;
 $B0D5 DEFB $64,$80,$06                                                                     ;
 $B0D8 DEFB $00,$12,$00                                                                     ;
 $B0DB DEFB $00,$00,$01                                                                     ;
 $B0DE DEFB $00,$60,$00                                                                     ;
 $B0E1 DEFB $04,$00,$06                                                                     ;
 $B0E4 DEFB $00,$02,$00                                                                     ;
 $B0E7 DEFB $00,$00,$09                                                                     ;
 $B0EA DEFB $00,$60,$00                                                                     ;
 $B0ED DEFB $04,$00,$06                                                                     ;
 $B0F0 DEFB $00,$02,$D8                                                                     ;
 $B0F3 DEFB $00,$00,$49                                                                     ;
 $B0F6 DEFB $00,$60,$6D                                                                     ;
 $B0F9 DEFB $A4,$B6,$00                                                                     ;
 $B0FC DEFB $0D,$93,$6D                                                                     ;
 $B0FF DEFB $24,$DA,$49                                                                     ;
 $B102 DEFB $00,$60,$4C                                                                     ;
 $B105 DEFB $24,$9B,$6D                                                                     ;
 $B108 DEFB $B4,$92,$61                                                                     ;
 $B10B DEFB $24,$92,$49                                                                     ;
 $B10E DEFB $24,$92,$49                                                                     ;
 $B111 DEFB $24,$92,$49                                                                     ;
 $B114 DEFB $24,$92,$49                                                                     ;
 $B117 DEFB $24,$92,$49                                                                     ; }
 $B11A DEFB $72,$45,$44,$42                                                                 ; Wall
                                                                                            ; attributes
 $B11E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $B120 DEFB $0C                                                                             ; Next room
                                                                                            ; UP
 $B121 DEFB $0B                                                                             ; Next room
                                                                                            ; DOWN
 $B122 DEFB $0A                                                                             ; Next room
                                                                                            ; LEFT
 $B123 DEFB $0B                                                                             ; Next room
                                                                                            ; RIGHT
 $B124 DEFB $C8                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $B125 DEFB $37                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $B126 DEFB $0A                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $B127 DEFB $17                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $B128 DEFB $91                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $B129 DEFB $70
 $B12A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $B12B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $B12C DEFB $91
 $B12D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B135 DEFB $00,$00
 $B137 DEFB $00,$00,$3F,$50,$5F,$A9,$AE,$AF                                                 ; Coal UDG
 $B13F DEFB $1B,$0B,$12                                                                     ; {Coal
 $B142 DEFB $1C,$1D,$11                                                                     ; positions
 $B145 DEFB $1D,$01,$0A                                                                     ; }
 $B148 DEFB $1E,$05,$12,$1F,$12,$12
 $B14E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $B157 DEFB $72,$FB,$FB,$FB,$00,$7F,$7F,$7F,$00                                             ; character
 $B160 DEFB $42,$38,$79,$63,$0C,$78,$D8,$83,$07                                             ; graphics
 $B169 DEFB $46,$FF,$FF,$EF,$FF,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $B172 DEFB $45,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF                                             ;
 $B17B DEFB $45,$00,$00,$10,$3C,$7F,$FF,$FF,$FF                                             ;
 $B184 DEFB $44,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $B18D DEFB $46,$FF,$FF,$3C,$18,$34,$3C,$18,$00                                             ; }
 $B196 DEFB $00,$00,$6A,$00,$6A,$83,$02,$83,$02,$43,$00,$01,$28,$A7,$10,$03,$10,$00,$03,$03 ; {Nasty
 $B1AA DEFB $00,$00,$64,$00,$64,$83,$02,$83,$02,$47,$01,$00,$20,$77,$18,$03,$18,$01,$03,$03 ; data
 $B1BE DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $B1D2 DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $B1E6 DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $B1FA DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $B20E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B222 DEFB $00,$00,$00,$00,$00,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 0C
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_0C)
b$B22A DEFB $51,$49,$22                                                                     ; {Static
 $B22D DEFB $89,$48,$A4                                                                     ; characters
 $B230 DEFB $8A,$24,$A2                                                                     ;
 $B233 DEFB $8A,$48,$A4                                                                     ;
 $B236 DEFB $52,$29,$24                                                                     ;
 $B239 DEFB $52,$48,$A4                                                                     ;
 $B23C DEFB $52,$45,$24                                                                     ;
 $B23F DEFB $8A,$28,$A2                                                                     ;
 $B242 DEFB $50,$00,$00                                                                     ;
 $B245 DEFB $00,$00,$00                                                                     ;
 $B248 DEFB $00,$30,$00                                                                     ;
 $B24B DEFB $00,$00,$00                                                                     ;
 $B24E DEFB $80,$00,$00                                                                     ;
 $B251 DEFB $00,$00,$00                                                                     ;
 $B254 DEFB $00,$30,$00                                                                     ;
 $B257 DEFB $00,$00,$00                                                                     ;
 $B25A DEFB $40,$00,$00                                                                     ;
 $B25D DEFB $00,$00,$00                                                                     ;
 $B260 DEFB $00,$30,$00                                                                     ;
 $B263 DEFB $00,$00,$00                                                                     ;
 $B266 DEFB $5B,$6D,$B7                                                                     ;
 $B269 DEFB $00,$00,$00                                                                     ;
 $B26C DEFB $00,$30,$00                                                                     ;
 $B26F DEFB $00,$00,$00                                                                     ;
 $B272 DEFB $80,$00,$03                                                                     ;
 $B275 DEFB $DB,$6D,$B8                                                                     ;
 $B278 DEFB $48,$3D,$B6                                                                     ;
 $B27B DEFB $E0,$00,$00                                                                     ;
 $B27E DEFB $40,$00,$03                                                                     ;
 $B281 DEFB $00,$00,$18                                                                     ;
 $B284 DEFB $40,$30,$00                                                                     ;
 $B287 DEFB $7B,$6D,$B6                                                                     ;
 $B28A DEFB $40,$00,$03                                                                     ;
 $B28D DEFB $00,$00,$18                                                                     ;
 $B290 DEFB $40,$30,$00                                                                     ;
 $B293 DEFB $60,$00,$00                                                                     ;
 $B296 DEFB $80,$00,$03                                                                     ;
 $B299 DEFB $00,$00,$18                                                                     ;
 $B29C DEFB $40,$30,$00                                                                     ;
 $B29F DEFB $60,$00,$00                                                                     ;
 $B2A2 DEFB $40,$00,$03                                                                     ;
 $B2A5 DEFB $00,$00,$18                                                                     ;
 $B2A8 DEFB $40,$30,$00                                                                     ;
 $B2AB DEFB $60,$00,$00                                                                     ;
 $B2AE DEFB $49,$2D,$B6                                                                     ;
 $B2B1 DEFB $E0,$00,$18                                                                     ;
 $B2B4 DEFB $40,$30,$00                                                                     ;
 $B2B7 DEFB $60,$00,$00                                                                     ;
 $B2BA DEFB $8A,$00,$03                                                                     ;
 $B2BD DEFB $60,$00,$92                                                                     ;
 $B2C0 DEFB $49,$25,$B6                                                                     ;
 $B2C3 DEFB $DB,$80,$00                                                                     ;
 $B2C6 DEFB $40,$00,$03                                                                     ;
 $B2C9 DEFB $60,$00,$00                                                                     ;
 $B2CC DEFB $00,$00,$00                                                                     ;
 $B2CF DEFB $61,$80,$00                                                                     ;
 $B2D2 DEFB $9B,$70,$03                                                                     ;
 $B2D5 DEFB $60,$00,$00                                                                     ;
 $B2D8 DEFB $00,$00,$00                                                                     ;
 $B2DB DEFB $61,$80,$00                                                                     ;
 $B2DE DEFB $80,$30,$03                                                                     ;
 $B2E1 DEFB $60,$00,$00                                                                     ;
 $B2E4 DEFB $00,$00,$00                                                                     ;
 $B2E7 DEFB $61,$80,$00                                                                     ;
 $B2EA DEFB $80,$30,$03                                                                     ;
 $B2ED DEFB $60,$00,$00                                                                     ;
 $B2F0 DEFB $00,$00,$00                                                                     ;
 $B2F3 DEFB $61,$80,$00                                                                     ;
 $B2F6 DEFB $94,$31,$6D                                                                     ;
 $B2F9 DEFB $B6,$DB,$6D                                                                     ;
 $B2FC DEFB $B6,$DB,$6D                                                                     ;
 $B2FF DEFB $B6,$DB,$6D                                                                     ;
 $B302 DEFB $24,$30,$49                                                                     ;
 $B305 DEFB $24,$92,$49                                                                     ;
 $B308 DEFB $24,$92,$49                                                                     ;
 $B30B DEFB $24,$92,$49                                                                     ;
 $B30E DEFB $24,$30,$49                                                                     ;
 $B311 DEFB $24,$92,$49                                                                     ;
 $B314 DEFB $24,$92,$49                                                                     ;
 $B317 DEFB $24,$92,$49                                                                     ; }
 $B31A DEFB $46,$07,$45,$4A                                                                 ; Wall
                                                                                            ; attributes
 $B31E DEFW $7800                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $B320 DEFB $0C                                                                             ; Next room
                                                                                            ; UP
 $B321 DEFB $0B                                                                             ; Next room
                                                                                            ; DOWN
 $B322 DEFB $0C                                                                             ; Next room
                                                                                            ; LEFT
 $B323 DEFB $0D                                                                             ; Next room
                                                                                            ; RIGHT
 $B324 DEFB $A8                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $B325 DEFB $6F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $B326 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $B327 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $B328 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $B329 DEFB $88
 $B32A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $B32B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $B32C DEFB $00
 $B32D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B335 DEFB $00,$00
 $B337 DEFB $00,$07,$0F,$6F,$76,$F7,$7B,$16                                                 ; Coal UDG
 $B33F DEFB $20,$01,$0C                                                                     ; {Coal
 $B342 DEFB $21,$19,$10                                                                     ; positions
 $B345 DEFB $22,$08,$05                                                                     ; }
 $B348 DEFB $23,$11,$0D,$00,$00,$00
 $B34E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $B357 DEFB $46,$20,$0D,$FC,$F0,$06,$C6,$D9,$18                                             ; character
 $B360 DEFB $4A,$38,$C5,$3A,$C5,$18,$E7,$00,$FF                                             ; graphics
 $B369 DEFB $45,$0D,$0D,$0D,$0D,$0D,$0F,$0D,$0D                                             ; #UDGSTR(#PC)
 $B372 DEFB $4A,$03,$F8,$04,$83,$60,$1F,$00,$FF                                             ;
 $B37B DEFB $07,$00,$00,$00,$FF,$66,$CC,$FF,$FF                                             ;
 $B384 DEFB $45,$00,$00,$FF,$08,$FF,$FF,$00,$00                                             ;
 $B38D DEFB $45,$00,$00,$F8,$0E,$FB,$FD,$1D,$0D                                             ; }
 $B396 DEFB $02,$80,$6F,$80,$6F,$80,$6F,$80,$6F,$43,$01,$03,$08,$2F,$74,$03,$74,$02,$03,$03 ; {Nasty
 $B3AA DEFB $03,$80,$6F,$80,$6F,$83,$02,$83,$02,$40,$02,$00,$F0,$2F,$14,$03,$14,$00,$03,$03 ; data
 $B3BE DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$00,$00,$F0,$2F,$1C,$03,$1C,$00,$03,$03 ;
 $B3D2 DEFB $00,$83,$02,$83,$02,$80,$64,$80,$64,$44,$03,$03,$08,$97,$80,$03,$80,$01,$03,$03 ;
 $B3E6 DEFB $02,$80,$67,$80,$67,$83,$02,$83,$02,$40,$05,$01,$C8,$9F,$60,$03,$60,$01,$03,$03 ;
 $B3FA DEFB $03,$80,$67,$80,$67,$83,$02,$83,$02,$40,$04,$00,$C8,$3F,$60,$03,$60,$01,$03,$03 ;
 $B40E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B422 DEFB $00,$00,$00,$04,$08,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 0D
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_0D)
b$B42A DEFB $51,$49,$22                                                                     ; {Static
 $B42D DEFB $89,$48,$A4                                                                     ; characters
 $B430 DEFB $8A,$24,$A2                                                                     ;
 $B433 DEFB $8A,$48,$A4                                                                     ;
 $B436 DEFB $52,$29,$24                                                                     ;
 $B439 DEFB $52,$48,$A4                                                                     ;
 $B43C DEFB $52,$45,$24                                                                     ;
 $B43F DEFB $8A,$28,$A2                                                                     ;
 $B442 DEFB $00,$00,$12                                                                     ;
 $B445 DEFB $89,$29,$12                                                                     ;
 $B448 DEFB $01,$24,$80                                                                     ;
 $B44B DEFB $00,$00,$00                                                                     ;
 $B44E DEFB $00,$00,$00                                                                     ;
 $B451 DEFB $0A,$44,$90                                                                     ;
 $B454 DEFB $00,$04,$80                                                                     ;
 $B457 DEFB $00,$00,$00                                                                     ;
 $B45A DEFB $00,$00,$00                                                                     ;
 $B45D DEFB $01,$28,$80                                                                     ;
 $B460 DEFB $00,$00,$96                                                                     ;
 $B463 DEFB $DB,$70,$00                                                                     ;
 $B466 DEFB $00,$00,$00                                                                     ;
 $B469 DEFB $00,$24,$80                                                                     ;
 $B46C DEFB $00,$00,$00                                                                     ;
 $B46F DEFB $00,$30,$00                                                                     ;
 $B472 DEFB $00,$00,$00                                                                     ;
 $B475 DEFB $DB,$25,$B8                                                                     ;
 $B478 DEFB $00,$00,$00                                                                     ;
 $B47B DEFB $00,$30,$00                                                                     ;
 $B47E DEFB $DB,$24,$80                                                                     ;
 $B481 DEFB $00,$24,$18                                                                     ;
 $B484 DEFB $00,$00,$00                                                                     ;
 $B487 DEFB $00,$3D,$B6                                                                     ;
 $B48A DEFB $00,$28,$80                                                                     ;
 $B48D DEFB $00,$20,$18                                                                     ;
 $B490 DEFB $00,$00,$00                                                                     ;
 $B493 DEFB $00,$30,$00                                                                     ;
 $B496 DEFB $00,$04,$92                                                                     ;
 $B499 DEFB $49,$40,$18                                                                     ;
 $B49C DEFB $00,$00,$00                                                                     ;
 $B49F DEFB $00,$30,$00                                                                     ;
 $B4A2 DEFB $5B,$6C,$94                                                                     ;
 $B4A5 DEFB $49,$00,$18                                                                     ;
 $B4A8 DEFB $00,$00,$00                                                                     ;
 $B4AB DEFB $00,$3D,$B6                                                                     ;
 $B4AE DEFB $48,$00,$92                                                                     ;
 $B4B1 DEFB $48,$00,$18                                                                     ;
 $B4B4 DEFB $00,$00,$00                                                                     ;
 $B4B7 DEFB $00,$30,$00                                                                     ;
 $B4BA DEFB $08,$00,$00                                                                     ;
 $B4BD DEFB $00,$00,$92                                                                     ;
 $B4C0 DEFB $49,$25,$B2                                                                     ;
 $B4C3 DEFB $49,$24,$00                                                                     ;
 $B4C6 DEFB $49,$6D,$B8                                                                     ;
 $B4C9 DEFB $00,$00,$12                                                                     ;
 $B4CC DEFB $89,$00,$00                                                                     ;
 $B4CF DEFB $12,$20,$00                                                                     ;
 $B4D2 DEFB $00,$00,$18                                                                     ;
 $B4D5 DEFB $00,$00,$00                                                                     ;
 $B4D8 DEFB $00,$00,$00                                                                     ;
 $B4DB DEFB $00,$00,$00                                                                     ;
 $B4DE DEFB $00,$00,$18                                                                     ;
 $B4E1 DEFB $00,$00,$00                                                                     ;
 $B4E4 DEFB $00,$00,$00                                                                     ;
 $B4E7 DEFB $00,$00,$00                                                                     ;
 $B4EA DEFB $00,$00,$18                                                                     ;
 $B4ED DEFB $00,$00,$00                                                                     ;
 $B4F0 DEFB $00,$00,$00                                                                     ;
 $B4F3 DEFB $00,$00,$00                                                                     ;
 $B4F6 DEFB $B6,$DB,$6D                                                                     ;
 $B4F9 DEFB $B6,$DB,$6D                                                                     ;
 $B4FC DEFB $B6,$DB,$6D                                                                     ;
 $B4FF DEFB $B6,$DB,$6D                                                                     ;
 $B502 DEFB $24,$92,$49                                                                     ;
 $B505 DEFB $24,$92,$49                                                                     ;
 $B508 DEFB $24,$92,$49                                                                     ;
 $B50B DEFB $24,$92,$49                                                                     ;
 $B50E DEFB $24,$92,$49                                                                     ;
 $B511 DEFB $24,$92,$49                                                                     ;
 $B514 DEFB $24,$92,$49                                                                     ;
 $B517 DEFB $24,$92,$49                                                                     ; }
 $B51A DEFB $46,$07,$45,$4A                                                                 ; Wall
                                                                                            ; attributes
 $B51E DEFW $7800                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $B520 DEFB $0D                                                                             ; Next room
                                                                                            ; UP
 $B521 DEFB $0D                                                                             ; Next room
                                                                                            ; DOWN
 $B522 DEFB $0C                                                                             ; Next room
                                                                                            ; LEFT
 $B523 DEFB $0E                                                                             ; Next room
                                                                                            ; RIGHT
 $B524 DEFB $0E                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $B525 DEFB $00                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $B526 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $B527 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $B528 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $B529 DEFB $78
 $B52A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $B52B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $B52C DEFB $00
 $B52D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B535 DEFB $00,$00
 $B537 DEFB $10,$20,$10,$30,$30,$30,$38,$1F                                                 ; Coal UDG
 $B53F DEFB $24,$08,$0A                                                                     ; {Coal
 $B542 DEFB $25,$15,$10                                                                     ; positions
 $B545 DEFB $26,$0F,$06                                                                     ; }
 $B548 DEFB $27,$16,$04,$00,$00,$00
 $B54E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $B557 DEFB $46,$20,$0D,$FC,$F0,$06,$C6,$D9,$18                                             ; character
 $B560 DEFB $4A,$38,$C5,$3A,$C5,$18,$E7,$00,$FF                                             ; graphics
 $B569 DEFB $45,$0D,$0D,$0D,$0D,$0D,$0F,$0D,$0D                                             ; #UDGSTR(#PC)
 $B572 DEFB $4A,$03,$F8,$04,$83,$60,$1F,$00,$FF                                             ;
 $B57B DEFB $07,$00,$00,$00,$FF,$66,$CC,$FF,$FF                                             ;
 $B584 DEFB $45,$00,$00,$FF,$08,$FF,$FF,$00,$00                                             ;
 $B58D DEFB $45,$00,$00,$F8,$0E,$FB,$FD,$1D,$0D                                             ; }
 $B596 DEFB $02,$83,$02,$83,$02,$80,$6F,$80,$6F,$40,$01,$03,$08,$2F,$74,$03,$74,$02,$03,$03 ; {Nasty
 $B5AA DEFB $03,$80,$6F,$80,$6F,$80,$02,$83,$02,$40,$02,$00,$F0,$2F,$14,$03,$14,$00,$03,$03 ; data
 $B5BE DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$00,$00,$F0,$2F,$18,$03,$18,$00,$03,$03 ;
 $B5D2 DEFB $00,$80,$64,$80,$64,$80,$64,$80,$64,$42,$03,$03,$78,$6F,$50,$03,$50,$01,$03,$03 ;
 $B5E6 DEFB $00,$00,$6F,$00,$6F,$83,$02,$83,$02,$47,$04,$01,$E0,$9F,$0C,$03,$0C,$02,$03,$03 ;
 $B5FA DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $B60E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B622 DEFB $00,$00,$00,$04,$08,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 0E
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_0E)
b$B62A DEFB $51,$49,$22                                                                     ; {Static
 $B62D DEFB $89,$48,$A4                                                                     ; characters
 $B630 DEFB $8A,$24,$A2                                                                     ;
 $B633 DEFB $8A,$48,$A4                                                                     ;
 $B636 DEFB $52,$29,$24                                                                     ;
 $B639 DEFB $52,$48,$A4                                                                     ;
 $B63C DEFB $52,$45,$24                                                                     ;
 $B63F DEFB $8A,$28,$A2                                                                     ;
 $B642 DEFB $00,$24,$A2                                                                     ;
 $B645 DEFB $89,$29,$12                                                                     ;
 $B648 DEFB $01,$28,$80                                                                     ;
 $B64B DEFB $00,$24,$A2                                                                     ;
 $B64E DEFB $00,$04,$94                                                                     ;
 $B651 DEFB $51,$44,$90                                                                     ;
 $B654 DEFB $00,$04,$80                                                                     ;
 $B657 DEFB $00,$04,$A2                                                                     ;
 $B65A DEFB $00,$00,$02                                                                     ;
 $B65D DEFB $51,$28,$80                                                                     ;
 $B660 DEFB $00,$00,$96                                                                     ;
 $B663 DEFB $DB,$65,$12                                                                     ;
 $B666 DEFB $00,$00,$00                                                                     ;
 $B669 DEFB $49,$00,$80                                                                     ;
 $B66C DEFB $00,$00,$00                                                                     ;
 $B66F DEFB $00,$04,$90                                                                     ;
 $B672 DEFB $00,$00,$02                                                                     ;
 $B675 DEFB $40,$00,$C0                                                                     ;
 $B678 DEFB $00,$00,$00                                                                     ;
 $B67B DEFB $01,$24,$80                                                                     ;
 $B67E DEFB $DB,$70,$12                                                                     ;
 $B681 DEFB $00,$00,$F6                                                                     ;
 $B684 DEFB $D9,$20,$00                                                                     ;
 $B687 DEFB $49,$20,$00                                                                     ;
 $B68A DEFB $00,$30,$00                                                                     ;
 $B68D DEFB $00,$00,$C0                                                                     ;
 $B690 DEFB $00,$24,$92                                                                     ;
 $B693 DEFB $49,$00,$00                                                                     ;
 $B696 DEFB $00,$30,$00                                                                     ;
 $B699 DEFB $00,$00,$D0                                                                     ;
 $B69C DEFB $00,$00,$92                                                                     ;
 $B69F DEFB $40,$00,$00                                                                     ;
 $B6A2 DEFB $DB,$6D,$B6                                                                     ;
 $B6A5 DEFB $DC,$00,$D2                                                                     ;
 $B6A8 DEFB $40,$00,$00                                                                     ;
 $B6AB DEFB $00,$00,$00                                                                     ;
 $B6AE DEFB $00,$30,$00                                                                     ;
 $B6B1 DEFB $09,$20,$D2                                                                     ;
 $B6B4 DEFB $40,$00,$00                                                                     ;
 $B6B7 DEFB $00,$00,$00                                                                     ;
 $B6BA DEFB $00,$3D,$B6                                                                     ;
 $B6BD DEFB $E1,$24,$94                                                                     ;
 $B6C0 DEFB $89,$25,$B6                                                                     ;
 $B6C3 DEFB $E0,$00,$00                                                                     ;
 $B6C6 DEFB $00,$30,$00                                                                     ;
 $B6C9 DEFB $60,$24,$92                                                                     ;
 $B6CC DEFB $89,$2D,$B6                                                                     ;
 $B6CF DEFB $DC,$00,$00                                                                     ;
 $B6D2 DEFB $00,$30,$00                                                                     ;
 $B6D5 DEFB $60,$00,$22                                                                     ;
 $B6D8 DEFB $49,$00,$00                                                                     ;
 $B6DB DEFB $6C,$00,$00                                                                     ;
 $B6DE DEFB $00,$30,$00                                                                     ;
 $B6E1 DEFB $60,$00,$00                                                                     ;
 $B6E4 DEFB $00,$00,$00                                                                     ;
 $B6E7 DEFB $6C,$00,$00                                                                     ;
 $B6EA DEFB $00,$30,$00                                                                     ;
 $B6ED DEFB $60,$00,$00                                                                     ;
 $B6F0 DEFB $00,$00,$00                                                                     ;
 $B6F3 DEFB $6C,$00,$00                                                                     ;
 $B6F6 DEFB $B6,$DB,$6D                                                                     ;
 $B6F9 DEFB $B6,$DB,$6D                                                                     ;
 $B6FC DEFB $B6,$DB,$6D                                                                     ;
 $B6FF DEFB $B6,$DB,$6D                                                                     ;
 $B702 DEFB $24,$92,$49                                                                     ;
 $B705 DEFB $24,$92,$49                                                                     ;
 $B708 DEFB $24,$92,$49                                                                     ;
 $B70B DEFB $24,$92,$49                                                                     ;
 $B70E DEFB $24,$92,$49                                                                     ;
 $B711 DEFB $24,$92,$49                                                                     ;
 $B714 DEFB $24,$92,$49                                                                     ;
 $B717 DEFB $24,$92,$49                                                                     ; }
 $B71A DEFB $46,$07,$45,$4A                                                                 ; Wall
                                                                                            ; attributes
 $B71E DEFW $7800                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $B720 DEFB $0E                                                                             ; Next room
                                                                                            ; UP
 $B721 DEFB $0E                                                                             ; Next room
                                                                                            ; DOWN
 $B722 DEFB $0D                                                                             ; Next room
                                                                                            ; LEFT
 $B723 DEFB $0F                                                                             ; Next room
                                                                                            ; RIGHT
 $B724 DEFB $0F                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $B725 DEFB $00                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $B726 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $B727 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $B728 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $B729 DEFB $60
 $B72A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $B72B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $B72C DEFB $00
 $B72D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B735 DEFB $00,$00
 $B737 DEFB $00,$08,$0C,$3F,$7E,$BE,$FD,$E3                                                 ; Coal UDG
 $B73F DEFB $28,$18,$05                                                                     ; {Coal
 $B742 DEFB $29,$14,$10                                                                     ; positions
 $B745 DEFB $2A,$06,$08                                                                     ; }
 $B748 DEFB $00,$00,$00,$00,$00,$00
 $B74E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $B757 DEFB $46,$20,$0D,$FC,$F0,$06,$C6,$D9,$18                                             ; character
 $B760 DEFB $4A,$38,$C5,$3A,$C5,$18,$E7,$00,$FF                                             ; graphics
 $B769 DEFB $45,$0D,$0D,$0D,$0D,$0D,$0F,$0D,$0D                                             ; #UDGSTR(#PC)
 $B772 DEFB $4A,$03,$F8,$04,$83,$60,$1F,$00,$FF                                             ; 
 $B77B DEFB $07,$00,$00,$00,$FF,$66,$CC,$FF,$FF                                             ;
 $B784 DEFB $45,$00,$00,$FF,$08,$FF,$FF,$00,$00                                             ;
 $B78D DEFB $45,$00,$00,$F8,$0E,$FB,$FD,$1D,$0D                                             ; }
 $B796 DEFB $02,$83,$02,$83,$02,$80,$6F,$80,$6F,$40,$01,$03,$08,$2F,$74,$03,$74,$02,$03,$03 ; {Nasty
 $B7AA DEFB $03,$80,$6F,$80,$6F,$83,$02,$83,$02,$40,$02,$00,$F0,$2F,$10,$03,$10,$00,$03,$03 ; data
 $B7BE DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$00,$00,$F0,$2F,$1C,$03,$1C,$00,$03,$03 ;
 $B7D2 DEFB $00,$83,$02,$83,$02,$80,$64,$80,$64,$46,$03,$03,$90,$5F,$60,$03,$60,$01,$03,$03 ;
 $B7E6 DEFB $02,$00,$6E,$00,$6E,$83,$02,$83,$02,$40,$05,$01,$58,$AF,$48,$03,$48,$02,$03,$03 ;
 $B7FA DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$04,$00,$58,$1F,$3C,$03,$3C,$00,$03,$03 ;
 $B80E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B822 DEFB $00,$00,$00,$04,$08,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 0F
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_0F)
b$B82A DEFB $51,$49,$22                                                                     ; {Static
 $B82D DEFB $89,$48,$A4                                                                     ; characters
 $B830 DEFB $8A,$24,$A2                                                                     ;
 $B833 DEFB $8A,$48,$A4                                                                     ;
 $B836 DEFB $52,$29,$20                                                                     ;
 $B839 DEFB $52,$48,$A4                                                                     ;
 $B83C DEFB $52,$45,$24                                                                     ;
 $B83F DEFB $8A,$28,$A2                                                                     ;
 $B842 DEFB $49,$24,$80                                                                     ;
 $B845 DEFB $89,$29,$12                                                                     ;
 $B848 DEFB $01,$28,$80                                                                     ;
 $B84B DEFB $00,$24,$A2                                                                     ;
 $B84E DEFB $4B,$80,$00                                                                     ;
 $B851 DEFB $51,$44,$90                                                                     ;
 $B854 DEFB $00,$00,$00                                                                     ;
 $B857 DEFB $00,$04,$A2                                                                     ;
 $B85A DEFB $01,$80,$00                                                                     ;
 $B85D DEFB $11,$2D,$B8                                                                     ;
 $B860 DEFB $00,$00,$00                                                                     ;
 $B863 DEFB $00,$25,$12                                                                     ;
 $B866 DEFB $01,$80,$00                                                                     ;
 $B869 DEFB $08,$00,$18                                                                     ;
 $B86C DEFB $00,$00,$92                                                                     ;
 $B86F DEFB $49,$24,$80                                                                     ;
 $B872 DEFB $01,$80,$00                                                                     ;
 $B875 DEFB $00,$00,$18                                                                     ;
 $B878 DEFB $00,$04,$92                                                                     ;
 $B87B DEFB $01,$20,$00                                                                     ;
 $B87E DEFB $01,$80,$00                                                                     ;
 $B881 DEFB $00,$00,$18                                                                     ;
 $B884 DEFB $01,$24,$90                                                                     ;
 $B887 DEFB $00,$00,$00                                                                     ;
 $B88A DEFB $01,$80,$00                                                                     ;
 $B88D DEFB $00,$00,$18                                                                     ;
 $B890 DEFB $09,$24,$80                                                                     ;
 $B893 DEFB $00,$00,$00                                                                     ;
 $B896 DEFB $01,$80,$00                                                                     ;
 $B899 DEFB $00,$00,$18                                                                     ;
 $B89C DEFB $00,$00,$00                                                                     ;
 $B89F DEFB $00,$00,$92                                                                     ;
 $B8A2 DEFB $01,$80,$00                                                                     ;
 $B8A5 DEFB $00,$00,$1E                                                                     ;
 $B8A8 DEFB $DB,$6D,$B6                                                                     ;
 $B8AB DEFB $C9,$24,$92                                                                     ;
 $B8AE DEFB $01,$80,$00                                                                     ;
 $B8B1 DEFB $00,$00,$18                                                                     ;
 $B8B4 DEFB $00,$00,$00                                                                     ;
 $B8B7 DEFB $00,$24,$92                                                                     ;
 $B8BA DEFB $01,$80,$00                                                                     ;
 $B8BD DEFB $00,$00,$18                                                                     ;
 $B8C0 DEFB $00,$00,$00                                                                     ;
 $B8C3 DEFB $00,$00,$12                                                                     ;
 $B8C6 DEFB $01,$80,$92                                                                     ;
 $B8C9 DEFB $4B,$80,$1E                                                                     ;
 $B8CC DEFB $DB,$70,$00                                                                     ;
 $B8CF DEFB $00,$00,$02                                                                     ;
 $B8D2 DEFB $01,$80,$12                                                                     ;
 $B8D5 DEFB $41,$80,$18                                                                     ;
 $B8D8 DEFB $00,$00,$00                                                                     ;
 $B8DB DEFB $00,$00,$02                                                                     ;
 $B8DE DEFB $01,$80,$00                                                                     ;
 $B8E1 DEFB $01,$80,$18                                                                     ;
 $B8E4 DEFB $00,$00,$00                                                                     ;
 $B8E7 DEFB $00,$00,$02                                                                     ;
 $B8EA DEFB $01,$80,$00                                                                     ;
 $B8ED DEFB $01,$80,$18                                                                     ;
 $B8F0 DEFB $00,$00,$00                                                                     ;
 $B8F3 DEFB $00,$00,$02                                                                     ;
 $B8F6 DEFB $B6,$DB,$6D                                                                     ;
 $B8F9 DEFB $B6,$DB,$6D                                                                     ;
 $B8FC DEFB $B6,$DB,$6D                                                                     ;
 $B8FF DEFB $B6,$DB,$6A                                                                     ;
 $B902 DEFB $24,$92,$49                                                                     ;
 $B905 DEFB $24,$92,$49                                                                     ;
 $B908 DEFB $24,$92,$49                                                                     ;
 $B90B DEFB $24,$92,$49                                                                     ;
 $B90E DEFB $24,$92,$49                                                                     ;
 $B911 DEFB $24,$92,$49                                                                     ;
 $B914 DEFB $24,$92,$49                                                                     ;
 $B917 DEFB $24,$92,$49                                                                     ; }
 $B91A DEFB $46,$07,$45,$4A                                                                 ; Wall
                                                                                            ; attributes
 $B91E DEFW $7800                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $B920 DEFB $0F                                                                             ; Next room
                                                                                            ; UP
 $B921 DEFB $0F                                                                             ; Next room
                                                                                            ; DOWN
 $B922 DEFB $0E                                                                             ; Next room
                                                                                            ; LEFT
 $B923 DEFB $10                                                                             ; Next room
                                                                                            ; RIGHT
 $B924 DEFB $08                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $B925 DEFB $7F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $B926 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $B927 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $B928 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $B929 DEFB $60
 $B92A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $B92B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $B92C DEFB $00
 $B92D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B935 DEFB $00,$00
 $B937 DEFB $10,$20,$10,$30,$30,$30,$38,$1F                                                 ; Coal UDG
 $B93F DEFB $2B,$08,$07                                                                     ; {Coal
 $B942 DEFB $2C,$09,$10                                                                     ; positions
 $B945 DEFB $2D,$17,$06                                                                     ; }
 $B948 DEFB $2E,$07,$0E,$00,$00,$00
 $B94E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $B957 DEFB $46,$20,$0D,$FC,$F0,$06,$C6,$D9,$18                                             ; character
 $B960 DEFB $4A,$38,$C5,$3A,$C5,$18,$E7,$00,$FF                                             ; graphics
 $B969 DEFB $45,$0D,$0D,$0D,$0D,$0D,$0F,$0D,$0D                                             ; #UDGSTR(#PC)
 $B972 DEFB $4A,$03,$F8,$04,$83,$60,$1F,$00,$FF                                             ;
 $B97B DEFB $07,$00,$00,$00,$FF,$66,$CC,$FF,$FF                                             ;
 $B984 DEFB $45,$00,$00,$FF,$08,$FF,$FF,$00,$00                                             ;
 $B98D DEFB $45,$00,$00,$F8,$0E,$FB,$FD,$1D,$0D                                             ; }
 $B996 DEFB $02,$83,$02,$83,$02,$80,$6F,$80,$6F,$40,$01,$03,$08,$2F,$74,$03,$74,$02,$03,$03 ; {Nasty
 $B9AA DEFB $03,$80,$6F,$80,$6F,$83,$02,$83,$02,$40,$02,$00,$F0,$2F,$18,$03,$18,$00,$03,$03 ; data
 $B9BE DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$00,$00,$F0,$2F,$2C,$03,$2C,$00,$03,$03 ;
 $B9D2 DEFB $00,$83,$02,$83,$02,$80,$66,$00,$67,$45,$03,$03,$78,$57,$28,$03,$28,$02,$03,$03 ;
 $B9E6 DEFB $02,$00,$69,$00,$69,$83,$02,$83,$02,$40,$05,$01,$30,$AF,$90,$03,$90,$01,$03,$03 ;
 $B9FA DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$04,$00,$30,$1F,$18,$03,$18,$00,$03,$03 ;
 $BA0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BA22 DEFB $18,$6F,$18,$62,$73,$6F,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 10
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_10)
b$BA2A DEFB $92,$49,$24                                                                     ; {Static
 $BA2D DEFB $92,$49,$20                                                                     ; characters
 $BA30 DEFB $00,$00,$04                                                                     ;
 $BA33 DEFB $92,$49,$24                                                                     ;
 $BA36 DEFB $92,$48,$00                                                                     ;
 $BA39 DEFB $00,$49,$20                                                                     ;
 $BA3C DEFB $00,$00,$00                                                                     ;
 $BA3F DEFB $92,$00,$04                                                                     ;
 $BA42 DEFB $90,$00,$00                                                                     ;
 $BA45 DEFB $00,$00,$24                                                                     ;
 $BA48 DEFB $00,$00,$00                                                                     ;
 $BA4B DEFB $10,$00,$00                                                                     ;
 $BA4E DEFB $90,$00,$00                                                                     ;
 $BA51 DEFB $00,$00,$24                                                                     ;
 $BA54 DEFB $80,$00,$00                                                                     ;
 $BA57 DEFB $10,$00,$00                                                                     ;
 $BA5A DEFB $80,$00,$00                                                                     ;
 $BA5D DEFB $DB,$69,$24                                                                     ;
 $BA60 DEFB $80,$00,$00                                                                     ;
 $BA63 DEFB $90,$00,$24                                                                     ;
 $BA66 DEFB $00,$00,$00                                                                     ;
 $BA69 DEFB $00,$00,$24                                                                     ;
 $BA6C DEFB $90,$00,$04                                                                     ;
 $BA6F DEFB $92,$6D,$24                                                                     ;
 $BA72 DEFB $00,$00,$00                                                                     ;
 $BA75 DEFB $00,$00,$3C                                                                     ;
 $BA78 DEFB $00,$00,$04                                                                     ;
 $BA7B DEFB $02,$00,$04                                                                     ;
 $BA7E DEFB $00,$09,$24                                                                     ;
 $BA81 DEFB $B6,$DB,$64                                                                     ;
 $BA84 DEFB $00,$00,$24                                                                     ;
 $BA87 DEFB $02,$00,$04                                                                     ;
 $BA8A DEFB $02,$49,$24                                                                     ;
 $BA8D DEFB $92,$49,$26                                                                     ;
 $BA90 DEFB $DB,$6D,$A4                                                                     ;
 $BA93 DEFB $DA,$49,$B4                                                                     ;
 $BA96 DEFB $92,$01,$24                                                                     ;
 $BA99 DEFB $80,$48,$00                                                                     ;
 $BA9C DEFB $00,$01,$24                                                                     ;
 $BA9F DEFB $00,$00,$04                                                                     ;
 $BAA2 DEFB $00,$00,$24                                                                     ;
 $BAA5 DEFB $00,$00,$00                                                                     ;
 $BAA8 DEFB $00,$09,$24                                                                     ;
 $BAAB DEFB $00,$00,$04                                                                     ;
 $BAAE DEFB $00,$00,$04                                                                     ;
 $BAB1 DEFB $00,$00,$00                                                                     ;
 $BAB4 DEFB $00,$08,$04                                                                     ;
 $BAB7 DEFB $92,$49,$24                                                                     ;
 $BABA DEFB $00,$00,$04                                                                     ;
 $BABD DEFB $00,$00,$00                                                                     ;
 $BAC0 DEFB $00,$00,$00                                                                     ;
 $BAC3 DEFB $12,$48,$24                                                                     ;
 $BAC6 DEFB $00,$00,$00                                                                     ;
 $BAC9 DEFB $00,$00,$00                                                                     ;
 $BACC DEFB $00,$00,$00                                                                     ;
 $BACF DEFB $00,$40,$04                                                                     ;
 $BAD2 DEFB $00,$00,$00                                                                     ;
 $BAD5 DEFB $00,$00,$00                                                                     ;
 $BAD8 DEFB $00,$00,$00                                                                     ;
 $BADB DEFB $00,$00,$04                                                                     ;
 $BADE DEFB $00,$00,$00                                                                     ;
 $BAE1 DEFB $00,$00,$00                                                                     ;
 $BAE4 DEFB $00,$00,$00                                                                     ;
 $BAE7 DEFB $00,$00,$00                                                                     ;
 $BAEA DEFB $00,$00,$00                                                                     ;
 $BAED DEFB $00,$00,$00                                                                     ;
 $BAF0 DEFB $03,$90,$00                                                                     ;
 $BAF3 DEFB $00,$00,$00                                                                     ;
 $BAF6 DEFB $B6,$DB,$6D                                                                     ;
 $BAF9 DEFB $B6,$DB,$6D                                                                     ;
 $BAFC DEFB $B6,$A2,$00                                                                     ;
 $BAFF DEFB $00,$00,$00                                                                     ;
 $BB02 DEFB $49,$24,$92                                                                     ;
 $BB05 DEFB $49,$24,$92                                                                     ;
 $BB08 DEFB $49,$24,$40                                                                     ;
 $BB0B DEFB $00,$00,$00                                                                     ;
 $BB0E DEFB $49,$24,$92                                                                     ;
 $BB11 DEFB $49,$24,$92                                                                     ;
 $BB14 DEFB $49,$24,$88                                                                     ;
 $BB17 DEFB $00,$00,$00                                                                     ; }
 $BB1A DEFB $4A,$07,$45,$46                                                                 ; Wall
                                                                                            ; attributes
 $BB1E DEFW $7800                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $BB20 DEFB $10                                                                             ; Next room
                                                                                            ; UP
 $BB21 DEFB $11                                                                             ; Next room
                                                                                            ; DOWN
 $BB22 DEFB $0F                                                                             ; Next room
                                                                                            ; LEFT
 $BB23 DEFB $13                                                                             ; Next room
                                                                                            ; RIGHT
 $BB24 DEFB $08                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $BB25 DEFB $7F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $BB26 DEFB $00                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $BB27 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $BB28 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $BB29 DEFB $60
 $BB2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $BB2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $BB2C DEFB $00
 $BB2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BB35 DEFB $00,$00
 $BB37 DEFB $00,$07,$0F,$6F,$76,$F7,$7B,$16                                                 ; Coal UDG
 $BB3F DEFB $2F,$0D,$05                                                                     ; {Coal
 $BB42 DEFB $3B,$18,$08                                                                     ; positions
 $BB45 DEFB $00,$00,$00                                                                     ; }
 $BB48 DEFB $00,$00,$00,$00,$00,$00
 $BB4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $BB57 DEFB $46,$80,$C0,$E0,$F0,$B8,$3C,$FE,$CF                                             ; character
 $BB60 DEFB $46,$37,$3F,$EF,$F5,$9C,$BF,$9F,$F3                                             ; graphics
 $BB69 DEFB $72,$0D,$0D,$0D,$0D,$0D,$0F,$0D,$0D                                             ; UDGSTR(#PC)
 $BB72 DEFB $4A,$03,$F8,$04,$83,$60,$1F,$00,$FF                                             ;
 $BB7B DEFB $07,$00,$00,$00,$FF,$66,$CC,$FF,$FF                                             ;
 $BB84 DEFB $45,$00,$00,$FF,$08,$FF,$FF,$00,$00                                             ;
 $BB8D DEFB $44,$00,$10,$10,$17,$17,$10,$10,$00                                             ; }
 $BB96 DEFB $02,$83,$02,$83,$02,$80,$6F,$80,$6F,$40,$01,$03,$08,$2F,$3C,$03,$3C,$02,$03,$03 ; {Nasty
 $BBAA DEFB $03,$00,$70,$00,$70,$83,$02,$83,$02,$40,$02,$00,$80,$33,$08,$03,$04,$00,$03,$03 ; data
 $BBBE DEFB $03,$80,$77,$80,$77,$83,$02,$83,$02,$40,$00,$00,$80,$33,$18,$03,$18,$00,$03,$03 ;
 $BBD2 DEFB $00,$80,$6A,$80,$6A,$83,$02,$83,$02,$43,$03,$00,$98,$97,$0C,$03,$0C,$00,$03,$03 ;
 $BBE6 DEFB $00,$83,$02,$83,$02,$00,$65,$00,$65,$42,$04,$03,$10,$9F,$50,$03,$50,$01,$03,$03 ;
 $BBFA DEFB $03,$83,$02,$83,$02,$83,$02,$83,$02,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $BC0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BC22 DEFB $00,$00,$00,$04,$08,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 11
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_11)
b$BC2A DEFB $49,$24,$92                                                                     ; {Static
 $BC2D DEFB $49,$24,$92                                                                     ; characters
 $BC30 DEFB $49,$24,$92                                                                     ;
 $BC33 DEFB $01,$24,$92                                                                     ;
 $BC36 DEFB $49,$00,$00                                                                     ;
 $BC39 DEFB $00,$24,$92                                                                     ;
 $BC3C DEFB $40,$00,$92                                                                     ;
 $BC3F DEFB $01,$08,$02                                                                     ;
 $BC42 DEFB $48,$00,$00                                                                     ;
 $BC45 DEFB $10,$00,$00                                                                     ;
 $BC48 DEFB $00,$00,$02                                                                     ;
 $BC4B DEFB $01,$0A,$02                                                                     ;
 $BC4E DEFB $40,$00,$00                                                                     ;
 $BC51 DEFB $14,$00,$00                                                                     ;
 $BC54 DEFB $00,$00,$00                                                                     ;
 $BC57 DEFB $01,$0A,$DA                                                                     ;
 $BC5A DEFB $40,$00,$00                                                                     ;
 $BC5D DEFB $14,$00,$00                                                                     ;
 $BC60 DEFB $09,$20,$00                                                                     ;
 $BC63 DEFB $01,$0A,$02                                                                     ;
 $BC66 DEFB $24,$92,$49                                                                     ;
 $BC69 DEFB $14,$24,$92                                                                     ;
 $BC6C DEFB $49,$24,$92                                                                     ;
 $BC6F DEFB $49,$0A,$12                                                                     ;
 $BC72 DEFB $20,$12,$48                                                                     ;
 $BC75 DEFB $14,$22,$49                                                                     ;
 $BC78 DEFB $49,$24,$92                                                                     ;
 $BC7B DEFB $10,$0A,$11                                                                     ;
 $BC7E DEFB $20,$00,$00                                                                     ;
 $BC81 DEFB $14,$12,$49                                                                     ;
 $BC84 DEFB $24,$A4,$92                                                                     ;
 $BC87 DEFB $14,$0A,$00                                                                     ;
 $BC8A DEFB $20,$00,$00                                                                     ;
 $BC8D DEFB $14,$00,$00                                                                     ;
 $BC90 DEFB $02,$00,$02                                                                     ;
 $BC93 DEFB $14,$08,$00                                                                     ;
 $BC96 DEFB $20,$00,$00                                                                     ;
 $BC99 DEFB $14,$00,$00                                                                     ;
 $BC9C DEFB $02,$80,$02                                                                     ;
 $BC9F DEFB $14,$22,$49                                                                     ;
 $BCA2 DEFB $24,$92,$40                                                                     ;
 $BCA5 DEFB $14,$00,$00                                                                     ;
 $BCA8 DEFB $02,$80,$02                                                                     ;
 $BCAB DEFB $14,$24,$92                                                                     ;
 $BCAE DEFB $24,$92,$48                                                                     ;
 $BCB1 DEFB $1B,$F6,$DB                                                                     ;
 $BCB4 DEFB $02,$80,$02                                                                     ;
 $BCB7 DEFB $14,$00,$02                                                                     ;
 $BCBA DEFB $24,$92,$49                                                                     ;
 $BCBD DEFB $00,$00,$00                                                                     ;
 $BCC0 DEFB $03,$7F,$FA                                                                     ;
 $BCC3 DEFB $14,$00,$02                                                                     ;
 $BCC6 DEFB $24,$92,$49                                                                     ;
 $BCC9 DEFB $20,$00,$00                                                                     ;
 $BCCC DEFB $00,$00,$02                                                                     ;
 $BCCF DEFB $15,$B6,$DA                                                                     ;
 $BCD2 DEFB $49,$00,$01                                                                     ;
 $BCD5 DEFB $24,$00,$00                                                                     ;
 $BCD8 DEFB $0D,$B6,$02                                                                     ;
 $BCDB DEFB $14,$00,$02                                                                     ;
 $BCDE DEFB $48,$00,$01                                                                     ;
 $BCE1 DEFB $24,$80,$00                                                                     ;
 $BCE4 DEFB $00,$00,$02                                                                     ;
 $BCE7 DEFB $14,$00,$02                                                                     ;
 $BCEA DEFB $40,$00,$DB                                                                     ;
 $BCED DEFB $44,$96,$C0                                                                     ;
 $BCF0 DEFB $00,$36,$DA                                                                     ;
 $BCF3 DEFB $14,$24,$92                                                                     ;
 $BCF6 DEFB $4D,$B0,$00                                                                     ;
 $BCF9 DEFB $00,$00,$00                                                                     ;
 $BCFC DEFB $00,$00,$00                                                                     ;
 $BCFF DEFB $14,$22,$49                                                                     ;
 $BD02 DEFB $40,$00,$00                                                                     ;
 $BD05 DEFB $00,$00,$00                                                                     ;
 $BD08 DEFB $00,$00,$00                                                                     ;
 $BD0B DEFB $14,$22,$49                                                                     ;
 $BD0E DEFB $49,$24,$92                                                                     ;
 $BD11 DEFB $49,$24,$92                                                                     ;
 $BD14 DEFB $49,$24,$92                                                                     ;
 $BD17 DEFB $49,$22,$49                                                                     ; }
 $BD1A DEFB $72,$00,$45,$69                                                                 ; Wall
                                                                                            ; attributes
 $BD1E DEFW $7800                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $BD20 DEFB $10                                                                             ; Next room
                                                                                            ; UP
 $BD21 DEFB $11                                                                             ; Next room
                                                                                            ; DOWN
 $BD22 DEFB $11                                                                             ; Next room
                                                                                            ; LEFT
 $BD23 DEFB $12                                                                             ; Next room
                                                                                            ; RIGHT
 $BD24 DEFB $08                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $BD25 DEFB $7F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $BD26 DEFB $0F                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $BD27 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $BD28 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $BD29 DEFB $00
 $BD2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $BD2B DEFB $00                                                                             ; Crusher
                                                                                            ; flag
 $BD2C DEFB $00
 $BD2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BD35 DEFB $00,$00
 $BD37 DEFB $00,$00,$3F,$50,$5F,$A9,$AE,$AF                                                 ; Coal UDG
 $BD3F DEFB $30,$03,$06                                                                     ; {Coal
 $BD42 DEFB $31,$16,$0B                                                                     ; positions
 $BD45 DEFB $32,$1D,$0E                                                                     ; }
 $BD48 DEFB $33,$0F,$14,$34,$0B,$11
 $BD4E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $BD57 DEFB $72,$FF,$11,$11,$11,$FF,$11,$11,$11                                             ; character
 $BD60 DEFB $69,$FF,$22,$FF,$88,$FF,$22,$FF,$88                                             ; graphics
 $BD69 DEFB $44,$FF,$66,$99,$99,$66,$FF,$00,$00                                             ; #UDGSTR(#PC)
 $BD72 DEFB $45,$E0,$40,$E0,$A0,$BE,$B3,$BD,$E7                                             ;
 $BD7B DEFB $45,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$00                                             ;
 $BD84 DEFB $45,$FF,$FF,$7F,$00,$00,$00,$00,$00                                             ;
 $BD8D DEFB $45,$7F,$7F,$7F,$00,$00,$00,$00,$00                                             ; }
 $BD96 DEFB $00,$80,$76,$80,$76,$03,$03,$03,$03,$45,$00,$00,$E8,$77,$08,$03,$08,$00,$03,$03 ; {Nasty
 $BDAA DEFB $02,$03,$03,$03,$03,$00,$77,$00,$77,$40,$02,$03,$20,$27,$35,$03,$35,$03,$03,$03 ; data
 $BDBE DEFB $03,$03,$03,$03,$03,$00,$77,$00,$77,$40,$01,$02,$C0,$27,$35,$03,$35,$03,$03,$03 ;
 $BDD2 DEFB $80,$80,$76,$80,$76,$80,$76,$80,$76,$40,$04,$03,$48,$4F,$60,$03,$60,$01,$03,$03 ;
 $BDE6 DEFB $03,$03,$03,$03,$03,$80,$76,$80,$76,$40,$03,$02,$A8,$4F,$30,$03,$30,$02,$03,$03 ;
 $BDFA DEFB $03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03 ;
 $BE0E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BE22 DEFB $00,$00,$00,$00,$00,$00,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 12
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_12)
b$BE2A DEFB $49,$24,$92                                                                     ; {Static
 $BE2D DEFB $49,$24,$92                                                                     ; characters
 $BE30 DEFB $49,$24,$92                                                                     ;
 $BE33 DEFB $49,$21,$82                                                                     ;
 $BE36 DEFB $49,$24,$94                                                                     ;
 $BE39 DEFB $86,$00,$00                                                                     ;
 $BE3C DEFB $00,$49,$0A                                                                     ;
 $BE3F DEFB $4A,$41,$82                                                                     ;
 $BE42 DEFB $49,$25,$20                                                                     ;
 $BE45 DEFB $1C,$00,$00                                                                     ;
 $BE48 DEFB $00,$00,$3C                                                                     ;
 $BE4B DEFB $84,$01,$82                                                                     ;
 $BE4E DEFB $4A,$48,$00                                                                     ;
 $BE51 DEFB $00,$06,$DB                                                                     ;
 $BE54 DEFB $60,$00,$00                                                                     ;
 $BE57 DEFB $1C,$01,$82                                                                     ;
 $BE5A DEFB $50,$00,$00                                                                     ;
 $BE5D DEFB $00,$01,$82                                                                     ;
 $BE60 DEFB $40,$00,$00                                                                     ;
 $BE63 DEFB $00,$01,$82                                                                     ;
 $BE66 DEFB $40,$00,$00                                                                     ;
 $BE69 DEFB $00,$01,$84                                                                     ;
 $BE6C DEFB $40,$00,$00                                                                     ;
 $BE6F DEFB $00,$01,$82                                                                     ;
 $BE72 DEFB $80,$00,$00                                                                     ;
 $BE75 DEFB $00,$01,$80                                                                     ;
 $BE78 DEFB $4D,$80,$00                                                                     ;
 $BE7B DEFB $00,$01,$82                                                                     ;
 $BE7E DEFB $00,$00,$00                                                                     ;
 $BE81 DEFB $00,$01,$80                                                                     ;
 $BE84 DEFB $48,$00,$00                                                                     ;
 $BE87 DEFB $00,$01,$82                                                                     ;
 $BE8A DEFB $00,$00,$00                                                                     ;
 $BE8D DEFB $00,$01,$80                                                                     ;
 $BE90 DEFB $48,$00,$00                                                                     ;
 $BE93 DEFB $00,$01,$82                                                                     ;
 $BE96 DEFB $6D,$80,$00                                                                     ;
 $BE99 DEFB $00,$36,$DA                                                                     ;
 $BE9C DEFB $89,$36,$C0                                                                     ;
 $BE9F DEFB $00,$36,$DA                                                                     ;
 $BEA2 DEFB $49,$00,$00                                                                     ;
 $BEA5 DEFB $00,$04,$92                                                                     ;
 $BEA8 DEFB $40,$24,$80                                                                     ;
 $BEAB DEFB $00,$00,$D2                                                                     ;
 $BEAE DEFB $4A,$00,$00                                                                     ;
 $BEB1 DEFB $00,$24,$A4                                                                     ;
 $BEB4 DEFB $40,$25,$00                                                                     ;
 $BEB7 DEFB $00,$00,$E2                                                                     ;
 $BEBA DEFB $49,$00,$00                                                                     ;
 $BEBD DEFB $6D,$A4,$92                                                                     ;
 $BEC0 DEFB $01,$24,$90                                                                     ;
 $BEC3 DEFB $00,$36,$92                                                                     ;
 $BEC6 DEFB $49,$36,$C0                                                                     ;
 $BEC9 DEFB $00,$44,$92                                                                     ;
 $BECC DEFB $09,$24,$A0                                                                     ;
 $BECF DEFB $00,$00,$92                                                                     ;
 $BED2 DEFB $49,$00,$00                                                                     ;
*$BED5 DEFB $00,$04,$94                                                                     ;
 $BED8 DEFB $09,$24,$93                                                                     ;
 $BEDB DEFB $6C,$01,$12                                                                     ;
 $BEDE DEFB $49,$36,$D8                                                                     ;
 $BEE1 DEFB $01,$B6,$DB                                                                     ;
 $BEE4 DEFB $49,$00,$92                                                                     ;
 $BEE7 DEFB $00,$04,$92                                                                     ;
 $BEEA DEFB $49,$28,$00                                                                     ;
 $BEED DEFB $00,$00,$00                                                                     ;
 $BEF0 DEFB $00,$01,$12                                                                     ;
 $BEF3 DEFB $48,$08,$92                                                                     ;
 $BEF6 DEFB $B6,$DB,$6D                                                                     ;
 $BEF9 DEFB $B6,$DB,$6D                                                                     ;
 $BEFC DEFB $B6,$DB,$6D                                                                     ;
 $BEFF DEFB $B6,$DB,$6D                                                                     ;
 $BF02 DEFB $B6,$DB,$6D                                                                     ;
 $BF05 DEFB $B6,$DB,$6D                                                                     ;
 $BF08 DEFB $B6,$DB,$6D                                                                     ;
 $BF0B DEFB $B6,$DB,$6D                                                                     ;
 $BF0E DEFB $B6,$DB,$6D                                                                     ;
 $BF11 DEFB $B6,$DB,$6D                                                                     ;
 $BF14 DEFB $B6,$DB,$6D                                                                     ;
 $BF17 DEFB $B6,$DB,$6D                                                                     ; }
 $BF1A DEFB $46,$56,$44,$02                                                                 ; Wall
                                                                                            ; attributes
 $BF1E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $BF20 DEFB $13                                                                             ; Next room
                                                                                            ; UP
 $BF21 DEFB $12                                                                             ; Next room
                                                                                            ; DOWN
 $BF22 DEFB $11                                                                             ; Next room
                                                                                            ; LEFT
 $BF23 DEFB $12                                                                             ; Next room
                                                                                            ; RIGHT
 $BF24 DEFB $78                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $BF25 DEFB $A7                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $BF26 DEFB $0D                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $BF27 DEFB $13                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $BF28 DEFB $A1                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $BF29 DEFB $70
 $BF2A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $BF2B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $BF2C DEFB $A1
 $BF2D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BF35 DEFB $00,$00
 $BF37 DEFB $00,$00,$18,$3C,$2C,$18,$00,$7E                                                 ; Coal UDG
 $BF3F DEFB $35,$04,$10                                                                     ; {Coal
 $BF42 DEFB $36,$18,$0F                                                                     ; positions
 $BF45 DEFB $37,$0E,$04                                                                     ; }
 $BF48 DEFB $00,$00,$00,$00,$00,$00
 $BF4E DEFB $42,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $BF57 DEFB $46,$7B,$7B,$7B,$7B,$7A,$36,$34,$34                                             ; character
 $BF60 DEFB $02,$FF,$79,$71,$3B,$8E,$E0,$F0,$7E                                             ; graphics
 $BF69 DEFB $45,$FF,$10,$25,$40,$FF,$00,$00,$00                                             ; #UDGSTR(#PC)
 $BF72 DEFB $42,$3E,$1E,$0C,$06,$1F,$19,$33,$3E                                             ;
 $BF7B DEFB $56,$C0,$30,$08,$44,$A4,$29,$29,$11                                             ;
 $BF84 DEFB $44,$28,$1C,$38,$70,$28,$1C,$38,$70                                             ;
 $BF8D DEFB $46,$34,$34,$14,$1C,$18,$18,$18,$0C                                             ; }
 $BF96 DEFB $00,$03,$03,$03,$03,$00,$76,$00,$76,$43,$00,$03,$18,$5F,$30,$03,$30,$01,$03,$03 ; {Nasty
 $BFAA DEFB $00,$03,$03,$03,$03,$00,$76,$00,$76,$44,$01,$03,$C0,$4F,$14,$03,$14,$00,$03,$03 ; data
 $BFBE DEFB $02,$80,$6D,$80,$6D,$03,$03,$03,$03,$40,$03,$00,$58,$1F,$90,$03,$90,$01,$03,$03 ;
 $BFD2 DEFB $03,$80,$77,$80,$77,$03,$03,$03,$03,$40,$02,$01,$58,$AF,$18,$03,$18,$00,$03,$03 ;
 $BFE6 DEFB $02,$80,$77,$80,$77,$03,$03,$03,$03,$40,$05,$01,$D0,$AF,$20,$03,$20,$00,$03,$03 ;
 $BFFA DEFB $03,$80,$6D,$80,$6D,$03,$03,$03,$03,$40,$04,$00,$D0,$1F,$48,$03,$48,$02,$03,$03 ;
 $C00E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $C022 DEFB $18,$67,$18,$38,$58,$67,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 13
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_13)
b$C02A DEFB $49,$24,$92                                                                     ; {Static
 $C02D DEFB $49,$24,$92                                                                     ; characters
 $C030 DEFB $49,$24,$92                                                                     ;
 $C033 DEFB $49,$21,$82                                                                     ;
 $C036 DEFB $44,$92,$49                                                                     ;
 $C039 DEFB $08,$92,$49                                                                     ;
 $C03C DEFB $20,$00,$00                                                                     ;
 $C03F DEFB $00,$01,$82                                                                     ;
 $C042 DEFB $00,$00,$00                                                                     ;
 $C045 DEFB $01,$22,$48                                                                     ;
 $C048 DEFB $00,$00,$00                                                                     ;
 $C04B DEFB $00,$01,$82                                                                     ;
 $C04E DEFB $00,$00,$00                                                                     ;
 $C051 DEFB $00,$24,$40                                                                     ;
 $C054 DEFB $00,$00,$00                                                                     ;
 $C057 DEFB $00,$01,$82                                                                     ;
 $C05A DEFB $49,$26,$D8                                                                     ;
 $C05D DEFB $00,$04,$40                                                                     ;
 $C060 DEFB $00,$00,$00                                                                     ;
 $C063 DEFB $00,$01,$82                                                                     ;
 $C066 DEFB $48,$00,$00                                                                     ;
 $C069 DEFB $00,$04,$40                                                                     ;
 $C06C DEFB $00,$00,$00                                                                     ;
 $C06F DEFB $00,$01,$82                                                                     ;
 $C072 DEFB $40,$00,$19                                                                     ;
 $C075 DEFB $24,$92,$40                                                                     ;
 $C078 DEFB $00,$00,$00                                                                     ;
 $C07B DEFB $E9,$24,$92                                                                     ;
 $C07E DEFB $4D,$80,$01                                                                     ;
 $C081 DEFB $20,$00,$00                                                                     ;
 $C084 DEFB $18,$00,$00                                                                     ;
 $C087 DEFB $00,$24,$92                                                                     ;
 $C08A DEFB $4D,$80,$49                                                                     ;
 $C08D DEFB $20,$00,$00                                                                     ;
 $C090 DEFB $18,$00,$00                                                                     ;
 $C093 DEFB $00,$04,$4A                                                                     ;
 $C096 DEFB $4D,$80,$00                                                                     ;
 $C099 DEFB $00,$00,$00                                                                     ;
 $C09C DEFB $18,$00,$00                                                                     ;
 $C09F DEFB $00,$04,$4A                                                                     ;
 $C0A2 DEFB $49,$00,$00                                                                     ;
 $C0A5 DEFB $00,$00,$00                                                                     ;
 $C0A8 DEFB $18,$00,$00                                                                     ;
 $C0AB DEFB $00,$04,$4A                                                                     ;
 $C0AE DEFB $25,$24,$9B                                                                     ;
 $C0B1 DEFB $6C,$00,$DB                                                                     ;
 $C0B4 DEFB $6C,$00,$00                                                                     ;
 $C0B7 DEFB $00,$00,$0A                                                                     ;
 $C0BA DEFB $25,$24,$00                                                                     ;
 $C0BD DEFB $18,$00,$00                                                                     ;
 $C0C0 DEFB $00,$00,$00                                                                     ;
 $C0C3 DEFB $00,$00,$02                                                                     ;
 $C0C6 DEFB $25,$00,$00                                                                     ;
 $C0C9 DEFB $18,$00,$00                                                                     ;
 $C0CC DEFB $00,$00,$00                                                                     ;
 $C0CF DEFB $00,$00,$02                                                                     ;
 $C0D2 DEFB $24,$00,$00                                                                     ;
 $C0D5 DEFB $18,$00,$00                                                                     ;
 $C0D8 DEFB $00,$00,$00                                                                     ;
 $C0DB DEFB $00,$00,$02                                                                     ;
 $C0DE DEFB $24,$00,$00                                                                     ;
 $C0E1 DEFB $18,$00,$00                                                                     ;
 $C0E4 DEFB $00,$00,$02                                                                     ;
 $C0E7 DEFB $2D,$B6,$DA                                                                     ;
 $C0EA DEFB $24,$00,$00                                                                     ;
 $C0ED DEFB $18,$00,$00                                                                     ;
 $C0F0 DEFB $00,$24,$92                                                                     ;
 $C0F3 DEFB $24,$91,$82                                                                     ;
 $C0F6 DEFB $24,$00,$00                                                                     ;
 $C0F9 DEFB $18,$00,$00                                                                     ;
 $C0FC DEFB $00,$22,$49                                                                     ;
 $C0FF DEFB $24,$91,$82                                                                     ;
 $C102 DEFB $24,$90,$00                                                                     ;
 $C105 DEFB $18,$00,$3A                                                                     ;
 $C108 DEFB $49,$22,$49                                                                     ;
 $C10B DEFB $24,$91,$82                                                                     ;
 $C10E DEFB $24,$94,$92                                                                     ;
 $C111 DEFB $49,$24,$92                                                                     ;
 $C114 DEFB $49,$22,$49                                                                     ;
 $C117 DEFB $24,$91,$82                                                                     ; }
 $C11A DEFB $44,$04,$46,$69                                                                 ; Wall
                                                                                            ; attributes
 $C11E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $C120 DEFB $14                                                                             ; Next room
                                                                                            ; UP
 $C121 DEFB $12                                                                             ; Next room
                                                                                            ; DOWN
 $C122 DEFB $10                                                                             ; Next room
                                                                                            ; LEFT
 $C123 DEFB $13                                                                             ; Next room
                                                                                            ; RIGHT
 $C124 DEFB $78                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $C125 DEFB $8F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $C126 DEFB $0E                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $C127 DEFB $0F                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $C128 DEFB $51                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $C129 DEFB $32
 $C12A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $C12B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $C12C DEFB $51
 $C12D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C135 DEFB $00,$00
 $C137 DEFB $00,$00,$78,$46,$BF,$DF,$9E,$F8                                                 ; Coal UDG
 $C13F DEFB $38,$06,$14                                                                     ; {Coal
 $C142 DEFB $39,$0A,$07                                                                     ; positions
 $C145 DEFB $3A,$04,$05                                                                     ; }
 $C148 DEFB $00,$00,$00,$00,$00,$00
 $C14E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $C157 DEFB $44,$11,$11,$11,$EE,$11,$11,$11,$EE                                             ; character
 $C160 DEFB $69,$FF,$08,$FF,$80,$FF,$08,$FF,$80                                             ; graphics
 $C169 DEFB $72,$FF,$E7,$E7,$E7,$C3,$C3,$C3,$81                                             ; #UDGSTR(#PC)
 $C172 DEFB $42,$03,$F8,$04,$83,$60,$1F,$00,$FF                                             ;
 $C17B DEFB $04,$00,$00,$04,$04,$0C,$0C,$1E,$1F                                             ;
 $C184 DEFB $46,$1C,$38,$14,$0E,$1C,$38,$14,$0E                                             ;
 $C18D DEFB $45,$3F,$3F,$1F,$1F,$0F,$0F,$07,$03                                             ; }
 $C196 DEFB $02,$00,$00,$00,$00,$00,$6C,$00,$6C,$40,$01,$03,$30,$27,$74,$05,$5C,$02,$00,$00 ; {Nasty
 $C1AA DEFB $03,$00,$00,$00,$00,$80,$6B,$80,$6B,$40,$00,$02,$E8,$27,$74,$07,$74,$02,$00,$00 ; data
 $C1BE DEFB $00,$80,$60,$00,$60,$80,$6C,$00,$6D,$43,$00,$02,$77,$8F,$38,$07,$07,$01,$00,$00 ;
 $C1D2 DEFB $03,$00,$69,$00,$69,$00,$00,$00,$00,$40,$04,$01,$50,$77,$30,$06,$30,$00,$00,$00 ;
 $C1E6 DEFB $02,$80,$6A,$80,$6A,$00,$00,$00,$00,$40,$05,$01,$50,$5C,$50,$01,$35,$01,$00,$00 ;
 $C1FA DEFB $03,$80,$69,$80,$69,$00,$00,$00,$00,$40,$03,$00,$50,$27,$50,$07,$50,$01,$00,$00 ;
 $C20E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $C222 DEFB $70,$7F,$70,$9C,$C8,$7F,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Room 14
;
; The current room is copied into #R$C42A
;
; .
;
; #UDGXSCR(#PC)(Room_14)
b$C22A DEFB $00,$1E,$00                                                                     ; {Static
 $C22D DEFB $00,$00,$00                                                                     ; characters
 $C230 DEFB $00,$00,$00                                                                     ;
 $C233 DEFB $00,$1E,$00                                                                     ;
 $C236 DEFB $00,$DB,$C0                                                                     ;
 $C239 DEFB $00,$00,$00                                                                     ;
 $C23C DEFB $00,$00,$00                                                                     ;
 $C23F DEFB $00,$DB,$C0                                                                     ;
 $C242 DEFB $06,$DB,$78                                                                     ;
 $C245 DEFB $00,$00,$01                                                                     ;
 $C248 DEFB $E0,$00,$00                                                                     ;
 $C24B DEFB $06,$DB,$78                                                                     ;
 $C24E DEFB $36,$DB,$6F                                                                     ;
 $C251 DEFB $00,$DE,$02                                                                     ;
 $C254 DEFB $40,$1B,$C0                                                                     ;
 $C257 DEFB $36,$DB,$6F                                                                     ;
 $C25A DEFB $40,$00,$02                                                                     ;
 $C25D DEFB $02,$DA,$02                                                                     ;
 $C260 DEFB $40,$5B,$40                                                                     ;
 $C263 DEFB $40,$00,$02                                                                     ;
 $C266 DEFB $40,$00,$02                                                                     ;
 $C269 DEFB $01,$24,$02                                                                     ;
 $C26C DEFB $40,$24,$80                                                                     ;
 $C26F DEFB $40,$00,$02                                                                     ;
 $C272 DEFB $40,$00,$02                                                                     ;
 $C275 DEFB $49,$24,$92                                                                     ;
 $C278 DEFB $49,$24,$92                                                                     ;
 $C27B DEFB $40,$00,$00                                                                     ;
 $C27E DEFB $4D,$B6,$00                                                                     ;
 $C281 DEFB $00,$00,$00                                                                     ;
 $C284 DEFB $00,$00,$00                                                                     ;
 $C287 DEFB $40,$00,$00                                                                     ;
 $C28A DEFB $40,$00,$00                                                                     ;
 $C28D DEFB $00,$00,$00                                                                     ;
 $C290 DEFB $00,$00,$00                                                                     ;
 $C293 DEFB $40,$36,$DA                                                                     ;
 $C296 DEFB $40,$00,$00                                                                     ;
 $C299 DEFB $00,$00,$00                                                                     ;
 $C29C DEFB $00,$00,$00                                                                     ;
 $C29F DEFB $41,$B4,$92                                                                     ;
 $C2A2 DEFB $4D,$B6,$00                                                                     ;
 $C2A5 DEFB $00,$00,$00                                                                     ;
 $C2A8 DEFB $00,$00,$00                                                                     ;
 $C2AB DEFB $4D,$A4,$02                                                                     ;
 $C2AE DEFB $43,$00,$00                                                                     ;
 $C2B1 DEFB $00,$00,$00                                                                     ;
 $C2B4 DEFB $00,$00,$1B                                                                     ;
 $C2B7 DEFB $4D,$20,$02                                                                     ;
 $C2BA DEFB $43,$00,$02                                                                     ;
 $C2BD DEFB $6D,$80,$00                                                                     ;
 $C2C0 DEFB $00,$06,$DB                                                                     ;
 $C2C3 DEFB $49,$00,$02                                                                     ;
 $C2C6 DEFB $43,$00,$02                                                                     ;
 $C2C9 DEFB $00,$00,$00                                                                     ;
 $C2CC DEFB $00,$0C,$00                                                                     ;
 $C2CF DEFB $00,$00,$02                                                                     ;
 $C2D2 DEFB $49,$00,$92                                                                     ;
 $C2D5 DEFB $00,$00,$00                                                                     ;
 $C2D8 DEFB $00,$0C,$00                                                                     ;
 $C2DB DEFB $00,$00,$02                                                                     ;
 $C2DE DEFB $48,$00,$12                                                                     ;
 $C2E1 DEFB $00,$00,$00                                                                     ;
 $C2E4 DEFB $00,$0C,$00                                                                     ;
 $C2E7 DEFB $4D,$B6,$DA                                                                     ;
 $C2EA DEFB $40,$00,$02                                                                     ;
 $C2ED DEFB $00,$00,$00                                                                     ;
 $C2F0 DEFB $00,$0C,$00                                                                     ;
 $C2F3 DEFB $40,$01,$82                                                                     ;
 $C2F6 DEFB $40,$00,$02                                                                     ;
 $C2F9 DEFB $00,$00,$00                                                                     ;
 $C2FC DEFB $00,$0C,$00                                                                     ;
 $C2FF DEFB $40,$01,$82                                                                     ;
 $C302 DEFB $80,$00,$04                                                                     ;
 $C305 DEFB $92,$49,$24                                                                     ;
 $C308 DEFB $92,$49,$24                                                                     ;
 $C30B DEFB $92,$01,$84                                                                     ;
 $C30E DEFB $92,$49,$24                                                                     ;
 $C311 DEFB $92,$49,$24                                                                     ;
 $C314 DEFB $92,$49,$24                                                                     ;
 $C317 DEFB $92,$01,$84                                                                     ; }
 $C31A DEFB $44,$44,$45,$69                                                                 ; Wall
                                                                                            ; attributes
 $C31E DEFW $849C                                                                           ; Offset for
                                                                                            ; Monty's
                                                                                            ; graphic
 $C320 DEFB $14                                                                             ; Next room
                                                                                            ; UP
 $C321 DEFB $13                                                                             ; Next room
                                                                                            ; DOWN
 $C322 DEFB $14                                                                             ; Next room
                                                                                            ; LEFT
 $C323 DEFB $15                                                                             ; Next room
                                                                                            ; RIGHT
 $C324 DEFB $40                                                                             ; Collectable
                                                                                            ; item x
                                                                                            ; co-ordinate
 $C325 DEFB $5F                                                                             ; Collectable
                                                                                            ; item y
                                                                                            ; co-ordinate
 $C326 DEFB $04                                                                             ; Collectable
                                                                                            ; item
                                                                                            ; graphic
                                                                                            ; index
 $C327 DEFB $00                                                                             ; Crusher x
                                                                                            ; co-ordinate
 $C328 DEFB $00                                                                             ; Crusher y
                                                                                            ; co-ordinate
 $C329 DEFB $60
 $C32A DEFB $00                                                                             ; Crusher
                                                                                            ; time
 $C32B DEFB $01                                                                             ; Crusher
                                                                                            ; flag
 $C32C DEFB $00
 $C32D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C335 DEFB $00,$00
 $C337 DEFB $00,$00,$0C,$FA,$A5,$75,$DA,$EC                                                 ; Coal UDG
 $C33F DEFB $3C,$10,$13                                                                     ; {Coal
 $C342 DEFB $3D,$05,$0F                                                                     ; positions
 $C345 DEFB $3E,$02,$0B                                                                     ; }
 $C348 DEFB $3F,$0F,$0B,$00,$00,$00
 $C34E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00                                             ; {Static
 $C357 DEFB $44,$01,$02,$06,$0A,$12,$22,$62,$A2                                             ; character
 $C360 DEFB $69,$E3,$37,$B7,$E3,$3E,$73,$7B,$3E                                             ; graphics
 $C369 DEFB $72,$FF,$87,$D8,$0F,$F0,$FF,$00,$00                                             ; #UDGSTR(#PC)
 $C372 DEFB $42,$81,$08,$4C,$10,$CA,$80,$2A,$08                                             ;
 $C37B DEFB $44,$22,$22,$22,$22,$22,$22,$22,$22                                             ;
 $C384 DEFB $45,$10,$5C,$DE,$D6,$C6,$D6,$DE,$5C                                             ;
 $C38D DEFB $44,$80,$40,$20,$30,$28,$24,$22,$23                                             ; }
 $C396 DEFB $00,$00,$00,$00,$00,$80,$66,$00,$67,$45,$00,$03,$74,$77,$80,$03,$34,$01,$00,$00 ; {Nasty
 $C3AA DEFB $00,$00,$00,$00,$00,$00,$6A,$00,$6A,$46,$00,$02,$4E,$2F,$50,$02,$0E,$01,$00,$00 ; data
 $C3BE DEFB $02,$00,$00,$00,$00,$80,$65,$80,$65,$40,$03,$02,$EE,$7F,$18,$06,$16,$01,$00,$00 ;
 $C3D2 DEFB $03,$00,$60,$00,$60,$00,$66,$00,$66,$40,$02,$03,$D8,$7F,$18,$00,$18,$01,$00,$00 ;
 $C3E6 DEFB $03,$80,$66,$00,$67,$80,$66,$00,$67,$40,$00,$00,$18,$7F,$00,$01,$BD,$00,$00,$00 ;
 $C3FA DEFB $03,$00,$5F,$00,$60,$80,$60,$00,$60,$40,$00,$02,$00,$AF,$00,$00,$00,$00,$00,$00 ;
 $C40E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $C422 DEFB $58,$4F,$58,$7C,$A0,$4F,$00,$00                                                 ; Moving
                                                                                            ; platforms

; Static characters on screen
;
; Each character is 3 bits ie: 3 bytes for 8 characters
; .
; #N$0C bytes per line, #N$F0 bytes per page
g$C42A DEFB $92,$48,$49
 $C42D DEFB $24,$92,$49
 $C430 DEFB $24,$92,$49
 $C433 DEFB $24,$C9,$24
 $C436 DEFB $92,$42,$64
 $C439 DEFB $49,$20,$00
 $C43C DEFB $00,$04,$92
 $C43F DEFB $90,$99,$24
 $C442 DEFB $92,$42,$92
 $C445 DEFB $48,$00,$00
 $C448 DEFB $00,$00,$12
 $C44B DEFB $49,$19,$24
 $C44E DEFB $92,$12,$80
 $C451 DEFB $00,$00,$00
 $C454 DEFB $00,$00,$30
 $C457 DEFB $01,$13,$24
 $C45A DEFB $24,$90,$00
 $C45D DEFB $00,$00,$00
 $C460 DEFB $00,$00,$30
 $C463 DEFB $00,$02,$49
 $C466 DEFB $20,$00,$00
 $C469 DEFB $00,$00,$00
 $C46C DEFB $00,$00,$30
 $C46F DEFB $00,$00,$31
 $C472 DEFB $20,$00,$00
 $C475 DEFB $00,$00,$00
 $C478 DEFB $02,$80,$30
 $C47B DEFB $00,$00,$31
 $C47E DEFB $4D,$B6,$DB
 $C481 DEFB $6D,$B6,$DB
 $C484 DEFB $6D,$B6,$30
 $C487 DEFB $0D,$B6,$32
 $C48A DEFB $40,$00,$00
 $C48D DEFB $00,$00,$30
 $C490 DEFB $00,$60,$30
 $C493 DEFB $00,$00,$32
 $C496 DEFB $40,$00,$00
 $C499 DEFB $00,$00,$30
 $C49C DEFB $00,$60,$30
 $C49F DEFB $00,$00,$32
 $C4A2 DEFB $40,$00,$00
 $C4A5 DEFB $00,$00,$30
 $C4A8 DEFB $00,$60,$30
 $C4AB DEFB $00,$00,$32
 $C4AE DEFB $48,$00,$00
 $C4B1 DEFB $01,$B6,$30
 $C4B4 DEFB $00,$60,$30
 $C4B7 DEFB $00,$00,$32
 $C4BA DEFB $49,$00,$00
 $C4BD DEFB $00,$00,$30
 $C4C0 DEFB $00,$60,$38
 $C4C3 DEFB $00,$50,$3A
 $C4C6 DEFB $49,$20,$00
 $C4C9 DEFB $00,$00,$33
 $C4CC DEFB $6D,$E0,$09
 $C4CF DEFB $24,$92,$4A
 $C4D2 DEFB $49,$24,$00
 $C4D5 DEFB $00,$00,$30
 $C4D8 DEFB $24,$E0,$00
 $C4DB DEFB $C0,$A9,$22
 $C4DE DEFB $40,$04,$00
 $C4E1 DEFB $00,$00,$30
 $C4E4 DEFB $24,$E0,$00
 $C4E7 DEFB $C0,$29,$22
 $C4EA DEFB $40,$04,$00
 $C4ED DEFB $00,$00,$30
 $C4F0 DEFB $24,$E0,$00
 $C4F3 DEFB $C0,$25,$22
 $C4F6 DEFB $4C,$06,$DB
 $C4F9 DEFB $00,$00,$30
 $C4FC DEFB $24,$E0,$00
 $C4FF DEFB $C0,$05,$22
 $C502 DEFB $40,$00,$00
 $C505 DEFB $00,$0A,$38
 $C508 DEFB $24,$F0,$00
 $C50B DEFB $C0,$04,$A2
 $C50E DEFB $49,$24,$89
 $C511 DEFB $24,$92,$49
 $C514 DEFB $24,$92,$48
 $C517 DEFB $C0,$00,$92

; "Water" attribute
;
; Monty can walk through any cell with this attribute.
; Used by the routines in #R$8D0F and #R$8D2E.
g$C51A DEFB $4D

; "Fire" attribute
;
; If Monty touches this attribute, he will die.
; Used by the routines in #R$8D0F and #R$8D2E.
g$C51B DEFB $44

; "Ladder" attribute
;
; If Monty touches this attribute, he can climb around it.
; Used by the routines in #R$8D0F and #R$8D2E.
g$C51C DEFB $45

; "Wall" attribute
;
; Monty can't walk through any cell with this attribute.
; Used by the routines in #R$8D0F and #R$8D2E.
;
; .
;
; This attribute may have had a previous use, but the code at #8C3D
; sets it to a wall regardless.
g$C51D DEFB $42

; Offset for Monty's graphic
g$C51E DEFW $0000

; Next room UP
g$C520 DEFB $00

; Next room DOWN
g$C521 DEFB $00

; Next room LEFT
g$C522 DEFB $01

; Next room RIGHT
g$C523 DEFB $00

; x co-ordinate of (non coal) collectable item
g$C524 DEFB $00

; y co-ordinate of (non coal) collectable item
g$C525 DEFB $00

; Graphic index of (non coal) collectable item
g$C526 DEFB $00

; x co-ordinate of crusher
g$C527 DEFB $00

; y co-ordinate of crusher
g$C528 DEFB $00

; Crusher bottom column
g$C529 DEFB $00

; Ticks left until a crusher should fire
g$C52A DEFB $00

; Set to 0 if a crusher is ascending, or 1 if it is descending
g$C52B DEFB $00

; Crusher top column
g$C52C DEFB $00

; Unused
u$C52D DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C535 DEFB $00,$00

; Coal UDG
g$C537 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Positions of coal in the room
;
; Format is:
; #TABLE( default, centre )
; { =h Offset | =h Value }
; { 00 | Index into the score buffer at #R$964D }
; { 01 | X co-ordinate }
; { 02 | Y co-ordinate }
; TABLE#
g$C53F DEFB $00,$00,$00
 $C542 DEFB $00,$00,$00
 $C545 DEFB $00,$00,$00
 $C548 DEFB $00,$00,$00
 $C54B DEFB $00,$00,$00

; Static character graphics
;
; First byte is the attribute, other bytes are the data
g$C54E DEFB $47,$00,$00,$00,$00,$00,$00,$00,$00
 $C557 DEFB $42,$00,$E7,$F7,$F3,$00,$7E,$7F,$3F
 $C560 DEFB $4D,$00,$BB,$AA,$BB,$00,$BB,$AA,$BB
 $C569 DEFB $43,$FF,$55,$FF,$AA,$FF,$00,$00,$00
 $C572 DEFB $46,$82,$82,$86,$FE,$C0,$1E,$F6,$B2
 $C57B DEFB $44,$00,$1C,$14,$08,$08,$08,$1C,$1C
 $C584 DEFB $45,$00,$1C,$00,$38,$00,$70,$00,$38
 $C58D DEFB $45,$00,$1C,$3E,$1C,$2C,$2A,$4A,$8A

; Nasty data
;
; Each entry contains :
; #TABLE( default, centre )
; { =h Offset | =h Value }
; { 00 | Status flag. 0 = two directions, 1 - ???, 2 = one direction, 3 = invisible }
; { 01 - 02 | Address of graphic (up) }
; { 03 - 04 | Address of graphic (down) }
; { 05 - 06 | Address of graphic (left) }
; { 07 - 08 | Address of graphic (right) }
; { 09 | Attribute }
; { 0A | Index of this nasty in the table }
; { 0B | Current direction (0 - up, 1 - down, 2 - left, 3 - right) }
; { 0C | Current X co-ordinate }
; { 0D | Current Y co-ordinate }
; { 0E | Width or height of path covered }
; { 0F | Not used }
; { 10 | Current distance before changing direction }
; { 11 | Speed ( 0 - static, 1 - slow, 2 - fast ) }
; { 12 | Not used }
; { 13 | Not used }
; TABLE#
g$C596 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $C5AA DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $C5BE DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $C5D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $C5E6 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $C5FA DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $C60E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

; Moving platform 1 left x co-ordinate
g$C622 DEFB $00

; Moving platform 1 left y co-ordinate
g$C623 DEFB $00

; Moving platform left edge
g$C624 DEFB $00

; Moving platform right edge
g$C625 DEFB $00

; Moving platform 2 right x co-ordinate 
g$C626 DEFB $00

; Moving platform 2 right y co-ordinate
g$C627 DEFB $00

; Set bit 7 if the platform is closing, otherwise reset if it is opening
g$C628 DEFB $00

; Unused
u$C629 DEFB $00

; Copy the room graphic buffer to screen so it is visible
;
; Used by the routines at #R$9551 and #R$CD41.
c$C62A LD HL,$CF54   ; { Copy attribute address to attribute buffer.
 $C62D LD DE,$5800   ;
 $C630 LD BC,$0300   ;
 $C633 LDIR          ; }
 $C635 LD HL,$D260   ; { Copy screen address to screen buffer.
 $C638 LD DE,$4000   ;
 $C63B LD BC,$1800   ;
 $C63E LDIR          ; }
 $C640 RET           ;

; Unused
u$C641 LD A,($C850)
 $C644 OR A
 $C645 JR Z,$C676
 $C647 LD A,($C851)
 $C64A DEC A
 $C64B LD ($C851),A
 $C64E JR NZ,$C676
 $C650 LD A,($C852)
 $C653 LD ($C851),A
 $C656 LD A,($C853)
 $C659 INC A
 $C65A AND $03
 $C65C LD ($C853),A
 $C65F CALL $C843
 $C662 LD HL,($6000)
 $C665 ADD HL,DE
 $C666 LD ($ECE0),HL
 $C669 LD A,$2F
 $C66B LD ($ECDE),A
 $C66E LD A,$4F
 $C670 LD ($ECDF),A
 $C673 CALL $EBE0
*$C676 LD A,($C850)
 $C679 OR A
 $C67A JR NZ,$C6E2
 $C67C LD HL,($C854)
 $C67F LD A,H
 $C680 OR L
 $C681 JR Z,$C689
 $C683 DEC HL
 $C684 LD ($C854),HL
 $C687 JR $C6E2
*$C689 LD A,($C856)
 $C68C INC A
 $C68D LD ($C856),A
 $C690 ADD A,$10
 $C692 LD B,A
 $C693 LD A,($8490)
 $C696 SUB B
 $C697 JP C,$C888
 $C69A LD HL,$6080
 $C69D LD A,($C857)
 $C6A0 CALL $C843
 $C6A3 ADD HL,DE
 $C6A4 LD ($ECE0),HL
 $C6A7 LD A,($C856)
 $C6AA LD ($ECDE),A
 $C6AD LD A,$5F
 $C6AF LD ($ECDF),A
 $C6B2 CALL $EBE0
 $C6B5 LD HL,$6100
 $C6B8 LD A,($C857)
 $C6BB CALL $C843
 $C6BE ADD HL,DE
 $C6BF LD ($ECE0),HL
 $C6C2 LD A,$4F
 $C6C4 LD ($ECDF),A
 $C6C7 CALL $EBE0
 $C6CA LD A,($C867)
 $C6CD DEC A
 $C6CE LD ($C867),A
 $C6D1 JR NZ,$C6E2
 $C6D3 LD A,($C866)
 $C6D6 LD ($C867),A
 $C6D9 LD A,($C857)
 $C6DC INC A
 $C6DD AND $03
 $C6DF LD ($C857),A
*$C6E2 LD A,($C850)
 $C6E5 JR Z,$C714
 $C6E7 LD A,($C858)
 $C6EA DEC A
 $C6EB LD ($C858),A
 $C6EE JR NZ,$C719
 $C6F0 LD A,($C859)
 $C6F3 LD ($C858),A
 $C6F6 LD A,($C85A)
 $C6F9 INC A
 $C6FA AND $03
 $C6FC LD ($C85A),A
 $C6FF CALL $5B5B

; Vector jump table
;
; This table is used to work around limitations with Interrupt Mode 2 on the Spectrum.
; When this mode is enabled, the #REGi register contains the top 8 bytes of an address.
; Because the bottom 8 bytes are undefined, the actual jump will be randomly anywhere
; in this buffer. As the two bytes are the same, the jump is guaranteed to be #R$5B5B.
; This is a
; #HTML(<a href="http://www.breakintoprogram.co.uk/hardware/computers/zx-spectrum/interrupts">well-known hack on the ZX Spectrum</a>).
w$C700 DEFW $5B5B
 $C702 DEFW $5B5B
 $C704 DEFW $5B5B
 $C706 DEFW $5B5B
 $C708 DEFW $5B5B
 $C70A DEFW $5B5B
 $C70C DEFW $5B5B
 $C70E DEFW $5B5B
 $C710 DEFW $5B5B
 $C712 DEFW $5B5B
 $C714 DEFW $5B5B
 $C716 DEFW $5B5B
 $C718 DEFW $5B5B
 $C71A DEFW $5B5B
 $C71C DEFW $5B5B
 $C71E DEFW $5B5B
 $C720 DEFW $5B5B
 $C722 DEFW $5B5B
 $C724 DEFW $5B5B
 $C726 DEFW $5B5B
 $C728 DEFW $5B5B
 $C72A DEFW $5B5B
 $C72C DEFW $5B5B
 $C72E DEFW $5B5B
 $C730 DEFW $5B5B
 $C732 DEFW $5B5B
 $C734 DEFW $5B5B
 $C736 DEFW $5B5B
 $C738 DEFW $5B5B
 $C73A DEFW $5B5B
 $C73C DEFW $5B5B
 $C73E DEFW $5B5B
 $C740 DEFW $5B5B
 $C742 DEFW $5B5B
 $C744 DEFW $5B5B
 $C746 DEFW $5B5B
 $C748 DEFW $5B5B
 $C74A DEFW $5B5B
 $C74C DEFW $5B5B
 $C74E DEFW $5B5B
 $C750 DEFW $5B5B
 $C752 DEFW $5B5B
 $C754 DEFW $5B5B
 $C756 DEFW $5B5B
 $C758 DEFW $5B5B
 $C75A DEFW $5B5B
 $C75C DEFW $5B5B
 $C75E DEFW $5B5B
 $C760 DEFW $5B5B
 $C762 DEFW $5B5B
 $C764 DEFW $5B5B
 $C766 DEFW $5B5B
 $C768 DEFW $5B5B
 $C76A DEFW $5B5B
 $C76C DEFW $5B5B
 $C76E DEFW $5B5B
 $C770 DEFW $5B5B
 $C772 DEFW $5B5B
 $C774 DEFW $5B5B
 $C776 DEFW $5B5B
 $C778 DEFW $5B5B
 $C77A DEFW $5B5B
 $C77C DEFW $5B5B
 $C77E DEFW $5B5B
 $C780 DEFW $5B5B
 $C782 DEFW $5B5B
 $C784 DEFW $5B5B
 $C786 DEFW $5B5B
 $C788 DEFW $5B5B
 $C78A DEFW $5B5B
 $C78C DEFW $5B5B
 $C78E DEFW $5B5B
 $C790 DEFW $5B5B
 $C792 DEFW $5B5B
 $C794 DEFW $5B5B
 $C796 DEFW $5B5B
 $C798 DEFW $5B5B
 $C79A DEFW $5B5B
 $C79C DEFW $5B5B
 $C79E DEFW $5B5B
 $C7A0 DEFW $5B5B
 $C7A2 DEFW $5B5B
 $C7A4 DEFW $5B5B
 $C7A6 DEFW $5B5B
 $C7A8 DEFW $5B5B
 $C7AA DEFW $5B5B
 $C7AC DEFW $5B5B
 $C7AE DEFW $5B5B
 $C7B0 DEFW $5B5B
 $C7B2 DEFW $5B5B
 $C7B4 DEFW $5B5B
 $C7B6 DEFW $5B5B
 $C7B8 DEFW $5B5B
 $C7BA DEFW $5B5B
 $C7BC DEFW $5B5B
 $C7BE DEFW $5B5B
 $C7C0 DEFW $5B5B
 $C7C2 DEFW $5B5B
 $C7C4 DEFW $5B5B
 $C7C6 DEFW $5B5B
 $C7C8 DEFW $5B5B
 $C7CA DEFW $5B5B
 $C7CC DEFW $5B5B
 $C7CE DEFW $5B5B
 $C7D0 DEFW $5B5B
 $C7D2 DEFW $5B5B
 $C7D4 DEFW $5B5B
 $C7D6 DEFW $5B5B
 $C7D8 DEFW $5B5B
 $C7DA DEFW $5B5B
 $C7DC DEFW $5B5B
 $C7DE DEFW $5B5B
 $C7E0 DEFW $5B5B
 $C7E2 DEFW $5B5B
 $C7E4 DEFW $5B5B
 $C7E6 DEFW $5B5B
 $C7E8 DEFW $5B5B
 $C7EA DEFW $5B5B
 $C7EC DEFW $5B5B
 $C7EE DEFW $5B5B
 $C7F0 DEFW $5B5B
 $C7F2 DEFW $5B5B
 $C7F4 DEFW $5B5B
 $C7F6 DEFW $5B5B
 $C7F8 DEFW $5B5B
 $C7FA DEFW $5B5B
 $C7FC DEFW $5B5B
 $C7FE DEFW $5B5B

; Unused
u$C800 LD E,E
 $C801 RET Z
 $C802 OR A
 $C803 RET Z
 $C804 LD A,($C862)
 $C807 LD ($C861),A
 $C80A LD A,($C863)
 $C80D INC A
 $C80E AND $03
 $C810 LD ($C863),A
 $C813 JR Z,$C82C
 $C815 LD HL,$4F68
 $C818 LD ($ECDE),HL
 $C81B LD A,($C863)
 $C81E CALL $C843
 $C821 LD HL,$6300
 $C824 ADD HL,DE
 $C825 LD ($ECE0),HL
 $C828 CALL $EBE0
 $C82B RET
*$C82C XOR A
 $C82D LD ($C85F),A
 $C830 LD ($C85E),A
 $C833 LD HL,$C868
 $C836 LD ($ECE0),HL
 $C839 LD HL,$4F68
 $C83C LD ($ECDE),HL
 $C83F CALL $EBE0
 $C842 RET
*$C843 PUSH HL
 $C844 LD H,$00
 $C846 LD L,A
 $C847 ADD HL,HL
 $C848 ADD HL,HL
 $C849 ADD HL,HL
 $C84A ADD HL,HL
 $C84B ADD HL,HL
 $C84C LD E,L
 $C84D LD D,H
 $C84E POP HL
 $C84F RET

; Unused
u$C850 DEFB $01,$0A,$0A,$00,$90,$01,$28,$00
 $C858 DEFB $0A,$0A,$00,$FF,$80,$00,$00,$00
 $C860 DEFB $AF,$0A,$0A,$00,$14,$14,$14,$14
 $C868 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C870 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C878 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C880 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C888 DEFB $C9,$C9

; Unused
s$C88A DEFS $01AE

; Unused
u$CA38 DEFB $FF

; Unused
s$CA39 DEFS $98

; Display the "game won" sequence
;
; Used by the routine at #R$F858.
c$CAD1 LD HL,$4000   ; Set #REGhl to the start of the screen buffer.
 $CAD4 DI            ; Turn off interrupts, so IM1 can be set.
 $CAD5 LD IY,$5C3A   ; Set #REGiy to the default used in the ROM.
 $CAD9 IM 1          ; Switch to interrupt mode 1.
 $CADB EI            ; Re-enable interrupts
 $CADC LD DE,$4001   ; { Clear the screen.
 $CADF LD BC,$1AFF   ;
 $CAE2 LD (HL),$00   ;
 $CAE4 LDIR          ; }
 $CAE6 LD HL,$5840   ; { Set the attributes to bright cyan on black
 $CAE9 LD DE,$5841   ;
 $CAEC LD BC,$027F   ;
 $CAEF LD (HL),$45   ;
 $CAF1 LDIR          ; }
 $CAF3 CALL $91E8    ; Print the score.
 $CAF6 XOR A         ; { Reset the timer for scrolling the message.
 $CAF7 LD ($CB92),A  ; }
 $CAFA LD A,$05      ; { Start at column 5.
 $CAFC LD ($CB91),A  ; }
 $CAFF LD IX,$5CE1   ; Point #REGix to the end message.

; Print a message
;
; Characters are offsets from the character set at 813B (ie: ASCII - 20h)
; .
; or FE = end of message, FF = newline
;
; IX Pointer to the text buffer
c$CB03 LD A,(IX+$00) ; Get the next line.
 $CB06 CP $FE        ; Is it the end of the message?
 $CB08 RET Z         ; Return if so.
 $CB09 CP $FF        ; Is it a new line?
 $CB0B CALL Z,$CB15  ; Print one if so.
 $CB0E CALL NZ,$CB35 ; Otherwise print the line.
 $CB11 INC IX        ; { Move to the next data and repeat.
 $CB13 JR $CB03      ; }

; Scroll a line of the message
;
; Used by the routine at #R$CB03.
c$CB15 PUSH AF       ; Remember #REGa.
 $CB16 LD A,$05      ; Start at column 5.
 $CB18 LD C,$00      ; Start at row 0.
 $CB1A LD ($CB91),A  ; Set the current column.
 $CB1D LD A,($CB92)  ; { Increment the timer,
 $CB20 INC A         ; which cycles between 0 and 3.
 $CB21 AND $03       ;
 $CB23 LD ($CB92),A  ; }
 $CB26 JR NZ,$CB2A   ; If the timer is not yet zero, skip this.
 $CB28 LD C,$10      ; { Scroll #N$1A columns.
*$CB2A LD A,$0A      ; 
 $CB2C ADD A,C       ; }
 $CB2D LD B,A        ; Scroll #0A rows.
*$CB2E CALL $CB63    ; Scroll the column.
 $CB31 DJNZ $CB2E    ; Loop back if there is more to do.
 $CB33 POP AF        ; { Restore #REGa and return.
 $CB34 RET           ; }

; Print a character in a message
;
; .
;
; IX Pointer to the text buffer
; A Character to print
c$CB35 PUSH IX       ; Remember #REGix
 $CB37 LD L,A        ; { Put the character in #REGhl.
 $CB38 LD H,$00      ; }
 $CB3A ADD HL,HL     ; { Multiply by 8 to get a correct offset.
 $CB3B ADD HL,HL     ;
 $CB3C ADD HL,HL     ; }
 $CB3D LD DE,$813B   ; { Add basic offset to character set.
 $CB40 ADD HL,DE     ; }
 $CB41 PUSH HL       ; { Put the address of the graphic in #REGix.
 $CB42 POP IX        ; }
 $CB44 LD HL,$50C0   ; Point #REGhl at the bottom of the screen.
 $CB47 LD DE,($CB91) ; { Put the column in #REGde.
 $CB4B LD D,$00      ; }
 $CB4D ADD HL,DE     ; Add this as an offset to get the actual screen address.
 $CB4E LD B,$08      ; 8 rows to copy.
*$CB50 LD A,(IX+$00) ; Get the graphic data.
 $CB53 LD (HL),A     ; Copy it to screen.
 $CB54 INC H         ; Move forward a row.
 $CB55 INC IX        ; Move forward in the data.
 $CB57 DJNZ $CB50    ; Loop back if there is more to do.
 $CB59 POP IX        ; Restore #REGix.
 $CB5B LD A,($CB91)  ; { Move to the next column.
 $CB5E INC A         ;
 $CB5F LD ($CB91),A  ; }
 $CB62 RET           ;

; Move a line of a message upwards
;
; Used by the routine at #R$CB15.
c$CB63 PUSH AF       ; { Store all registers.
 $CB64 PUSH BC       ;
 $CB65 PUSH DE       ;
 $CB66 PUSH HL       ;
 $CB67 PUSH IX       ; }
 $CB69 LD IX,$EB5E   ; Point #REGix at the bottom of the screen (using the offset from #R$EA60).
 $CB6D LD B,$7F      ; Number of characters to scroll.
 $CB6F NOP           ;
 $CB70 HALT          ; Wait for interrupts, to stop flicker.
*$CB71 PUSH BC       ; Preserve #REGbc.
 $CB72 LD H,(IX+$01) ; { Copy from the first line.
 $CB75 LD L,(IX+$00) ; }
 $CB78 LD D,(IX+$03) ; { Copy to the second line.
 $CB7B LD E,(IX+$02) ; }
 $CB7E LD BC,$0020   ; Copy one line.
 $CB81 LDIR          ; Do the copy.
 $CB83 POP BC        ; Restore IX.
 $CB84 DEC IX        ; { Move up a line.
 $CB86 DEC IX        ; }
 $CB88 DJNZ $CB71    ; Loop back until all lines are scrolled.
 $CB8A POP IX        ; { Restore all registers and return.
 $CB8C POP HL        ;
 $CB8D POP DE        ;
 $CB8E POP BC        ;
 $CB8F POP AF        ;
 $CB90 RET           ; }

; Column to print the next character in a message.
b$CB91 DEFB $00      ;

; Timer used when scrolling the end message
;
; Cycles between 00 and 03.
g$CB92 DEFB $00      ;

; Run one frame in the first (outdoor) room
;
; Used by the routine at #R$FF5B.
c$CB93 LD A,($CD32)  ; { Has the bucket been collected?
 $CB96 OR A          ; }
 $CB97 JR Z,$CBC3    ; Jump forward if so.
; The bucket is animated after 4 calls to this routine.
 $CB99 LD A,($CD33)  ; { Decrement the tick counter.
 $CB9C DEC A         ;
 $CB9D LD ($CD33),A  ; }
 $CBA0 JR NZ,$CBC3   ; Jump forward if the counter hasn't reached 0.
 $CBA2 LD A,$03      ; { Otherwise reset it to 3.
 $CBA4 LD ($CD33),A  ; }
 $CBA7 LD A,($CD34)  ; { Increment the frame counter for the bucket.
 $CBAA INC A         ; }
 $CBAB AND $03       ; { If the counter reaches 3, reset it to 0.
 $CBAD LD ($CD34),A  ; }
 $CBB0 CALL $CD26    ; Convert into an offset.
 $CBB3 LD HL,$6000   ; { Add to the base address of the bucket (#R$6000). 
 $CBB6 ADD HL,DE     ; }
 $CBB7 LD ($ECE0),HL ; Next graphic to print
 $CBBA LD HL,$4F2F   ; { Set Location to print.
 $CBBD LD ($ECDE),HL ; }
 $CBC0 CALL $EBE0    ;
*$CBC3 LD A,($CD32)  ; { Has the bucket been collected?
 $CBC6 OR A          ; }
 $CBC7 JR NZ,$CC13   ; Jump forward if not.
; As the bucket has been collected, the miner needs to chase Monty.
 $CBC9 LD A,($CD35)  ; { Increment the miner's X co-ordinate.
 $CBCC INC A         ;
 $CBCD LD ($CD35),A  ; }
 $CBD0 LD HL,$6080   ; #R$6080 - base address of miner graphic.
 $CBD3 LD A,($CD36)  ; Get the frame ID of the miner.
 $CBD6 CALL $CD26    ; Get the actual graphic offset in #REGde.
 $CBD9 PUSH DE       ; Remember the offset.
 $CBDA ADD HL,DE     ; Add this to the base address.
 $CBDB LD ($ECE0),HL ; Store the graphic to copy.
 $CBDE LD A,($CD35)  ; { Store the X co-ordinate.
 $CBE1 LD ($ECDE),A  ; }
 $CBE4 LD A,$5F      ; { Y co-ordinate is always #N$5F.
 $CBE6 LD ($ECDF),A  ; }
 $CBE9 CALL $EBE0    ; Draw the graphic.
 $CBEC LD HL,$6100   ; Point #REGhl to the bottom half of the graphic.
 $CBEF POP DE        ; Restore the offset.
 $CBF0 ADD HL,DE     ; Add the offset.
 $CBF1 LD ($ECE0),HL ; Store the graphic to copy.
 $CBF4 LD A,$4F      ; { Y co-ordinate is always #N$4F.
 $CBF6 LD ($ECDF),A  ; }
 $CBF9 CALL $EBE0    ; Draw the graphic.
; The miner is animated after 4 calls to this routine.
 $CBFC LD A,($CD37)  ; { Decrement the frame counter.
 $CBFF DEC A         ;
 $CC00 LD ($CD37),A  ; }
 $CC03 JR NZ,$CC13   ; Jump forward if it is not 0.
 $CC05 LD A,$03      ; { Otherwise set it back to 3.
 $CC07 LD ($CD37),A  ; }
 $CC0A LD A,($CD36)  ; { Increment the animination frame for the miner,
 $CC0D INC A         ; but if it reaches 4, reset it to 0.
 $CC0E AND $03       ;
 $CC10 LD ($CD36),A  ; }
; Draw the squirrel, and if necessary, a nut.
*$CC13 LD A,($CD38)  ; Get the direction.
 $CC16 CP $FF        ; Is it left?
 $CC18 JR Z,$CC6E    ; Jump forward if so.
; The squirrel is moving right.
 $CC1A LD A,($CD39)  ; { Increment the X co-ordinate.
 $CC1D INC A         ;
 $CC1E LD ($CD39),A  ; }
 $CC21 LD A,($CD3A)  ; { Decrement the frame counter.
 $CC24 DEC A         ;
 $CC25 LD ($CD3A),A  ; }
 $CC28 LD A,($CD3B)  ; Get the animation frame for the squirrel.
 $CC2B JR NZ,$CC3B   ; Jump forward if it is not 0.
 $CC2D LD A,$03      ; { Otherwise set it back to 3.
 $CC2F LD ($CD3A),A  ; }
 $CC32 LD A,($CD3B)  ; { Increment the animination frame for the squirrel,
 $CC35 INC A         ; but if it reaches 4, reset it to 0.
 $CC36 AND $03       ;
 $CC38 LD ($CD3B),A  ; }
*$CC3B CALL $CD26    ; Draw the graphic.
 $CC3E LD HL,$6200   ; Base address of the squirrel - left (#R$6200).
*$CC41 ADD HL,DE     ; Add the offset.
 $CC42 LD ($ECE0),HL ; Store the graphic to copy.
 $CC45 LD A,($CD39)  ; { Store the X co-ordinate.
 $CC48 LD ($ECDE),A  ; }
 $CC4B LD A,$AF      ; { Y co-ordinate is always 0.
 $CC4D LD ($ECDF),A  ; }
 $CC50 CALL $EBE0    ; Draw the graphic.
 $CC53 LD A,($CD39)  ; { Has the squirrel reached the tree trunk?
 $CC56 CP $80        ; }
 $CC58 JR NZ,$CCA9   ; Jump forward if not.
 $CC5A DEC A         ; { Otherwise set the X co-ordinate to the maximum of #N$7F.
 $CC5B LD ($CD39),A  ; }
 $CC5E LD A,($CD3C)  ; { Is there a nut?
 $CC61 OR A          ; }
 $CC62 JR NZ,$CCA9   ; Jump forward if not.
 ; The squirrel has reached the trunk, drop a nut.
 $CC64 LD A,($CD38)  ; { Invert the direction from right to left.
 $CC67 NEG           ; 
 $CC69 LD ($CD38),A  ; }
 $CC6C JR $CCA9      ; Jump forward.
; The squirrel is moving left.
*$CC6E LD A,($CD39)  ; { Decrement the X co-ordinate.
 $CC71 DEC A         ;
 $CC72 LD ($CD39),A  ; }
 $CC75 LD A,($CD3A)  ; { Decrement the frame counter.
 $CC78 DEC A         ;
 $CC79 LD ($CD3A),A  ; }
 $CC7C LD A,($CD3B)  ; Get the animation frame for the squirrel.
 $CC7F JR NZ,$CC8F   ; Jump forward if the counter is not 0.
 $CC81 LD A,$03      ; { Otherwise reset to 3.
 $CC83 LD ($CD3A),A  ; }
 $CC86 LD A,($CD3B)  ; Get the animation frame for the squirrel.
 $CC89 INC A         ; { Increment the frame, but if it reaches 4, reset to 0.
 $CC8A AND $03       ;
 $CC8C LD ($CD3B),A  ; }
*$CC8F CALL $CD26    ; Get the graphic offset.
 $CC92 LD HL,$6280   ; Base address of the squirrel - right (#R$6280).
 $CC95 LD A,($CD39)  ; Get the X co-ordinate.
 $CC98 CP $70        ; Has the squirrel reached the end of the branch?
 $CC9A JR NZ,$CC41   ; Jump if not.
 $CC9C LD A,($CD38)  ; { Change the direction from left to right.
 $CC9F NEG           ; 
 $CCA1 LD ($CD38),A  ; }
 $CCA4 LD ($CD3C),A  ; { Signal that a nut should be dropped
 $CCA7 JR $CC41      ; and loop back to draw the squirrel. }
; Draw the nut if it exists.
*$CCA9 LD A,($CD3C)  ; { Is there a nut?
 $CCAC OR A          ; }
 $CCAD RET Z         ; Return if not, nothing more to do.
 $CCAE LD A,($CD3D)  ; { Is the nut exploding?
 $CCB1 OR A          ; }
 $CCB2 JR NZ,$CCD6   ; Jump forward if so.
 $CCB4 LD A,($CD3E)  ; { Decrement the height of the nut by 1.
 $CCB7 DEC A         ;
 $CCB8 LD ($CD3E),A  ; }
 $CCBB LD HL,$6300   ; Base address of the nut (#R$6300).
 $CCBE LD ($ECE0),HL ; Store graphic to copy.
 $CCC1 LD ($ECDF),A  ; Store the Y co-ordinate.
 $CCC4 LD A,$68      ; { X co-ordinate is always #N$68.
 $CCC6 LD ($ECDE),A  ; }
 $CCC9 CALL $EBE0    ; Draw the graphic.
 $CCCC LD A,($CD3E)  ; { Has the nut reached the floor?
 $CCCF CP $4F        ; }
 $CCD1 RET NZ        ; Return if not, nothing more to do.
 $CCD2 LD ($CD3D),A  ; { Set the flag (#R$CD3D) to denote the nut should now explode
 $CCD5 RET           ; and return. }
; The nut has reached the floor and should explode.
*$CCD6 LD A,($CD3F)  ; { Decrement the timer.
 $CCD9 DEC A         ;
 $CCDA LD ($CD3F),A  ; }
 $CCDD RET NZ        ; Return if the timer is not yet zero.
 $CCDE LD A,$03      ; { Otherwise restore to 3.
 $CCE0 LD ($CD3F),A  ; }
 $CCE3 LD A,($CD40)  ; { Increment the graphic ID, but if it reaches 4, reset to 0.
 $CCE6 INC A         ;
 $CCE7 AND $03       ;
 $CCE9 LD ($CD40),A  ; }
 $CCEC JR Z,$CD0A    ; If the last frame was reached, the nut has gone.
 $CCEE LD A,($CD3E)  ; { Otherwise store the Y co-ordinate (was #N$4F).
 $CCF1 LD ($ECDF),A  ; }
 $CCF4 LD A,$68      ; { X co-ordinate is always #N$68.
 $CCF6 LD ($ECDE),A  ; }
 $CCF9 LD A,($CD40)  ; Get the graphic ID.
 $CCFC CALL $CD26    ; Convert this to an offset.
 $CCFF LD HL,$6300   ; #R$6300 is the base address for the nut graphic.
 $CD02 ADD HL,DE     ; Add the offset.
 $CD03 LD ($ECE0),HL ; Store this as the graphic to copy.
 $CD06 CALL $EBE0    ; { Draw the graphic and return. }
 $CD09 RET           ;
; The nut exploded and is no more.
*$CD0A XOR A         ; Set #REGa to 0 to clear some flags.
 $CD0B LD ($CD3C),A  ; Squirrel is not dropping a nut.
 $CD0E LD ($CD3D),A  ; Nut will be falling when next dropped.
 $CD11 LD HL,$7780   ; #R$7780 is the empty graphic.
 $CD14 LD ($ECE0),HL ; Store the graphic to copy.
 $CD17 LD HL,$4F68   ; Erase the graphic at #N$68, #N$4F.
 $CD1A LD ($ECDE),HL ; Store the co-ordinates.
 $CD1D CALL $EBE0    ; Print the graphic.
 $CD20 LD A,$9F      ; { Set the nut back to the top of the tree
 $CD22 LD ($CD3E),A  ; and return.
 $CD25 RET           ; }

; Convert a sprite ID to a graphic offset
;
; Used by the routine at #R$CB93.
;
; A The ID  to look up
; DE On exit, holds the appropriate offset
c$CD26 PUSH HL       ; Remember #REGhl.
 $CD27 LD L,A        ; { Put the ID in #REGhl.
 $CD28 LD H,$00      ; }
 $CD2A ADD HL,HL     ; { Multiply by 32.
 $CD2B ADD HL,HL     ;
 $CD2C ADD HL,HL     ;
 $CD2D ADD HL,HL     ;
 $CD2E ADD HL,HL     ; }
 $CD2F EX DE,HL      ; Store it in #REGde.
 $CD30 POP HL        ; { Restore #REGhl and return.
 $CD31 RET           ; }

; Set to 0 if the bucket has been collected, or 1 if not
b$CD32 DEFB $01

; Timer for animating bucket
b$CD33 DEFB $03

; Animation frame for bucket
b$CD34 DEFB $00

; X co-ordinate of the miner
b$CD35 DEFB $01

; Animation frame for miner
b$CD36 DEFB $00

; Timer for animating miner
b$CD37 DEFB $03

; Squirrel direction
;
; 01 - right, #N$FF - left
b$CD38 DEFB $FF

; X co-ordinate of the squirrel
b$CD39 DEFB $78

; Timer for animating squirrel
b$CD3A DEFB $03

; Animation frame for the squirrel
b$CD3B DEFB $00
 
; Set to 1 if the squirrel is dropping a nut
g$CD3C DEFB $00

; Set to 0 if the nut is still falling, or #N$4F if it is exploding
g$CD3D DEFB $00

; Current screen position of the nut dropped by the squirrel
g$CD3E DEFB $9F

; Timer for animating nut
g$CD3F DEFB $03

; Animation frame for nut
g$CD40 DEFB $00

; Display the first (outdoor) room
;
; Used by the routine at #R$940C.
c$CD41 LD HL,$964D   ; { Reset the "collected" flag on all coal.
 $CD44 LD B,$40      ;
*$CD46 RES 7,(HL)    ;
 $CD48 INC HL        ;
 $CD49 DJNZ $CD46    ; }
 $CD4B LD A,$03      ; { Set the miner in room 0 to invisible.
 $CD4D LD ($9BBE),A  ;
 $CD50 LD ($9BD2),A  ; }
 $CD53 LD A,$01      ; Set #REGa to 1 to set some flags.
 $CD55 LD ($CD32),A  ; Set no bucket collected.
 $CD58 LD ($CD35),A  ; Set miner's x co-ordinate to 1.
 $CD5B LD HL,$4FD8   ; { Set Monty's position to #N$D8, #N$4F.
 $CD5E LD ($5C7B),HL ; }
 $CD61 DI            ; Turn off interrupts, so a new service routine can be used.
 $CD62 LD A,$C7      ; { Point #REGi to the jump buffer at #R$C700.
 $CD64 LD I,A        ; }
 $CD66 LD HL,$CDEF   ; { Set the interrupt service routine to jump to #R$CDEF.
 $CD69 LD ($5B5C),HL ; }
 $CD6C LD A,$C3      ; { Add a 'JP' command to the first byte.
 $CD6E LD ($5B5B),A  ; }
 $CD71 IM 2          ; Switch to interrupt mode 2 so this routine will be fired.
 $CD73 LD HL,$D260   ; { Clear the screen buffer.
 $CD76 LD DE,$D261   ;
 $CD79 LD BC,$17FF   ;
 $CD7C LD (HL),$00   ;
 $CD7E LDIR          ; }
 $CD80 LD HL,$F14B   ; #R$F14B points to the static UDGs on screen at #R$7C00. 
 $CD83 CALL $EF7E    ; Print the graphics.
 $CD86 CALL $C62A    ; Copy the graphic buffer to screen.
 $CD89 CALL $91E8    ; Print the score.
 $CD8C CALL $949E    ; Print number of lives.
 $CD8F CALL $D254    ; Copy the screen back to the buffer.
 $CD92 EI            ; Turn interrupts on, the service routine can now be run.
 $CD93 LD A,$75      ; { Make #N$75 (bright cyan on yellow) a deadly attribute. (#R$C51A)
 $CD95 LD ($C51B),A  ; so Monty will die if he touches the water under bridge. }
*$CD98 CALL $FF5B    ; Wait for interrupts and run one frame in the room.
 $CD9B CALL $9298    ; Check for collision.
 $CD9E CALL $82A6    ; Check for player input.
 $CDA1 CALL $89D4    ; Update Monty's position.
 $CDA4 LD A,($5C7B)  ; { Is Monty's X co-ordinate the same as the bucket?
 $CDA7 CP $40        ; }
 $CDA9 CALL Z,$CDC4  ; If so, pick it up.
 $CDAC LD A,($5C7B)  ; { Has Monty reached the far right of the room?
 $CDAF CP $E0        ; }
 $CDB1 JR NZ,$CD98   ; Jump back if not.
; Monty has reached the far right of the room, so move into room 0.
 $CDB3 DI            ; Disable interrupts as the service routine will be refreshed.
 $CDB4 XOR A         ; { Set the current room to 0.
 $CDB5 LD ($9649),A  ; }
 $CDB8 LD HL,$2718   ; { Set the current position to #N$18, #N$27
 $CDBB LD ($5C7B),HL ; ie: in front of the miner. }
 $CDBE LD ($964B),HL ; Make this the start position if a life is lost.
 $CDC1 JP $940C      ; Enter the new room.

; Monty has grabbed the bucket - start the miner chase
;
; Used by the routine at #R$CD41.
c$CDC4 LD A,($CD32)  ; { Has the flag already been set?
 $CDC7 OR A          ; }
 $CDC8 RET Z         ; Return if so.
 $CDC9 LD HL,$964D   ; { Set all the coal flags as "not collected".
 $CDCC LD B,$40      ;
*$CDCE SET 7,(HL)    ;
 $CDD0 INC HL        ;
 $CDD1 DJNZ $CDCE    ; }
 $CDD3 LD A,$02      ; { Set the miner to appear in room 0.
 $CDD5 LD ($9BBE),A  ;
 $CDD8 LD ($9BD2),A  ; }
; Erase the bucket.
 $CDDB XOR A         ; { Signal that Monty has the bucket.
 $CDDC LD ($CD32),A  ; }
 $CDDF LD HL,$7780   ; #R$7780 is the empty graphic.
 $CDE2 LD ($ECE0),HL ; Set the graphic to draw.
 $CDE5 LD HL,$4F2F   ; { Set co-ordinate of the bucket.
 $CDE8 LD ($ECDE),HL ; }
 $CDEB CALL $EBE0    ; { Draw (erase) the graphic and return.
 $CDEE RET           ; }

; Interrupt routine for first room
c$CDEF PUSH AF       ; { Cache all working registers.
 $CDF0 PUSH BC       ;
 $CDF1 PUSH DE       ;
 $CDF2 PUSH HL       ;
 $CDF3 PUSH IX       ;
 $CDF5 PUSH IY       ; }
 $CDF7 LD HL,($EADE) ; { Get the location of the water under the bridge.
 $CDFA LD DE,$0012   ;
 $CDFD ADD HL,DE     ; }
 $CDFE LD C,$07      ; Width of the water is 7.
 $CE00 CALL $90A8    ; Animate the water.
 $CE03 LD A,($CE19)  ;
 $CE06 INC A         ;
 $CE07 AND $03       ;
 $CE09 LD ($CE19),A  ;
 $CE0C CALL Z,$EF2E  ; Animate the smoke from the chimney.
 $CE0F POP IY        ; { Restore registers.
 $CE11 POP IX        ;
 $CE13 POP HL        ;
 $CE14 POP DE        ;
 $CE15 POP BC        ;
 $CE16 POP AF        ; }
 $CE17 EI            ; { Re-enable interrupts and return.
 $CE18 RET           ; }

; Frame counter (when zero, background animation happens)
g$CE19 DEFB $03

; Unused
$CE1A DEFB $87

; Unused
u$CE1B CALL $935C
 $CE1E CALL $95B3
 $CE21 CALL $9298
 $CE24 CALL $82A6
 $CE27 CALL $89D4
 $CE2A CALL $927E
 $CE2D JP $CECD
 $CE30 CP $F0
 $CE32 JR NZ,$CE17
 $CE34 LD HL,$2718
 $CE37 LD ($5C7B),HL
 $CE3A LD ($964B),HL
 $CE3D XOR A
 $CE3E DI
 $CE3F LD ($9649),A
 $CE42 LD IX,$8D52
 $CE46 RES 3,(IX+$00)
 $CE4A JP $940C
 $CE4D CALL $CAD1
 $CE50 LD B,$FF
*$CE52 IN A,($FE)
 $CE54 AND $1F
 $CE56 XOR $1F
 $CE58 JR NZ,$CE5E
 $CE5A HALT
 $CE5B HALT
 $CE5C DJNZ $CE52
*$CE5E JP $CE76
 $CE61 LD IX,$F04B
 $CE65 XOR A
 $CE66 LD ($CB92),A
 $CE69 LD A,$05
 $CE6B LD ($CB91),A
 $CE6E JP $CEEF
 $CE71 LD B,$FF
 $CE73 JP $CE52
*$CE76 XOR A
 $CE77 DI
 $CE78 LD ($848F),A
 $CE7B LD ($8498),A
 $CE7E LD ($8D58),A
 $CE81 LD ($8D52),A
 $CE84 LD ($8D53),A
 $CE87 LD A,$03
 $CE89 LD ($964A),A
 $CE8C XOR A
 $CE8D LD B,$05
 $CE8F LD HL,$9217
*$CE92 LD (HL),A
 $CE93 INC HL
 $CE94 DJNZ $CE92
 $CE96 LD HL,$964D
 $CE99 LD B,$40
*$CE9B SET 7,(HL)
 $CE9D INC HL
 $CE9E DJNZ $CE9B
 $CEA0 LD A,$2C
 $CEA2 LD ($9649),A
 $CEA5 LD HL,$869C
 $CEA8 LD ($8492),HL
 $CEAB LD HL,$4000
 $CEAE LD DE,$4001
 $CEB1 LD (HL),$00
 $CEB3 LD BC,$1AFF
 $CEB6 LDIR
 $CEB8 CALL $8000
 $CEBB LD HL,$27C4
 $CEBE LD ($5C7B),HL
 $CEC1 LD ($964B),HL
 $CEC4 LD A,$FF
 $CEC6 LD ($CECC),A
 $CEC9 JP $940C

; Unused
u$CECC DEFB $FF

; Unused
;
; Used by the routine at #R$CE1B.
c$CECD LD A,($CECC)  ;
 $CED0 OR A          ;
 $CED1 JR NZ,$CED8   ;
 $CED3 LD A,$01      ;
 $CED5 OR A          ;
 $CED6 JR $CEDC      ;
*$CED8 DEC A         ;
 $CED9 LD ($CECC),A  ;
*$CEDC LD A,($5C7B)  ;
 $CEDF JP NZ,$CE30   ;
 $CEE2 LD HL,$C596   ;
 $CEE5 LD (HL),$02   ;
 $CEE7 LD HL,$C5AA   ;
 $CEEA LD (HL),$02   ;
 $CEEC JP $CE30      ;

; Unused
;
; Used by the routine at #R$CE1B.
u$CEEF LD HL,$4000   ;
 $CEF2 DI            ;
 $CEF3 LD IY,$5C3A   ;
 $CEF7 IM 1          ;
 $CEF9 EI            ;
 $CEFA LD DE,$4001   ;
 $CEFD LD BC,$1AFF   ;
 $CF00 LD (HL),$00   ;
 $CF02 LDIR          ;
 $CF04 LD HL,$5840   ;
 $CF07 LD DE,$5841   ;
 $CF0A LD BC,$027F   ;
 $CF0D LD (HL),$46   ;
 $CF0F LDIR          ;
 $CF11 NOP           ;
 $CF12 NOP           ;
 $CF13 NOP           ;
 $CF14 XOR A         ;
 $CF15 LD ($CB17),A  ;
 $CF18 LD ($CB92),A  ;
 $CF1B LD ($CB91),A  ;
 $CF1E CALL $CB03    ;
 $CF21 XOR A         ;
 $CF22 LD A,$05      ;
 $CF24 LD ($CB17),A  ;
 $CF27 LD B,$FF      ;
 $CF29 JP $CE52      ;

; Unused
s$CF2C DEFS $28

; Screen attribute buffer
g$CF54 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF5C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF64 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF6C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF74 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF7C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF84 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF8C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF94 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CF9C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFA4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFAC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFB4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFBC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFC4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFCC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFD4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFDC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFE4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFEC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFF4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $CFFC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D004 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D00C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D014 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D01C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D024 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D02C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D034 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D03C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D044 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D04C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D054 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D05C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D064 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D06C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D074 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D07C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D084 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D08C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D094 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D09C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0A4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0AC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0B4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0BC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0C4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0CC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0D4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0DC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0E4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0EC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0F4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D0FC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D104 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D10C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D114 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D11C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D124 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D12C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D134 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D13C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D144 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D14C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D154 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D15C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D164 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D16C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D174 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D17C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D184 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D18C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D194 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D19C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1A4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1AC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1B4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1BC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1C4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1CC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1D4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1DC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1E4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1EC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1F4 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D1FC DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D204 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D20C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D214 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D21C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D224 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D22C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D234 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D23C DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D244 DEFB $38,$38,$38,$38,$38,$38,$38,$38
 $D24C DEFB $38,$38,$38,$38,$38,$38,$38,$38

; Copy the screen to storage buffer
;
; Used by the routines at #R$8D7F, #R$952F, #R$9551, #R$CD41 and #R$D290.
c$D254 LD HL,$4000   ; { Copy #N$1800 bytes from the screen to #R$D260.
 $D257 LD DE,$D260   ;
 $D25A LD BC,$1800   ;
 $D25D LDIR          ; 
 $D25F RET           ; }

; Save game to tape
;
; Once the intro tune has played, this area to EA5F becomes the screen buffer
; .
; Control continues to #R$D290
c$D260 LD HL,$D2E9   ; { Put the "death" tune somewhere
 $D263 LD DE,$5C7D   ; where it won't be overwritten.
 $D266 LD BC,$0064   ; 
 $D269 LDIR          ; }
 $D26B LD HL,$D34D   ; { Put the "game won" message
 $D26E LD DE,$5CE1   ; where it won't be overwritten.
 $D271 LD BC,$026C   ;
 $D274 LDIR          ; }
 $D276 LD HL,$CF54   ; { Clear the screen attribute buffer to zero.
 $D279 LD DE,$CF55   ;
 $D27C LD BC,$02FF   ;
 $D27F LD (HL),$00   ;
 $D281 LDIR          ; }
 $D283 LD IX,$4000   ; { Call the ROM save routine.
 $D287 LD DE,$C000   ;
 $D28A LD A,$71      ;
 $D28C SCF           ;
 $D28D CALL $04C2    ; }

; Main entry point
;
; When the game has loaded, the ROM loading routine returns to here
c$D290 NOP           ; { This does nothing except waste a bit of time.
 $D291 NOP           ;
 $D292 NOP           ;
 $D293 NOP           ;
 $D294 NOP           ;
 $D295 NOP           ;
 $D296 NOP           ;
 $D297 NOP           ;
 $D298 NOP           ;
 $D299 NOP           ;
 $D29A NOP           ;
 $D29B NOP           ;
 $D29C NOP           ; }
 $D29D LD IX,$D5B9   ; Point to the start of the theme tune (#R$D5B9).
*$D2A1 LD E,(IX+$00) ; { Put the pitch in DE.
 $D2A4 LD D,(IX+$01) ; }
 $D2A7 LD L,(IX+$02) ; { Put the length in HL.
 $D2AA LD H,(IX+$03) ; }
 $D2AD LD A,L        ; { If the length is 0, don't play a note, but pause instead.
 $D2AE OR H          ;
 $D2AF JP Z,$D2CF    ; }
 $D2B2 PUSH IX       ; { Play the #HTML(<a href="https://skoolkid.github.io/rom/asm/03B5.html">BEEP routine in the ROM</a>).
 $D2B4 CALL $03B5    ;
 $D2B7 POP IX        ; }
*$D2B9 LD DE,$0004   ; { Move onto the next note.
 $D2BC ADD IX,DE     ; }
 $D2BE LD A,(IX+$01) ; { If the second byte of the pitch is #N$FF , the tune is finished, so move on.
 $D2C1 CP $FF        ;
 $D2C3 JR Z,$D2D5    ; }
 $D2C5 IN A,($FE)    ; { See if a key was pressed.
 $D2C7 AND $1F       ;
 $D2C9 XOR $1F       ; }
 $D2CB JR Z,$D2A1    ; If no key pressed, then loop back to play another note.
 $D2CD JR $D2D5      ; Otherwise, move on.
; At this point, there is a rest in the tune.
*$D2CF LD B,E        ; { Pause for the relevant amount of time.
*$D2D0 HALT          ;
 $D2D1 DJNZ $D2D0    ; }
 $D2D3 JR $D2B9      ; Loop back for another note.
; The tune has finished, or was stopped by pressing a key.
*$D2D5 LD HL,$F7D6   ; { Load #R$F7D6 (start a new game) on the stack
 $D2D8 PUSH HL       ; so the call to #R$D254 will return here. }
 $D2D9 LD HL,$4000   ; { Clear the screen. 
 $D2DC LD DE,$4001   ;
 $D2DF LD BC,$17FF   ;
 $D2E2 LD (HL),$00   ;
 $D2E4 LDIR          ; }
 $D2E6 JP $D254      ; Copy the screen to the working buffer, then jump to #R$D254.

; Unused
u$D2E9 DEFB $49,$01,$2F,$05,$A4,$00,$2F,$05
 $D2F1 DEFB $92,$00,$D2,$05,$05,$01,$88,$06
 $D2F9 DEFB $88,$01,$5C,$04,$DC,$00,$E2,$03
 $D301 DEFB $C4,$00,$5C,$04,$C4,$00,$5C,$04
 $D309 DEFB $AE,$00,$E5,$04,$93,$02,$2F,$05
 $D311 DEFB $49,$01,$2F,$05,$AE,$00,$E5,$04
 $D319 DEFB $C4,$00,$5C,$04,$B8,$01,$E2,$03
 $D321 DEFB $88,$01,$5C,$04,$AE,$00,$E5,$04
 $D329 DEFB $92,$00,$D2,$05,$A4,$00,$2F,$05
 $D331 DEFB $B8,$00,$9E,$04,$10,$03,$5C,$04
 $D339 DEFB $49,$01,$2F,$05,$A4,$00,$2F,$05
 $D341 DEFB $92,$00,$D2,$05,$05,$01,$88,$00
 $D349 DEFB $00,$00,$00,$00,$0F,$15,$12,$00
 $D351 DEFB $07,$01,$0C,$0C,$01,$0E,$14,$00
 $D359 DEFB $0D,$0F,$0C,$05,$13,$FF,$03,$0F
 $D361 DEFB $0D,$10,$0C,$05,$14,$05,$04,$00
 $D369 DEFB $14,$08,$05,$00,$14,$01,$13,$0B
 $D371 DEFB $FF,$14,$08,$12,$0F,$15,$07,$08
 $D379 DEFB $00,$10,$09,$03,$0B,$05,$14,$13
 $D381 DEFB $00,$14,$08,$09,$03,$0B,$FF,$08
 $D389 DEFB $09,$13,$00,$0C,$15,$03,$0B,$00
 $D391 DEFB $04,$09,$04,$00,$0C,$01,$13,$14
 $D399 DEFB $FF,$14,$08,$05,$00,$06,$01,$0C
 $D3A1 DEFB $0C,$09,$0E,$07,$00,$06,$0C,$0F
 $D3A9 DEFB $0F,$12,$13,$FF,$04,$09,$04,$00
 $D3B1 DEFB $0E,$0F,$14,$00,$04,$09,$13,$13
 $D3B9 DEFB $15,$01,$04,$05,$FF,$0F,$15,$12
 $D3C1 DEFB $00,$08,$05,$12,$0F,$00,$0D,$0F
 $D3C9 DEFB $0E,$14,$19,$13,$FF,$14,$12,$01
 $D3D1 DEFB $09,$0C,$00,$17,$01,$13,$00,$0D
 $D3D9 DEFB $01,$04,$05,$FF,$14,$0F,$00,$01
 $D3E1 DEFB $12,$14,$08,$15,$12,$13,$00,$03
 $D3E9 DEFB $01,$13,$14,$0C,$05,$FF,$14,$08
 $D3F1 DEFB $05,$00,$06,$09,$0E,$01,$0C,$00
 $D3F9 DEFB $14,$05,$13,$14,$FF,$02,$12,$01
 $D401 DEFB $16,$05,$00,$0D,$0F,$0E,$14,$19
 $D409 DEFB $13,$00,$14,$08,$05,$12,$05,$FF
 $D411 DEFB $14,$0F,$00,$10,$15,$14,$00,$14
 $D419 DEFB $0F,$00,$12,$05,$13,$14,$FF,$14
 $D421 DEFB $08,$05,$00,$0D,$01,$0E,$00,$17
 $D429 DEFB $08,$0F,$00,$04,$01,$12,$05,$04
 $D431 DEFB $FF,$14,$0F,$00,$13,$14,$0F,$10
 $D439 DEFB $00,$14,$08,$05,$00,$03,$0F,$01
 $D441 DEFB $0C,$FF,$14,$0F,$00,$17,$01,$12
 $D449 DEFB $0D,$00,$14,$08,$05,$00,$06,$09
 $D451 DEFB $12,$05,$FF,$0F,$06,$00,$0D,$0F
 $D459 DEFB $0E,$14,$19,$00,$0D,$0F,$0C,$05
 $D461 DEFB $FF,$0F,$0E,$05,$00,$06,$09,$0E
 $D469 DEFB $01,$0C,$00,$08,$01,$09,$12,$13
 $D471 DEFB $10,$12,$01,$19,$FF,$14,$0F,$00
 $D479 DEFB $01,$16,$0F,$09,$04,$FF,$17,$01
 $D481 DEFB $14,$03,$08,$00,$0F,$15,$14,$00
 $D489 DEFB $01,$12,$14,$08,$15,$12,$FF,$08
 $D491 DEFB $05,$00,$09,$13,$00,$01,$0E,$0E
 $D499 DEFB $0F,$19,$05,$04,$FF,$0F,$15,$12
 $D4A1 DEFB $00,$0D,$0F,$0C,$05,$00,$08,$01
 $D4A9 DEFB $13,$00,$01,$12,$14,$08,$15,$12
 $D4B1 DEFB $FF,$0E,$0F,$17,$00,$08,$05,$00
 $D4B9 DEFB $09,$13,$00,$14,$0F,$10,$10,$05
 $D4C1 DEFB $04,$FF,$0D,$0F,$0E,$14,$19,$00
 $D4C9 DEFB $05,$13,$03,$01,$10,$05,$13,$FF
 $D4D1 DEFB $0F,$08,$00,$0E,$0F,$00,$00,$08
 $D4D9 DEFB $05,$00,$09,$13,$00,$03,$0F,$10
 $D4E1 DEFB $10,$05,$04,$FF,$03,$12,$09,$0D
 $D4E9 DEFB $05,$00,$04,$0F,$05,$13,$00,$0E
 $D4F1 DEFB $0F,$14,$00,$10,$01,$19,$FF,$0D
 $D4F9 DEFB $19,$00,$0C,$09,$14,$14,$0C,$05
 $D501 DEFB $00,$0D,$0F,$0C,$05,$FF,$09,$14
 $D509 DEFB $00,$17,$09,$0C,$0C,$00,$0E,$0F
 $D511 DEFB $14,$00,$04,$0F,$FF,$14,$0F,$00
 $D519 DEFB $13,$14,$05,$01,$0C,$00,$14,$08
 $D521 DEFB $05,$00,$03,$0F,$01,$0C,$FF,$14
 $D529 DEFB $08,$05,$00,$0A,$15,$04,$07,$05
 $D531 DEFB $00,$08,$05,$00,$13,$01,$19,$13
 $D539 DEFB $FF,$0C,$0F,$03,$0B,$00,$08,$09
 $D541 DEFB $0D,$00,$01,$17,$01,$19,$FF,$06
 $D549 DEFB $0F,$12,$00,$06,$09,$16,$05,$00
 $D551 DEFB $17,$08,$0F,$0C,$05,$00,$19,$05
 $D559 DEFB $01,$12,$13,$FF,$14,$08,$01,$14
 $D561 DEFB $00,$13,$14,$01,$12,$14,$00,$14
 $D569 DEFB $0F,$04,$01,$19,$FF,$0D,$0F,$0E
 $D571 DEFB $14,$19,$00,$13,$14,$15,$0E,$0E
 $D579 DEFB $05,$04,$FF,$08,$09,$13,$00,$0D
 $D581 DEFB $0F,$15,$14,$08,$00,$01,$07,$01
 $D589 DEFB $10,$05,$FF,$01,$0E,$04,$00,$0E
 $D591 DEFB $0F,$17,$00,$17,$08,$0F,$00,$04
 $D599 DEFB $01,$12,$05,$13,$FF,$10,$0C,$01
 $D5A1 DEFB $0E,$00,$08,$09,$13,$00,$05,$13
 $D5A9 DEFB $03,$01,$10,$05,$FF,$FE,$00,$00
 $D5B1 DEFB $02,$19,$00,$09,$01,$0E,$FF,$FE

; Colonel Bogey tune data
;
; Used by the routine at #R$D290.
; .
; Each entry is 4 bytes - first two are pitch, second two are length.
; .
; This data is wiped as soon as the game proper starts as it becomes part of
; the screen buffer.
b$D5B9 DEFB $49,$00,$B3,$05
 $D5BD DEFB $0D,$00,$00,$00
 $D5C1 DEFB $8A,$00,$0C,$06
 $D5C5 DEFB $37,$00,$A6,$07
 $D5C9 DEFB $2E,$00,$1E,$09
 $D5CD DEFB $24,$00,$85,$0B
 $D5D1 DEFB $2E,$00,$1E,$09
 $D5D5 DEFB $37,$00,$A6,$07
 $D5D9 DEFB $1B,$00,$A6,$07
 $D5DD DEFB $07,$00,$36,$07
 $D5E1 DEFB $17,$00,$CD,$06
 $D5E5 DEFB $07,$00,$36,$07
 $D5E9 DEFB $30,$00,$A6,$07
 $D5ED DEFB $1B,$00,$A6,$07
 $D5F1 DEFB $07,$00,$36,$07
 $D5F5 DEFB $07,$00,$CD,$06
 $D5F9 DEFB $D5,$00,$A6,$07
 $D5FD DEFB $30,$00,$A6,$07
 $D601 DEFB $06,$00,$1C,$08
 $D605 DEFB $06,$00,$9A,$08
 $D609 DEFB $11,$00,$1E,$09
 $D60D DEFB $2C,$00,$00,$00
 $D611 DEFB $2E,$00,$1E,$09
 $D615 DEFB $31,$00,$9A,$08
 $D619 DEFB $37,$00,$A6,$07
 $D61D DEFB $5C,$00,$80,$04
 $D621 DEFB $0D,$00,$00,$00
 $D625 DEFB $5C,$00,$80,$04
 $D629 DEFB $0D,$00,$00,$00
 $D62D DEFB $25,$01,$B3,$05
 $D631 DEFB $30,$00,$A6,$07
 $D635 DEFB $06,$00,$1C,$08
 $D639 DEFB $06,$00,$9A,$08
 $D63D DEFB $11,$00,$1E,$09
 $D641 DEFB $2C,$00,$00,$00
 $D645 DEFB $2E,$00,$1E,$09
 $D649 DEFB $31,$00,$9A,$08
 $D64D DEFB $2E,$00,$1E,$09
 $D651 DEFB $37,$00,$A6,$07
 $D655 DEFB $0D,$00,$00,$00
 $D659 DEFB $37,$00,$A6,$07
 $D65D DEFB $0D,$00,$00,$00
 $D661 DEFB $C4,$00,$9A,$08
 $D665 DEFB $2A,$00,$9A,$08
 $D669 DEFB $05,$00,$1E,$09
 $D66D DEFB $05,$00,$AB,$09
 $D671 DEFB $0F,$00,$40,$0A
 $D675 DEFB $2C,$00,$00,$00
 $D679 DEFB $29,$00,$40,$0A
 $D67D DEFB $2E,$00,$1E,$09
 $D681 DEFB $31,$00,$9A,$08
 $D685 DEFB $30,$00,$A6,$07
 $D689 DEFB $06,$00,$1C,$08
 $D68D DEFB $06,$00,$9A,$08
 $D691 DEFB $11,$00,$1E,$09
 $D695 DEFB $2C,$00,$00,$00
 $D699 DEFB $2E,$00,$1E,$09
 $D69D DEFB $4D,$00,$1C,$08
 $D6A1 DEFB $17,$00,$1E,$09
 $D6A5 DEFB $29,$00,$40,$0A
 $D6A9 DEFB $37,$00,$A6,$07
 $D6AD DEFB $0D,$00,$00,$00
 $D6B1 DEFB $37,$00,$A6,$07
 $D6B5 DEFB $33,$00,$1C,$08
 $D6B9 DEFB $29,$00,$40,$0A
 $D6BD DEFB $0D,$00,$00,$00
 $D6C1 DEFB $3D,$00,$CD,$06
 $D6C5 DEFB $13,$01,$A6,$07
 $D6C9 DEFB $1B,$00,$A6,$07
 $D6CD DEFB $1B,$00,$A6,$07
 $D6D1 DEFB $37,$00,$A6,$07
 $D6D5 DEFB $37,$00,$A6,$07
 $D6D9 DEFB $60,$00,$C4,$03
 $D6DD DEFB $0C,$00,$FF,$03
 $D6E1 DEFB $0C,$00,$3D,$04
 $D6E5 DEFB $22,$00,$80,$04
 $D6E9 DEFB $2C,$00,$00,$00
 $D6ED DEFB $5C,$00,$80,$04
 $D6F1 DEFB $62,$00,$3D,$04
 $D6F5 DEFB $6E,$00,$C4,$03
 $D6F9 DEFB $B8,$00,$31,$02
 $D6FD DEFB $0D,$00,$00,$00
 $D701 DEFB $B8,$00,$31,$02
 $D705 DEFB $0D,$00,$00,$00
 $D709 DEFB $4B,$02,$CA,$02
 $D70D DEFB $60,$00,$C4,$03
 $D711 DEFB $0C,$00,$FF,$03
 $D715 DEFB $0C,$00,$3D,$04
 $D719 DEFB $22,$00,$80,$04
 $D71D DEFB $2C,$00,$00,$00
 $D721 DEFB $5C,$00,$80,$04
 $D725 DEFB $62,$00,$3D,$04
 $D729 DEFB $5C,$00,$80,$04
 $D72D DEFB $6E,$00,$C4,$03
 $D731 DEFB $0D,$00,$00,$00
 $D735 DEFB $6E,$00,$C4,$03
 $D739 DEFB $0D,$00,$00,$00
 $D73D DEFB $88,$01,$3D,$04
 $D741 DEFB $55,$00,$3D,$04
 $D745 DEFB $0B,$00,$80,$04
 $D749 DEFB $0A,$00,$C6,$04
 $D74D DEFB $1E,$00,$11,$05
 $D751 DEFB $2C,$00,$00,$00
 $D755 DEFB $7B,$00,$57,$03
 $D759 DEFB $8A,$00,$F7,$02
 $D75D DEFB $7B,$00,$57,$03
 $D761 DEFB $92,$00,$CA,$02
 $D765 DEFB $6E,$00,$C4,$03
 $D769 DEFB $26,$00,$00,$00
 $D76D DEFB $6E,$00,$C4,$03
 $D771 DEFB $62,$00,$3D,$04
 $D775 DEFB $5C,$00,$80,$04
 $D779 DEFB $52,$00,$11,$05
 $D77D DEFB $3D,$00,$57,$03
 $D781 DEFB $13,$00,$00,$00
 $D785 DEFB $49,$00,$B3,$05
 $D789 DEFB $45,$00,$0C,$06
 $D78D DEFB $37,$00,$C4,$03
 $D791 DEFB $13,$00,$00,$00
 $D795 DEFB $45,$00,$0C,$06
 $D799 DEFB $6F,$01,$B3,$05
 $D79D DEFB $0D,$00,$00,$00
 $D7A1 DEFB $24,$00,$B3,$05
 $D7A5 DEFB $24,$00,$B3,$05
 $D7A9 DEFB $24,$00,$B3,$05
 $D7AD DEFB $24,$00,$B3,$05
 $D7B1 DEFB $3D,$00,$CD,$06
 $D7B5 DEFB $0D,$00,$00,$00
 $D7B9 DEFB $24,$00,$B3,$05
 $D7BD DEFB $24,$00,$B3,$05
 $D7C1 DEFB $24,$00,$B3,$05
 $D7C5 DEFB $24,$00,$B3,$05
 $D7C9 DEFB $3D,$00,$CD,$06
 $D7CD DEFB $0D,$00,$00,$00
 $D7D1 DEFB $49,$00,$B3,$05
 $D7D5 DEFB $0D,$00,$00,$00
 $D7D9 DEFB $52,$00,$11,$05
 $D7DD DEFB $49,$00,$B3,$05
 $D7E1 DEFB $DC,$00,$B3,$05
 $D7E5 DEFB $0D,$00,$00,$00
 $D7E9 DEFB $1E,$00,$CD,$06
 $D7ED DEFB $1E,$00,$CD,$06
 $D7F1 DEFB $1E,$00,$CD,$06
 $D7F5 DEFB $1E,$00,$CD,$06
 $D7F9 DEFB $3A,$00,$36,$07
 $D7FD DEFB $0D,$00,$00,$00
 $D801 DEFB $1E,$00,$CD,$06
 $D805 DEFB $1E,$00,$CD,$06
 $D809 DEFB $1E,$00,$CD,$06
 $D80D DEFB $1E,$00,$CD,$06
 $D811 DEFB $49,$00,$B3,$05
 $D815 DEFB $0D,$00,$00,$00
 $D819 DEFB $31,$00,$9A,$08
 $D81D DEFB $0D,$00,$00,$00
 $D821 DEFB $31,$00,$9A,$08
 $D825 DEFB $2E,$00,$1E,$09
 $D829 DEFB $8A,$00,$1E,$09
 $D82D DEFB $0D,$00,$00,$00
 $D831 DEFB $1B,$00,$A6,$07
 $D835 DEFB $19,$00,$1C,$08
 $D839 DEFB $1B,$00,$A6,$07
 $D83D DEFB $1E,$00,$CD,$06
 $D841 DEFB $41,$00,$6A,$06
 $D845 DEFB $0D,$00,$00,$00
 $D849 DEFB $3D,$00,$CD,$06
 $D84D DEFB $0D,$00,$00,$00
 $D851 DEFB $49,$00,$B3,$05
 $D855 DEFB $0D,$00,$00,$00
 $D859 DEFB $41,$00,$6A,$06
 $D85D DEFB $0D,$00,$00,$00
 $D861 DEFB $33,$00,$1C,$08
 $D865 DEFB $37,$00,$A6,$07
 $D869 DEFB $A5,$00,$A6,$07
 $D86D DEFB $0D,$00,$00,$00
 $D871 DEFB $24,$00,$B3,$05
 $D875 DEFB $24,$00,$B3,$05
 $D879 DEFB $24,$00,$B3,$05
 $D87D DEFB $24,$00,$B3,$05
 $D881 DEFB $5C,$00,$80,$04
 $D885 DEFB $0D,$00,$00,$00
 $D889 DEFB $52,$00,$11,$05
 $D88D DEFB $0D,$00,$00,$00
 $D891 DEFB $49,$00,$B3,$05
 $D895 DEFB $0D,$00,$00,$00
 $D899 DEFB $41,$00,$6A,$06
 $D89D DEFB $0D,$00,$00,$00
 $D8A1 DEFB $41,$00,$6A,$06
 $D8A5 DEFB $7B,$00,$57,$03
 $D8A9 DEFB $72,$01,$57,$03
 $D8AD DEFB $0D,$00,$00,$00
 $D8B1 DEFB $24,$00,$B3,$05
 $D8B5 DEFB $24,$00,$B3,$05
 $D8B9 DEFB $24,$00,$B3,$05
 $D8BD DEFB $24,$00,$B3,$05
 $D8C1 DEFB $3D,$00,$CD,$06
 $D8C5 DEFB $0D,$00,$00,$00
 $D8C9 DEFB $24,$00,$B3,$05
 $D8CD DEFB $24,$00,$B3,$05
 $D8D1 DEFB $24,$00,$B3,$05
 $D8D5 DEFB $24,$00,$B3,$05
 $D8D9 DEFB $3D,$00,$CD,$06
 $D8DD DEFB $0D,$00,$00,$00
 $D8E1 DEFB $49,$00,$B3,$05
 $D8E5 DEFB $0D,$00,$00,$00
 $D8E9 DEFB $52,$00,$11,$05
 $D8ED DEFB $49,$00,$B3,$05
 $D8F1 DEFB $DC,$00,$B3,$05
 $D8F5 DEFB $0D,$00,$00,$00
 $D8F9 DEFB $24,$00,$B3,$05
 $D8FD DEFB $24,$00,$B3,$05
 $D901 DEFB $24,$00,$B3,$05
 $D905 DEFB $24,$00,$B3,$05
 $D909 DEFB $3D,$00,$CD,$06
 $D90D DEFB $0D,$00,$00,$00
 $D911 DEFB $24,$00,$B3,$05
 $D915 DEFB $24,$00,$B3,$05
 $D919 DEFB $24,$00,$B3,$05
 $D91D DEFB $24,$00,$B3,$05
 $D921 DEFB $62,$00,$3D,$04
 $D925 DEFB $0D,$00,$00,$00
 $D929 DEFB $67,$00,$FF,$03
 $D92D DEFB $0D,$00,$00,$00
 $D931 DEFB $6E,$00,$C4,$03
 $D935 DEFB $52,$00,$11,$05
 $D939 DEFB $F7,$00,$11,$05
 $D93D DEFB $0B,$00,$00,$00
 $D941 DEFB $09,$00,$B3,$05
 $D945 DEFB $08,$00,$0C,$06
 $D949 DEFB $18,$00,$6A,$06
 $D94D DEFB $1E,$00,$CD,$06
 $D951 DEFB $20,$00,$6A,$06
 $D955 DEFB $24,$00,$B3,$05
 $D959 DEFB $52,$00,$11,$05
 $D95D DEFB $0B,$00,$00,$00
 $D961 DEFB $0B,$00,$80,$04
 $D965 DEFB $0A,$00,$C6,$04
 $D969 DEFB $1E,$00,$11,$05
 $D96D DEFB $26,$00,$60,$05
 $D971 DEFB $29,$00,$11,$05
 $D975 DEFB $2E,$00,$80,$04
 $D979 DEFB $62,$00,$3D,$04
 $D97D DEFB $0B,$00,$00,$00
 $D981 DEFB $0D,$00,$C4,$03
 $D985 DEFB $0C,$00,$FF,$03
 $D989 DEFB $24,$00,$3D,$04
 $D98D DEFB $2E,$00,$80,$04
 $D991 DEFB $31,$00,$3D,$04
 $D995 DEFB $37,$00,$C4,$03
 $D999 DEFB $7B,$00,$57,$03
 $D99D DEFB $A4,$00,$79,$02
 $D9A1 DEFB $B8,$01,$CA,$02
 $D9A5 DEFB $0D,$00,$00,$00
 $D9A9 DEFB $49,$00,$CA,$02
 $D9AD DEFB $45,$00,$F7,$02
 $D9B1 DEFB $41,$00,$25,$03
 $D9B5 DEFB $3D,$00,$57,$03
 $D9B9 DEFB $6E,$00,$C4,$03
 $D9BD DEFB $0D,$00,$00,$00
 $D9C1 DEFB $2E,$00,$80,$04
 $D9C5 DEFB $31,$00,$3D,$04
 $D9C9 DEFB $33,$00,$FF,$03
 $D9CD DEFB $37,$00,$C4,$03
 $D9D1 DEFB $92,$00,$CA,$02
 $D9D5 DEFB $0D,$00,$00,$00
 $D9D9 DEFB $5C,$00,$80,$04
 $D9DD DEFB $0D,$00,$00,$00
 $D9E1 DEFB $EA,$01,$3D,$04
 $D9E5 DEFB $0D,$00,$00,$00
 $D9E9 DEFB $09,$00,$B3,$05
 $D9ED DEFB $0A,$00,$11,$05
 $D9F1 DEFB $0B,$00,$80,$04
 $D9F5 DEFB $62,$00,$3D,$04
 $D9F9 DEFB $0D,$00,$00,$00
 $D9FD DEFB $FF,$FF,$FF,$FF

; Unused
;
; Holds part of a capture of a screen image of Room 00.
; Clearly used in debugging and overwritten later.
; #SCR2,0,0,32,17,$DA00,$CF54(screen_capture)
u$DA01 DEFB $B2,$B2,$3F,$3F,$BB,$00,$00
 $DA08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA10 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DA18 DEFB $00,$00,$BB,$3F,$3F,$B2,$B2,$B2
 $DA20 DEFB $3F,$3F,$3F,$3F,$00,$00,$00,$00
 $DA28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA30 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DA38 DEFB $00,$00,$00,$00,$3F,$3F,$3F,$3F
 $DA40 DEFB $3F,$00,$00,$00,$00,$00,$00,$00
 $DA48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA50 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DA58 DEFB $00,$00,$00,$00,$00,$00,$38,$3F
 $DA60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DA80 DEFB $00,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $DA88 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $DA90 DEFB $FF,$FF,$FF,$FF,$FF,$00,$00,$00
 $DA98 DEFB $00,$FF,$FF,$FF,$FF,$00,$00,$00
 $DAA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DAF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB08 DEFB $00,$00,$FF,$FF,$FF,$00,$00,$00
 $DB10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB48 DEFB $00,$00,$00,$00,$00,$00,$00,$FF
 $DB50 DEFB $FF,$FF,$FF,$00,$00,$00,$00,$00
 $DB58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB60 DEFB $E7,$00,$00,$00,$00,$00,$00,$00
 $DB68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DB70 DEFB $00,$00,$1C,$00,$00,$00,$1C,$00
 $DB78 DEFB $00,$00,$00,$00,$00,$00,$1C,$E7
 $DB80 DEFB $BB,$55,$55,$55,$55,$55,$55,$55
 $DB88 DEFB $55,$55,$55,$55,$55,$55,$55,$55
 $DB90 DEFB $55,$55,$55,$55,$55,$00,$1C,$00
 $DB98 DEFB $00,$55,$55,$55,$55,$00,$1C,$BB
 $DBA0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DBA8 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $DBB0 DEFB $00,$00,$00,$1C,$00,$00,$1C,$00
 $DBB8 DEFB $00,$00,$00,$00,$00,$00,$1C,$BB
 $DBC0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DBC8 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $DBD0 DEFB $00,$00,$00,$1C,$00,$00,$1C,$00
 $DBD8 DEFB $00,$00,$00,$00,$00,$00,$1C,$BB
 $DBE0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DBE8 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $DBF0 DEFB $00,$00,$00,$1C,$00,$00,$1C,$00
 $DBF8 DEFB $00,$00,$00,$00,$00,$00,$1C,$BB
 $DC00 DEFB $BB,$BB,$00,$00,$00,$00,$00,$00
 $DC08 DEFB $00,$00,$55,$55,$55,$00,$1C,$00
 $DC10 DEFB $00,$00,$00,$1C,$00,$00,$1C,$00
 $DC18 DEFB $00,$00,$00,$00,$00,$00,$1C,$BB
 $DC20 DEFB $BB,$BB,$BB,$00,$00,$00,$00,$00
 $DC28 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $DC30 DEFB $00,$00,$00,$1C,$00,$00,$1C,$00
 $DC38 DEFB $00,$00,$00,$1C,$00,$00,$1C,$BB
 $DC40 DEFB $BB,$BB,$BB,$BB,$00,$00,$00,$00
 $DC48 DEFB $00,$00,$00,$00,$00,$00,$1C,$55
 $DC50 DEFB $55,$55,$55,$1C,$00,$00,$E7,$E7
 $DC58 DEFB $E7,$E7,$E7,$E7,$E7,$E7,$E7,$BB
 $DC60 DEFB $F7,$00,$00,$00,$00,$00,$00,$00
 $DC68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DC70 DEFB $00,$00,$14,$00,$00,$00,$00,$00
 $DC78 DEFB $00,$00,$00,$00,$00,$00,$00,$F7
 $DC80 DEFB $AA,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $DC88 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $DC90 DEFB $FF,$FF,$FF,$FF,$FF,$00,$00,$00
 $DC98 DEFB $00,$FF,$FF,$FF,$FF,$00,$00,$AA
 $DCA0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $DCA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DCB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DCB8 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $DCC0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $DCC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DCD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DCD8 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $DCE0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $DCE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DCF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DCF8 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $DD00 DEFB $AA,$AA,$00,$00,$00,$00,$00,$00
 $DD08 DEFB $00,$00,$FF,$FF,$FF,$00,$00,$00
 $DD10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DD18 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $DD20 DEFB $AA,$AA,$AA,$00,$00,$00,$00,$00
 $DD28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DD30 DEFB $00,$00,$00,$00,$00,$00,$3E,$00
 $DD38 DEFB $00,$00,$00,$14,$00,$00,$3E,$AA
 $DD40 DEFB $AA,$AA,$AA,$AA,$00,$00,$00,$00
 $DD48 DEFB $00,$00,$00,$00,$00,$00,$00,$FF
 $DD50 DEFB $FF,$FF,$FF,$00,$00,$00,$F7,$F7
 $DD58 DEFB $F7,$F7,$F7,$F7,$F7,$F7,$F7,$AA
 $DD60 DEFB $F3,$00,$00,$00,$00,$00,$00,$00
 $DD68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DD70 DEFB $00,$00,$08,$00,$00,$00,$38,$00
 $DD78 DEFB $00,$00,$00,$00,$00,$00,$38,$F3
 $DD80 DEFB $BB,$AA,$AA,$AA,$AA,$AA,$AA,$AA
 $DD88 DEFB $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
 $DD90 DEFB $AA,$AA,$AA,$AA,$AA,$00,$38,$00
 $DD98 DEFB $00,$AA,$AA,$AA,$AA,$00,$38,$BB
 $DDA0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DDA8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DDB0 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $DDB8 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $DDC0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DDC8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DDD0 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $DDD8 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $DDE0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DDE8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DDF0 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $DDF8 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $DE00 DEFB $BB,$BB,$00,$00,$00,$00,$00,$00
 $DE08 DEFB $00,$00,$AA,$AA,$AA,$00,$38,$00
 $DE10 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $DE18 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $DE20 DEFB $BB,$BB,$BB,$00,$00,$00,$00,$00
 $DE28 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $DE30 DEFB $00,$00,$00,$38,$00,$00,$1C,$00
 $DE38 DEFB $00,$00,$00,$08,$00,$00,$1C,$BB
 $DE40 DEFB $BB,$BB,$BB,$BB,$00,$00,$00,$00
 $DE48 DEFB $00,$00,$00,$00,$00,$00,$38,$AA
 $DE50 DEFB $AA,$AA,$AA,$38,$00,$00,$F3,$F3
 $DE58 DEFB $F3,$F3,$F3,$F3,$F3,$F3,$F3,$BB
 $DE60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DE68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DE70 DEFB $00,$00,$08,$00,$00,$00,$00,$00
 $DE78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DE80 DEFB $00,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $DE88 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 $DE90 DEFB $FF,$FF,$FF,$FF,$FF,$00,$00,$00
 $DE98 DEFB $00,$FF,$FF,$FF,$FF,$00,$00,$00
 $DEA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DED0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DED8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DEF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF08 DEFB $00,$00,$FF,$FF,$FF,$00,$00,$00
 $DF10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF30 DEFB $00,$00,$00,$00,$00,$00,$2C,$00
 $DF38 DEFB $00,$00,$00,$08,$00,$00,$2C,$00
 $DF40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF48 DEFB $00,$00,$00,$00,$00,$00,$00,$FF
 $DF50 DEFB $FF,$FF,$FF,$00,$00,$00,$00,$00
 $DF58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF60 DEFB $7E,$00,$00,$00,$00,$00,$00,$00
 $DF68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF70 DEFB $00,$00,$08,$00,$00,$00,$70,$00
 $DF78 DEFB $00,$00,$00,$00,$00,$00,$70,$7E
 $DF80 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DF88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $DF90 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $DF98 DEFB $00,$00,$00,$00,$00,$00,$70,$BB
 $DFA0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DFA8 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $DFB0 DEFB $00,$00,$00,$70,$00,$00,$70,$00
 $DFB8 DEFB $00,$00,$00,$00,$00,$00,$70,$BB
 $DFC0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DFC8 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $DFD0 DEFB $00,$00,$00,$70,$00,$00,$70,$00
 $DFD8 DEFB $00,$00,$00,$00,$00,$00,$70,$BB
 $DFE0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $DFE8 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $DFF0 DEFB $00,$00,$00,$70,$00,$00,$70,$00
 $DFF8 DEFB $00,$00,$00,$00,$00,$00,$70,$BB
 $E000 DEFB $BB,$BB,$00,$00,$00,$00,$00,$00
 $E008 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E010 DEFB $00,$00,$00,$70,$00,$00,$70,$00
 $E018 DEFB $00,$00,$00,$00,$00,$00,$70,$BB
 $E020 DEFB $BB,$BB,$BB,$00,$00,$00,$00,$00
 $E028 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E030 DEFB $00,$00,$00,$70,$00,$00,$2A,$00
 $E038 DEFB $00,$00,$00,$08,$00,$00,$2A,$BB
 $E040 DEFB $BB,$BB,$BB,$BB,$00,$00,$00,$00
 $E048 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E050 DEFB $00,$00,$00,$70,$00,$00,$7E,$7E
 $E058 DEFB $7E,$7E,$7E,$7E,$7E,$7E,$7E,$BB
 $E060 DEFB $7F,$00,$00,$00,$00,$00,$00,$00
 $E068 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E070 DEFB $00,$00,$1C,$00,$00,$00,$00,$00
 $E078 DEFB $00,$00,$00,$00,$00,$00,$00,$7F
 $E080 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E088 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E090 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E098 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $E0A0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E0A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E0B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E0B8 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $E0C0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E0C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E0D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E0D8 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $E0E0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E0E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E0F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E0F8 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $E100 DEFB $AA,$AA,$00,$00,$00,$00,$00,$00
 $E108 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E110 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E118 DEFB $00,$00,$00,$00,$00,$00,$00,$AA
 $E120 DEFB $AA,$AA,$AA,$00,$00,$00,$00,$00
 $E128 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E130 DEFB $00,$00,$00,$00,$00,$00,$4A,$00
 $E138 DEFB $00,$00,$00,$1C,$00,$00,$4A,$AA
 $E140 DEFB $AA,$AA,$AA,$AA,$00,$00,$00,$00
 $E148 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E150 DEFB $00,$00,$00,$00,$00,$00,$7F,$7F
 $E158 DEFB $7F,$7F,$7F,$7F,$7F,$7F,$7F,$AA
 $E160 DEFB $3F,$00,$00,$00,$00,$00,$00,$00
 $E168 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E170 DEFB $00,$00,$1C,$00,$00,$00,$38,$00
 $E178 DEFB $00,$00,$00,$00,$00,$00,$38,$3F
 $E180 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E188 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E190 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E198 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $E1A0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E1A8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E1B0 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $E1B8 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $E1C0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E1C8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E1D0 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $E1D8 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $E1E0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E1E8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E1F0 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $E1F8 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $E200 DEFB $BB,$BB,$00,$00,$00,$00,$00,$00
 $E208 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E210 DEFB $00,$00,$00,$38,$00,$00,$38,$00
 $E218 DEFB $00,$00,$00,$00,$00,$00,$38,$BB
 $E220 DEFB $BB,$BB,$BB,$00,$00,$00,$00,$00
 $E228 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E230 DEFB $00,$00,$00,$38,$00,$00,$8A,$00
 $E238 DEFB $00,$00,$00,$1C,$00,$00,$8A,$BB
 $E240 DEFB $BB,$BB,$BB,$BB,$00,$00,$00,$00
 $E248 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E250 DEFB $00,$00,$00,$38,$00,$00,$3F,$3F
 $E258 DEFB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$BB
 $E260 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E268 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E270 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E278 DEFB $00,$00,$00,$00,$82,$82,$82,$00
 $E280 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E288 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E290 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E298 DEFB $00,$00,$00,$00,$82,$82,$82,$00
 $E2A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2B8 DEFB $00,$00,$00,$00,$00,$82,$82,$00
 $E2C0 DEFB $00,$FF,$00,$00,$FF,$FF,$FF,$FF
 $E2C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2D8 DEFB $00,$00,$00,$00,$00,$82,$82,$00
 $E2E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E2F8 DEFB $00,$00,$00,$00,$00,$00,$82,$00
 $E300 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E308 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E310 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E318 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E320 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E328 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E330 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E338 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E340 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E348 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E350 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E358 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E360 DEFB $BB,$BB,$BB,$BB,$BB,$00,$00,$00
 $E368 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $E370 DEFB $E7,$E7,$E7,$1C,$00,$00,$00,$00
 $E378 DEFB $1C,$00,$E7,$BB,$82,$82,$82,$BB
 $E380 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E388 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $E390 DEFB $E7,$E7,$E7,$1C,$00,$00,$00,$00
 $E398 DEFB $1C,$00,$00,$BB,$82,$82,$82,$BB
 $E3A0 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E3A8 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $E3B0 DEFB $E7,$E7,$E7,$1C,$00,$00,$00,$00
 $E3B8 DEFB $1C,$00,$00,$BB,$BB,$82,$82,$BB
 $E3C0 DEFB $BB,$55,$00,$00,$55,$55,$55,$55
 $E3C8 DEFB $00,$00,$00,$00,$00,$00,$1C,$00
 $E3D0 DEFB $E7,$E7,$E7,$1C,$00,$00,$00,$00
 $E3D8 DEFB $1C,$00,$00,$00,$BB,$82,$82,$BB
 $E3E0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E3E8 DEFB $00,$00,$00,$00,$1C,$00,$1C,$00
 $E3F0 DEFB $E7,$E7,$E7,$1C,$00,$00,$00,$00
 $E3F8 DEFB $1C,$00,$00,$00,$BB,$BB,$82,$BB
 $E400 DEFB $BB,$BB,$BB,$BB,$BB,$BB,$E7,$E7
 $E408 DEFB $E7,$E7,$E7,$E7,$E7,$E7,$E7,$E7
 $E410 DEFB $E7,$E7,$E7,$E7,$E7,$E7,$E7,$00
 $E418 DEFB $1C,$00,$00,$00,$00,$BB,$BB,$BB
 $E420 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E428 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E430 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E438 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E440 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E448 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E450 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E458 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E460 DEFB $AA,$AA,$AA,$AA,$AA,$00,$00,$00
 $E468 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E470 DEFB $F7,$F7,$F7,$00,$00,$00,$00,$00
 $E478 DEFB $00,$00,$F7,$AA,$86,$86,$86,$AA
 $E480 DEFB $AA,$00,$00,$00,$AA,$00,$00,$00
 $E488 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E490 DEFB $F7,$F7,$F7,$00,$00,$00,$00,$00
 $E498 DEFB $00,$00,$00,$AA,$86,$86,$86,$AA
 $E4A0 DEFB $AA,$00,$00,$00,$AA,$00,$00,$00
 $E4A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E4B0 DEFB $F7,$F7,$F7,$00,$00,$00,$00,$00
 $E4B8 DEFB $00,$00,$00,$AA,$AA,$86,$86,$AA
 $E4C0 DEFB $AA,$FF,$00,$00,$FF,$FF,$FF,$FF
 $E4C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E4D0 DEFB $F7,$F7,$F7,$00,$00,$00,$00,$00
 $E4D8 DEFB $00,$00,$00,$00,$AA,$86,$86,$AA
 $E4E0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E4E8 DEFB $00,$00,$00,$00,$14,$00,$3E,$00
 $E4F0 DEFB $F7,$F7,$F7,$3E,$00,$00,$00,$00
 $E4F8 DEFB $00,$00,$00,$00,$AA,$AA,$86,$AA
 $E500 DEFB $AA,$AA,$AA,$AA,$AA,$AA,$F7,$F7
 $E508 DEFB $F7,$F7,$F7,$F7,$F7,$F7,$F7,$F7
 $E510 DEFB $F7,$F7,$F7,$F7,$F7,$F7,$F7,$00
 $E518 DEFB $00,$00,$00,$00,$00,$AA,$AA,$AA
 $E520 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E528 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E530 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E538 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E548 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E550 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E558 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E560 DEFB $BB,$BB,$BB,$BB,$BB,$00,$00,$00
 $E568 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E570 DEFB $F3,$F3,$F3,$38,$00,$00,$00,$00
 $E578 DEFB $38,$00,$F3,$BB,$FE,$FE,$FE,$BB
 $E580 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E588 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E590 DEFB $F3,$F3,$F3,$38,$00,$00,$00,$00
 $E598 DEFB $38,$00,$00,$BB,$FE,$FE,$FE,$BB
 $E5A0 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E5A8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E5B0 DEFB $F3,$F3,$F3,$38,$00,$00,$00,$00
 $E5B8 DEFB $38,$00,$00,$BB,$BB,$FE,$FE,$BB
 $E5C0 DEFB $BB,$AA,$00,$00,$AA,$AA,$AA,$AA
 $E5C8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E5D0 DEFB $F3,$F3,$F3,$38,$00,$00,$00,$00
 $E5D8 DEFB $38,$00,$00,$00,$BB,$FE,$FE,$BB
 $E5E0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E5E8 DEFB $00,$00,$00,$00,$08,$00,$1C,$00
 $E5F0 DEFB $F3,$F3,$F3,$1C,$00,$00,$00,$00
 $E5F8 DEFB $38,$00,$00,$00,$BB,$BB,$FE,$BB
 $E600 DEFB $BB,$BB,$BB,$BB,$BB,$BB,$F3,$F3
 $E608 DEFB $F3,$F3,$F3,$F3,$F3,$F3,$F3,$F3
 $E610 DEFB $F3,$F3,$F3,$F3,$F3,$F3,$F3,$00
 $E618 DEFB $38,$00,$00,$00,$00,$BB,$BB,$BB
 $E620 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E628 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E630 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E638 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E640 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E648 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E650 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E658 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E660 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E668 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E670 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E678 DEFB $00,$00,$00,$00,$C0,$C0,$C0,$00
 $E680 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E688 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E690 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E698 DEFB $00,$00,$00,$00,$C0,$C0,$C0,$00
 $E6A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E6A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E6B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E6B8 DEFB $00,$00,$00,$00,$00,$C0,$C0,$00
 $E6C0 DEFB $00,$FF,$00,$00,$FF,$FF,$FF,$FF
 $E6C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E6D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E6D8 DEFB $00,$00,$00,$00,$00,$C0,$C0,$00
 $E6E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E6E8 DEFB $00,$00,$00,$00,$08,$00,$2C,$00
 $E6F0 DEFB $00,$00,$00,$2C,$00,$00,$00,$00
 $E6F8 DEFB $00,$00,$00,$00,$00,$00,$C0,$00
 $E700 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E708 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E710 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E718 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E720 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E728 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E730 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E738 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E740 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E748 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E750 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E758 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E760 DEFB $BB,$BB,$BB,$BB,$BB,$00,$00,$00
 $E768 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E770 DEFB $7E,$7E,$7E,$70,$00,$00,$00,$00
 $E778 DEFB $70,$00,$7E,$BB,$1E,$1E,$1E,$BB
 $E780 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E788 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E790 DEFB $7E,$7E,$7E,$70,$00,$00,$00,$00
 $E798 DEFB $70,$00,$00,$BB,$1E,$1E,$1E,$BB
 $E7A0 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E7A8 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E7B0 DEFB $7E,$7E,$7E,$70,$00,$00,$00,$00
 $E7B8 DEFB $70,$00,$00,$BB,$BB,$1E,$1E,$BB
 $E7C0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E7C8 DEFB $00,$00,$00,$00,$00,$00,$70,$00
 $E7D0 DEFB $7E,$7E,$7E,$70,$00,$00,$00,$00
 $E7D8 DEFB $70,$00,$00,$00,$BB,$1E,$1E,$BB
 $E7E0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E7E8 DEFB $00,$00,$00,$00,$08,$00,$2A,$00
 $E7F0 DEFB $7E,$7E,$7E,$2A,$00,$00,$00,$00
 $E7F8 DEFB $70,$00,$00,$00,$BB,$BB,$1E,$BB
 $E800 DEFB $BB,$BB,$BB,$BB,$BB,$BB,$7E,$7E
 $E808 DEFB $7E,$7E,$7E,$7E,$7E,$7E,$7E,$7E
 $E810 DEFB $7E,$7E,$7E,$7E,$7E,$7E,$7E,$00
 $E818 DEFB $70,$00,$00,$00,$00,$BB,$BB,$BB
 $E820 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E828 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E830 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E838 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E840 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E848 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E850 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E858 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E860 DEFB $AA,$AA,$AA,$AA,$AA,$00,$00,$00
 $E868 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E870 DEFB $7F,$7F,$7F,$00,$00,$00,$00,$00
 $E878 DEFB $00,$00,$7F,$AA,$F6,$F6,$F6,$AA
 $E880 DEFB $AA,$00,$00,$00,$AA,$00,$00,$00
 $E888 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E890 DEFB $7F,$7F,$7F,$00,$00,$00,$00,$00
 $E898 DEFB $00,$00,$00,$AA,$F6,$F6,$F6,$AA
 $E8A0 DEFB $AA,$00,$00,$00,$AA,$00,$00,$00
 $E8A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E8B0 DEFB $7F,$7F,$7F,$00,$00,$00,$00,$00
 $E8B8 DEFB $00,$00,$00,$AA,$AA,$F6,$F6,$AA
 $E8C0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E8C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E8D0 DEFB $7F,$7F,$7F,$00,$00,$00,$00,$00
 $E8D8 DEFB $00,$00,$00,$00,$AA,$F6,$F6,$AA
 $E8E0 DEFB $AA,$00,$00,$00,$00,$00,$00,$00
 $E8E8 DEFB $00,$00,$00,$00,$1C,$00,$4A,$00
 $E8F0 DEFB $7F,$7F,$7F,$4A,$00,$00,$00,$00
 $E8F8 DEFB $00,$00,$00,$00,$AA,$AA,$F6,$AA
 $E900 DEFB $AA,$AA,$AA,$AA,$AA,$AA,$7F,$7F
 $E908 DEFB $7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F
 $E910 DEFB $7F,$7F,$7F,$7F,$7F,$7F,$7F,$00
 $E918 DEFB $00,$00,$00,$00,$00,$AA,$AA,$AA
 $E920 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E928 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E930 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E938 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E940 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E948 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E950 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E958 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $E960 DEFB $BB,$BB,$BB,$BB,$BB,$00,$00,$00
 $E968 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E970 DEFB $3F,$3F,$3F,$38,$00,$00,$00,$00
 $E978 DEFB $38,$00,$3F,$BB,$B2,$B2,$B2,$BB
 $E980 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E988 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E990 DEFB $3F,$3F,$3F,$38,$00,$00,$00,$00
 $E998 DEFB $38,$00,$00,$BB,$B2,$B2,$B2,$BB
 $E9A0 DEFB $BB,$00,$00,$00,$BB,$00,$00,$00
 $E9A8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E9B0 DEFB $3F,$3F,$3F,$38,$00,$00,$00,$00
 $E9B8 DEFB $38,$00,$00,$BB,$BB,$B2,$B2,$BB
 $E9C0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E9C8 DEFB $00,$00,$00,$00,$00,$00,$38,$00
 $E9D0 DEFB $3F,$3F,$3F,$38,$00,$00,$00,$00
 $E9D8 DEFB $38,$00,$00,$00,$BB,$B2,$B2,$BB
 $E9E0 DEFB $BB,$00,$00,$00,$00,$00,$00,$00
 $E9E8 DEFB $00,$00,$00,$00,$1C,$00,$8A,$00
 $E9F0 DEFB $3F,$3F,$3F,$8A,$00,$00,$00,$00
 $E9F8 DEFB $38,$00,$00,$00,$BB,$BB,$B2,$BB
 $EA00 DEFB $BB,$BB,$BB,$BB,$BB,$BB,$3F,$3F
 $EA08 DEFB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F
 $EA10 DEFB $3F,$3F,$3F,$3F,$3F,$3F,$3F,$00
 $EA18 DEFB $38,$00,$00,$00,$00,$BB,$BB,$BB
 $EA20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EA58 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Offsets from character to relative screen positions
w$EA60 DEFW $57E0
 $EA62 DEFW $56E0
 $EA64 DEFW $55E0
 $EA66 DEFW $54E0
 $EA68 DEFW $53E0
 $EA6A DEFW $52E0
 $EA6C DEFW $51E0
 $EA6E DEFW $50E0
 $EA70 DEFW $57C0
 $EA72 DEFW $56C0
 $EA74 DEFW $55C0
 $EA76 DEFW $54C0
 $EA78 DEFW $53C0
 $EA7A DEFW $52C0
 $EA7C DEFW $51C0
 $EA7E DEFW $50C0
 $EA80 DEFW $57A0
 $EA82 DEFW $56A0
 $EA84 DEFW $55A0
 $EA86 DEFW $54A0
 $EA88 DEFW $53A0
 $EA8A DEFW $52A0
 $EA8C DEFW $51A0
 $EA8E DEFW $50A0
 $EA90 DEFW $5780
 $EA92 DEFW $5680
 $EA94 DEFW $5580
 $EA96 DEFW $5480
 $EA98 DEFW $5380
 $EA9A DEFW $5280
 $EA9C DEFW $5180
 $EA9E DEFW $5080
 $EAA0 DEFW $5760
 $EAA2 DEFW $5660
 $EAA4 DEFW $5560
 $EAA6 DEFW $5460
 $EAA8 DEFW $5360
 $EAAA DEFW $5260
 $EAAC DEFW $5160
 $EAAE DEFW $5060
 $EAB0 DEFW $5740
 $EAB2 DEFW $5640
 $EAB4 DEFW $5540
 $EAB6 DEFW $5440
 $EAB8 DEFW $5340
 $EABA DEFW $5240
 $EABC DEFW $5140
 $EABE DEFW $5040
 $EAC0 DEFW $5720
 $EAC2 DEFW $5620
 $EAC4 DEFW $5520
 $EAC6 DEFW $5420
 $EAC8 DEFW $5320
 $EACA DEFW $5220
 $EACC DEFW $5120
 $EACE DEFW $5020
 $EAD0 DEFW $5700
 $EAD2 DEFW $5600
 $EAD4 DEFW $5500
 $EAD6 DEFW $5400
 $EAD8 DEFW $5300
 $EADA DEFW $5200
 $EADC DEFW $5100
 $EADE DEFW $5000
 $EAE0 DEFW $4FE0
 $EAE2 DEFW $4EE0
 $EAE4 DEFW $4DE0
 $EAE6 DEFW $4CE0
 $EAE8 DEFW $4BE0
 $EAEA DEFW $4AE0
 $EAEC DEFW $49E0
 $EAEE DEFW $48E0
 $EAF0 DEFW $4FC0
 $EAF2 DEFW $4EC0
 $EAF4 DEFW $4DC0
 $EAF6 DEFW $4CC0
 $EAF8 DEFW $4BC0
 $EAFA DEFW $4AC0
 $EAFC DEFW $49C0
 $EAFE DEFW $48C0
 $EB00 DEFW $4FA0
 $EB02 DEFW $4EA0
 $EB04 DEFW $4DA0
 $EB06 DEFW $4CA0
 $EB08 DEFW $4BA0
 $EB0A DEFW $4AA0
 $EB0C DEFW $49A0
 $EB0E DEFW $48A0
 $EB10 DEFW $4F80
 $EB12 DEFW $4E80
 $EB14 DEFW $4D80
 $EB16 DEFW $4C80
 $EB18 DEFW $4B80
 $EB1A DEFW $4A80
 $EB1C DEFW $4980
 $EB1E DEFW $4880
 $EB20 DEFW $4F60
 $EB22 DEFW $4E60
 $EB24 DEFW $4D60
 $EB26 DEFW $4C60
 $EB28 DEFW $4B60
 $EB2A DEFW $4A60
 $EB2C DEFW $4960
 $EB2E DEFW $4860
 $EB30 DEFW $4F40
 $EB32 DEFW $4E40
 $EB34 DEFW $4D40
 $EB36 DEFW $4C40
 $EB38 DEFW $4B40
 $EB3A DEFW $4A40
 $EB3C DEFW $4940
 $EB3E DEFW $4840
 $EB40 DEFW $4F20
 $EB42 DEFW $4E20
 $EB44 DEFW $4D20
 $EB46 DEFW $4C20
 $EB48 DEFW $4B20
 $EB4A DEFW $4A20
 $EB4C DEFW $4920
 $EB4E DEFW $4820
 $EB50 DEFW $4F00
 $EB52 DEFW $4E00
 $EB54 DEFW $4D00
 $EB56 DEFW $4C00
 $EB58 DEFW $4B00
 $EB5A DEFW $4A00
 $EB5C DEFW $4900
 $EB5E DEFW $4800
 $EB60 DEFW $47E0
 $EB62 DEFW $46E0
 $EB64 DEFW $45E0
 $EB66 DEFW $44E0
 $EB68 DEFW $43E0
 $EB6A DEFW $42E0
 $EB6C DEFW $41E0
 $EB6E DEFW $40E0
 $EB70 DEFW $47C0
 $EB72 DEFW $46C0
 $EB74 DEFW $45C0
 $EB76 DEFW $44C0
 $EB78 DEFW $43C0
 $EB7A DEFW $42C0
 $EB7C DEFW $41C0
 $EB7E DEFW $40C0
 $EB80 DEFW $47A0
 $EB82 DEFW $46A0
 $EB84 DEFW $45A0
 $EB86 DEFW $44A0
 $EB88 DEFW $43A0
 $EB8A DEFW $42A0
 $EB8C DEFW $41A0
 $EB8E DEFW $40A0
 $EB90 DEFW $4780
 $EB92 DEFW $4680
 $EB94 DEFW $4580
 $EB96 DEFW $4480
 $EB98 DEFW $4380
 $EB9A DEFW $4280
 $EB9C DEFW $4180
 $EB9E DEFW $4080
 $EBA0 DEFW $4760
 $EBA2 DEFW $4660
 $EBA4 DEFW $4560
 $EBA6 DEFW $4460
 $EBA8 DEFW $4360
 $EBAA DEFW $4260
 $EBAC DEFW $4160
 $EBAE DEFW $4060
 $EBB0 DEFW $4740
 $EBB2 DEFW $4640
 $EBB4 DEFW $4540
 $EBB6 DEFW $4440
 $EBB8 DEFW $4340
 $EBBA DEFW $4240
 $EBBC DEFW $4140
 $EBBE DEFW $4040
 $EBC0 DEFW $4720
 $EBC2 DEFW $4620
 $EBC4 DEFW $4520
 $EBC6 DEFW $4420
 $EBC8 DEFW $4320
 $EBCA DEFW $4220
 $EBCC DEFW $4120
 $EBCE DEFW $4020
 $EBD0 DEFW $4700
 $EBD2 DEFW $4600
 $EBD4 DEFW $4500
 $EBD6 DEFW $4400
 $EBD8 DEFW $4300
 $EBDA DEFW $4200
 $EBDC DEFW $4100
 $EBDE DEFW $4000

; Print an animinated object on screen
;
; Used by the routines at #R$8751, #R$8B34, #R$8D7F, #R$8EDD, #R$952F, #R$968D,
; #R$96D9, #R$CB93 and #R$CDC4.
c$EBE0 LD A,($ECDE)  ; Get the X co-ordinate at #R$ECDE.
; Get the position and work out what frame number should be used,
; shifting the bits to the desired location.
 $EBE3 AND $07       ; Take the first three bits to get the frame number.
 $EBE5 CP $04        ; Is it greater than 4?
 $EBE7 JR C,$EBEE    ; Skip the next bit if it is.
*$EBE9 CALL $ECA2    ; { Shift the sprite to the left and move forward.
 $EBEC JR $EBF5      ; }
*$EBEE CP $00        ; Is the frame 0?
 $EBF0 JR Z,$EBE9    ; Skip the next bit if it is.
 $EBF2 CALL $EC6F    ; Shift the sprite to the right.
; Now work out where on screen should be updated.
*$EBF5 LD A,($ECDE)  ; Get the co-ordinates
 $EBF8 DEC A         ; { Put the top five bits in #REGhl.
 $EBF9 AND $F8       ;
 $EBFB SRL A         ;
 $EBFD SRL A         ;
 $EBFF SRL A         ; 
 $EC01 LD L,A        ;
 $EC02 LD H,$00      ; }
 $EC04 LD ($ED14),HL ; Store this as the next offset to use.
 $EC07 LD A,($ECDF)  ; Get the Y co-ordinate at #R$ECDF.
 $EC0A LD D,$00      ; { Store this in #REGde.
 $EC0C LD E,A        ; }
 $EC0D LD HL,$EA60   ;{ Add the base offset for the screen address table in #R$EA60.
 $EC10 ADD HL,DE     ;
 $EC11 ADD HL,DE     ; }
 $EC12 LD ($ECE2),HL ; Store this as the pointer to the screen that should be updated.
; Copy the bytes from the working buffer onto screen.
 $EC15 LD DE,$ECE4   ; Point #REGde at the working buffer at #R$ECE4.
 $EC18 LD B,$10      ; { 16 cells to copy.
*$EC1A PUSH BC       ; }
 $EC1B LD HL,($ECE2) ; Get the pointer to the screen address to update.
 $EC1E LD A,(HL)     ; { Get the actual screen address in #REGhl.
 $EC1F INC HL        ;
 $EC20 LD H,(HL)     ;
 $EC21 LD L,A        ; }
 $EC22 PUSH DE       ; Remember #REGde which points at the working buffer.
 $EC23 LD DE,($ED14) ; Get the offset to use.
 $EC27 ADD HL,DE     ; Add this to get the actual screen address to use in #REGhl.
 $EC28 POP DE        ; Restore #REGde.
 $EC29 LD B,$03      ; 3 cells to copy.
*$EC2B EX DE,HL      ; { Copy the cells from the buffer to screen.
 $EC2C LD A,(HL)     ;
 $EC2D EX DE,HL      ;
 $EC2E LD (HL),A     ; }
 $EC2F CALL $EC59    ; Merge the bytes.
 $EC32 INC HL        ; { Move to the next cell.
 $EC33 INC DE        ; }
 $EC34 DJNZ $EC2B    ; Loop back if there is more to do.
 $EC36 LD HL,($ECE2) ; { Move to the previous screen address.
 $EC39 DEC HL        ;
 $EC3A DEC HL        ;
 $EC3B LD ($ECE2),HL ; }
 $EC3E POP BC        ; { Loop back if there are more cells to copy.
 $EC3F DJNZ $EC1A    ; }
 $EC41 LD A,($ECDF)  ; { Point #REGhl at the next pointer to the screen address table.
 $EC44 AND $F8       ;
 $EC46 SRL A         ;
 $EC48 SRL A         ;
 $EC4A SRL A         ;
 $EC4C SUB $17       ;
 $EC4E NEG           ;
 $EC50 LD L,A        ;
 $EC51 LD H,$00      ;
 $EC53 LD B,$05      ;
*$EC55 ADD HL,HL     ; }
 $EC56 DJNZ $EC55    ; { Loop back until all the cells have been copied.
 $EC58 RET           ; }

; Merge a byte from the screen buffer onto screen.
;
; Used by the routine at #R$EBE0.
*$EC59 PUSH HL       ; { Remember #REGhl and #REGde.
 $EC5A PUSH DE       ; }
 $EC5B LD DE,$9260   ; { Add an offset from the screen address to the buffer at #R$D260.
 $EC5E ADD HL,DE     ; }
 $EC5F LD A,(HL)     ; Get the graphic data.
 $EC60 POP DE        ; { Restore #REGhl and #REGde.}
 $EC61 POP HL        ;
 $EC62 OR (HL)       ; Merge the set bits in the buffer with that on sreen.
 $EC63 LD (HL),A     ; { Store it and return.
 $EC64 RET           ; }

; Unused
u$EC65 LD (HL),A
 $EC66 INC HL
 $EC67 LD (HL),A
 $EC68 LD DE,$001E
 $EC6B ADD HL,DE
 $EC6C DJNZ $EC63
 $EC6E RET

; Shift a sprite to the right and copy it into a working buffer
;
; Used by the routine at #R$EBE0.
;
; A Current frame number
c$EC6F LD ($ECDC),A  ; Store the frame number.
 $EC72 LD HL,$ECE4   ; Put the address of the temporary store in #REGhl.
 $EC75 LD DE,($ECE0) ; Put the next graphic to print in #REGde.
 $EC79 LD B,$10      ; 16 pairs of cells to copy.
*$EC7B EX DE,HL      ; { Copy the byte from the graphic entry to the temporary store.
 $EC7C LD A,(HL)     ;
 $EC7D EX DE,HL      ;
 $EC7E LD (HL),A     ; }
 $EC7F INC HL        ; { Move to the next cell.
 $EC80 INC DE        ; }
 $EC81 EX DE,HL      ; { Copy the byte from the graphic entry to the temporary store.
 $EC82 LD A,(HL)     ;
 $EC83 EX DE,HL      ;
 $EC84 LD (HL),A     ; }
 $EC85 INC HL        ; { Move to the next cell.
 $EC86 INC DE        ; }
 $EC87 LD (HL),$00   ; Erase it.
 $EC89 INC HL        ; Move to the next cell.
 $EC8A DJNZ $EC7B    ; Loop back while there is more to copy.
 $EC8C LD A,($ECDC)  ; Get the frame number.
 $EC8F LD B,A        ; { Store this in #REGb.
*$EC90 PUSH BC       ; }
 $EC91 LD HL,$ECE4   ; Put the address of the temporary store in #REGhl.
 $EC94 LD B,$30      ; #N$30 cells to copy.
*$EC96 LD A,(HL)     ; Get the data from screen.
 $EC97 RRA           ; Shift it right.
 $EC98 PUSH AF       ; Store #REGaf.
 $EC99 LD (HL),A     ; Set the data back.
 $EC9A INC HL        ; Move to the next cell.
 $EC9B POP AF        ; Restore #REGaf.
 $EC9C DJNZ $EC96    ; Loop back if there are more cells.
 $EC9E POP BC        ; { Loop back until we get the right frame number to copy.
 $EC9F DJNZ $EC90    ; 
 $ECA1 RET           ; }

; Shift a sprite to the left and copy it into a working buffer
;
; Used by the routine at #R$EBE0.
c$ECA2 LD ($ECDC),A  ; Store the current frame number.
 $ECA5 LD HL,$ECE4   ; Point #REGhl to the temporary store.
 $ECA8 LD DE,($ECE0) ; Point #REGde to the next graphic to print.
 $ECAC LD B,$10      ; (16) pairs of cells to copy.
*$ECAE LD (HL),$00   ; Clear the first cell.
 $ECB0 INC HL        ; Move to the next cell.
 $ECB1 EX DE,HL      ; { Copy it from the graphic entry to the temporary store.
 $ECB2 LD A,(HL)     ;
 $ECB3 EX DE,HL      ;
 $ECB4 LD (HL),A     ; }
 $ECB5 INC HL        ; { Move to the next cell.
 $ECB6 INC DE        ; }
 $ECB7 EX DE,HL      ; { Copy the byte from the graphic entry to the temporary store.
 $ECB8 LD A,(HL)     ;
 $ECB9 EX DE,HL      ;
 $ECBA LD (HL),A     ; }
 $ECBB INC HL        ; { Move to the next cell.
 $ECBC INC DE        ; }
 $ECBD DJNZ $ECAE    ; Loop while there is more to copy.
 $ECBF LD A,($ECDC)  ; Get the frame number.
 $ECC2 LD B,A        ; Store this in #REGb.
 $ECC3 CP $00        ; { Return if the frame is 0 - no update needed.
 $ECC5 RET Z         ; }
 $ECC6 LD A,$08      ; { Invert the number of cells to update.
 $ECC8 SUB B         ;
 $ECC9 LD B,A        ; }
*$ECCA PUSH BC       ; Store #REGbc
 $ECCB LD HL,$ED13   ; Point #REGhl to the back of the buffer.
 $ECCE LD B,$30      ; #N$30 cells to update.
*$ECD0 LD A,(HL)     ; Get the next byte.
 $ECD1 RLA           ; Shift it to the left.
 $ECD2 PUSH AF       ; Store #REGaf.
 $ECD3 LD (HL),A     ; Set the data back.
 $ECD4 DEC HL        ; Move to the previous cell.
 $ECD5 POP AF        ; Restore #REGaf.
 $ECD6 DJNZ $ECD0    ; Loop back if there are more cells.
 $ECD8 POP BC        ; { Loop back until we get the right frame number to copy.
 $ECD9 DJNZ $ECCA    ; 
 $ECDB RET           ; }

; Frame number of the next sprite to update
;
; Used by the routines in #R$EC6F and #R$ECA2.
g$ECDC DEFB $02

; Unused
u$ECDD DEFB $70

; X co-ordinate of next sprite to update
;
; Used by the routines in #R$EC6F and #R$ECA2.
g$ECDE DEFB $6A

; Y co-ordinate of next sprite to update
;
; Used by the routines in #R$EC6F and #R$ECA2.
g$ECDF DEFB $4F

; Address of next sprite to update
;
; Used by the routines in #R$EC6F and #R$ECA2.
g$ECE0 DEFW $8499

; Pointer to position on screen to update
;
; Used by the routines in #R$EC6F and #R$ECA2.
;
; .
;
; This is an entry in the screen buffer table at #R$EA60.
g$ECE2 DEFW $EADE

; Working buffer for moving sprites
g$ECE4 DEFB $00,$78,$00,$00,$FC,$00,$00,$FC
 $ECEC DEFB $00,$00,$78,$00,$01,$FE,$00,$03
 $ECF4 DEFB $FE,$00,$07,$FF,$00,$07,$FB,$80
 $ECFC DEFB $03,$FB,$80,$07,$FC,$80,$07,$FF
 $ED04 DEFB $00,$04,$FF,$00,$03,$7E,$00,$07
 $ED0C DEFB $BC,$00,$07,$1E,$00,$00,$00,$00

 ; Screen address offset to use when updating sprites.
 ;
 ; Used by the routine at #R$EBE0.
 g$ED14 DEFW $000D 
 
; Unused
u$ED16 ADD A,B
*$ED17 LD D,$00
 $ED19 DJNZ $ED17
 $ED1B LD BC,$05FF
 $ED1E INC HL
 $ED1F CP (HL)
 $ED20 JR Z,$ED28
*$ED22 DEC B
 $ED23 LDI
 $ED25 CP (HL)
 $ED26 JR NZ,$ED22
*$ED28 LD (DE),A
 $ED29 INC DE
 $ED2A DJNZ $ED28
 $ED2C INC HL
 $ED2D RET

; Unused
u$ED2E DEFB $ED,$5B,$A6,$EB,$1A,$AE,$20,$04
 $ED36 DEFB $23,$13,$18,$F8,$CB,$17,$20,$09
 $ED3E DEFB $13,$1A,$A7,$CD,$99,$FC,$20,$03
 $ED46 DEFB $C9,$CB,$7E,$23,$28,$FB,$23,$7E

; Chimney smoke for start room
;
; #UDGARRAY5,7,4,5($ED4E-$ED52;$ED76-$ED7A;$ED9E-$EDA2)(smoke_a*)
; #UDGARRAY5,7,4,5($EDC6-$EDCA;$EDEE-$EDF2;$EE16-$EE1A)(smoke_b*)
; #UDGARRAY5,7,4,5($EE3E-$EE42;$EE66-$EE6A;$EE8E-$EE92)(smoke_c*)
; #UDGARRAY5,7,4,5($EEB6-$EEBA;$EEDE-$EEE2;$EF06-$EF0A)(smoke_d*)
; #UDGARRAY*(smoke_a;smoke_b;smoke_c;smoke_d)(smoke)
b$ED4E DEFB $00,$00,$00,$00,$00,$00,$1F,$F9
 $ED56 DEFB $F0,$00,$0F,$FF,$FE,$F8,$01,$1F
 $ED5E DEFB $FF,$FF,$7C,$01,$0F,$FF,$FF,$7E
 $ED66 DEFB $07,$00,$3F,$FE,$7E,$0F,$00,$03
 $ED6E DEFB $CC,$7E,$0C,$00,$00,$00,$FF,$83
 $ED76 DEFB $00,$00,$07,$FF,$8F,$00,$00,$07
 $ED7E DEFB $F7,$FF,$00,$00,$03,$EF,$FF,$00
 $ED86 DEFB $00,$01,$EF,$FF,$00,$00,$00,$F1
 $ED8E DEFB $FF,$00,$00,$00,$7F,$FF,$00,$00
 $ED96 DEFB $00,$1F,$FF,$00,$00,$00,$0F,$FF
 $ED9E DEFB $00,$00,$00,$0F,$DF,$00,$00,$00
 $EDA6 DEFB $07,$BF,$00,$00,$00,$03,$DF,$00
 $EDAE DEFB $00,$00,$03,$DF,$00,$00,$00,$01
 $EDB6 DEFB $DF,$00,$00,$00,$00,$EF,$00,$00
 $EDBE DEFB $00,$00,$7F,$00,$00,$00,$00,$3F
 $EDC6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $EDCE DEFB $00,$00,$0F,$C0,$03,$F0,$00,$3F
 $EDD6 DEFB $F8,$FF,$FC,$01,$07,$FD,$FF,$FE
 $EDDE DEFB $03,$00,$3D,$FF,$FF,$00,$00,$00
 $EDE6 DEFB $FF,$FF,$83,$00,$00,$0F,$FF,$8F
 $EDEE DEFB $00,$00,$07,$FF,$FF,$00,$00,$03
 $EDF6 DEFB $FF,$FF,$00,$00,$03,$FF,$FF,$00
 $EDFE DEFB $00,$01,$FF,$FF,$00,$00,$01,$F3
 $EE06 DEFB $FF,$00,$00,$00,$2F,$FF,$00,$00
 $EE0E DEFB $00,$1F,$FF,$00,$00,$00,$1F,$7F
 $EE16 DEFB $00,$00,$00,$0F,$BF,$00,$00,$00
 $EE1E DEFB $07,$DF,$00,$00,$00,$01,$DF,$00
 $EE26 DEFB $00,$00,$01,$EF,$00,$00,$00,$00
 $EE2E DEFB $FF,$00,$00,$00,$00,$7F,$00,$00
 $EE36 DEFB $00,$00,$7F,$00,$00,$00,$00,$7F
 $EE3E DEFB $00,$00,$00,$00,$00,$00,$07,$E7
 $EE46 DEFB $C0,$00,$3E,$0F,$FF,$F8,$00,$7F
 $EE4E DEFB $CF,$FF,$FC,$00,$0F,$83,$FF,$FE
 $EE56 DEFB $00,$00,$00,$3F,$FF,$83,$00,$00
 $EE5E DEFB $07,$FF,$8F,$00,$00,$03,$FF,$BF
 $EE66 DEFB $00,$00,$03,$FF,$FF,$00,$00,$01
 $EE6E DEFB $FF,$FF,$00,$00,$01,$E7,$FF,$00
 $EE76 DEFB $00,$00,$DF,$FF,$00,$00,$00,$3F
 $EE7E DEFB $FF,$00,$00,$00,$3F,$FF,$00,$00
 $EE86 DEFB $00,$1D,$FF,$00,$00,$00,$0E,$3F
 $EE8E DEFB $00,$00,$00,$0F,$DF,$00,$00,$00
 $EE96 DEFB $0F,$EF,$00,$00,$00,$07,$FF,$00
 $EE9E DEFB $00,$00,$01,$FF,$00,$00,$00,$00
 $EEA6 DEFB $7F,$00,$00,$00,$00,$7F,$00,$00
 $EEAE DEFB $00,$00,$37,$00,$00,$00,$00,$3B
 $EEB6 DEFB $00,$00,$00,$00,$00,$00,$07,$FF
 $EEBE DEFB $DC,$00,$03,$FF,$FF,$CF,$00,$07
 $EEC6 DEFB $FF,$FF,$F7,$83,$03,$FF,$FF,$FF
 $EECE DEFB $9F,$00,$0F,$FF,$9F,$BF,$00,$00
 $EED6 DEFB $F3,$7F,$BF,$00,$00,$00,$FF,$BF
 $EEDE DEFB $00,$00,$01,$FF,$B3,$00,$00,$01
 $EEE6 DEFB $FF,$CD,$00,$00,$01,$FF,$FF,$00
 $EEEE DEFB $00,$01,$FD,$FF,$00,$00,$00,$FB
 $EEF6 DEFB $FF,$00,$00,$00,$7C,$1F,$00,$00
 $EEFE DEFB $00,$3F,$DF,$00,$00,$00,$3F,$EF
 $EF06 DEFB $00,$00,$00,$1F,$FF,$00,$00,$00
 $EF0E DEFB $07,$FF,$00,$00,$00,$01,$FF,$00
 $EF16 DEFB $00,$00,$01,$FB,$00,$00,$00,$00
 $EF1E DEFB $F7,$00,$00,$00,$00,$F7,$00,$00
 $EF26 DEFB $00,$00,$77,$00,$00,$00,$00,$3B

; Animate the smoke in the start room
;
; Used by the routine at #R$CDEF.
c$EF2E LD E,$A7      ; X = #N$A7
 $EF30 LD D,$00      ; Y = 0
 $EF32 LD HL,$EA60   ; #R$EA60 is the screen offsets table.
 $EF35 ADD HL,DE     ; { Get the correct screen address.
 $EF36 ADD HL,DE     ; } 
 $EF37 LD ($EF7A),HL ; Store this. (#R$EF7A).
 $EF3A LD B,$18      ; #N18 characters to draw.
; Draw each character in the correct frame.
*$EF3C PUSH BC       ; Remember this.
 $EF3D LD A,(HL)     ; { Put the screen address in #REGhl.
 $EF3E INC HL        ;
 $EF3F LD H,(HL)     ;
 $EF40 LD L,A        ; }
 $EF41 LD DE,$0019   ; { Move down a row and store the result in #REGde.
 $EF44 ADD HL,DE     ;
 $EF45 EX DE,HL      ; }
 $EF46 LD HL,($EF77) ; Get the pointer to the graphic.
 $EF49 LD BC,$0005   ; 5 bytes to copy to screen.
 $EF4C LDIR          ; Do the copy.
 $EF4E LD ($EF77),HL ; Store the next address to copy.
 $EF51 LD HL,($EF7A) ; { Move back a screen address.
 $EF54 DEC HL        ;
 $EF55 DEC HL        ;
 $EF56 LD ($EF7A),HL ; }
 $EF59 POP BC        ; Restore count of characters to draw.
 $EF5A DJNZ $EF3C    ; Loop back if there is more to do.
; All characters are now drawn.
 $EF5C LD A,($EF79)  ; Get the frame counter.
 $EF5F INC A         ; Move to the next counter.
 $EF60 CP $04        ; Is this the last frame?
 $EF62 JR NZ,$EF67   ; If not, jump forward. 
 $EF64 CALL $EF6B    ; Otherwise reset back to the first frame.
*$EF67 LD ($EF79),A  ; { Store the new frame and return.
 $EF6A RET           ; }

; Initialize smoke animation in the start room
;
; Used by the routine at #R$EF2E.
c$EF6B LD HL,$ED4E   ; { Point to the first frame of the graphic.
 $EF6E LD ($EF77),HL ; }
 $EF71 LD A,$00      ; { Set the frame counter to the first one.
 $EF73 LD ($EF79),A  ; }
 $EF76 RET           ;

; Pointer to smoke animation graphic
w$EF77 DEFW $EE3E

; Frame number for smoke animation graphic
g$EF79 DEFB $02

; Screen offset address to draw the smoke animation graphic
;
; This is an entry in the table starting at #R$EA60.
w$EF7A DEFW $EB7E

; Unused
u$EF7C DEFS $02

; Set up graphics for the start room
;
; Used by the routine at #R$CD41.
; 
; HL Pointer to start room data (#R$F14B)
c$EF7E LD ($F041),HL ; Store the pointer to start room data.
 $EF81 LD A,(HL)     ; { Get the address from this and put it in #REGhl.
 $EF82 INC HL        ;
 $EF83 LD H,(HL)     ;
 $EF84 LD L,A        ; }
 $EF85 LD ($F043),HL ; Store this.
 $EF88 LD HL,($F041) ; Get the data pointer.
 $EF8B INC HL        ; { Go to the next address, which has the UDGs.
 $EF8C INC HL        ; }
 $EF8D LD ($F041),HL ; { Store this.}
 $EF90 LD D,$02      ; { Start at row 2 column 2.
 $EF92 LD E,$02      ; }
 $EF94 LD ($F045),DE ; Set this as the current position. 
 $EF98 LD B,$14      ; #N$14 rows
*$EF9A PUSH BC       ; Store this.
 $EF9B LD B,$1C      ; #N$1C columns
 $EF9D LD DE,($F045) ; Get the next position.
*$EFA1 PUSH BC       ; Remember #REGbc
 $EFA2 LD HL,($F041) ; Get the next data.
 $EFA5 LD A,(HL)     ; Get the byte.
 $EFA6 INC HL        ; { Move to the next address and store it.
 $EFA7 LD ($F041),HL ; }
 $EFAA CALL $EFBD    ; Print the graphic
 $EFAD POP BC        ; { Loop until all the columns for this row are done.
 $EFAE DJNZ $EFA1    ; }
 $EFB0 POP BC        ; Restore #REGbc
 $EFB1 LD DE,($F045) ; { Move to the next row.
 $EFB5 INC D         ; 
 $EFB6 LD ($F045),DE ; }
 $EFBA DJNZ $EF9A    ; { Loop until all the rows are done.
 $EFBC RET           ; }

; Draw static UDGs on the start room
;
; Used by the routine at #R$EF7E.
;
; HL Pointer to graphic IDs
; A Character to print
; D Y position
; E X position
; B Current row count
c$EFBD PUSH AF       ; { Store all registers being used.
 $EFBE PUSH BC       ;
 $EFBF PUSH HL       ;
 $EFC0 PUSH DE       ; }
 $EFC1 CP $7F        ; { If the character is #N80 or above, move forward.
 $EFC3 JR NC,$F033   ; }
; This is an ordinary character in the ROM
 $EFC5 LD H,$00      ; { Put the character in #REGhl.
 $EFC7 LD L,A        ; }
 $EFC8 ADD HL,HL     ; { Multiply by 8 to get the correct offset.
 $EFC9 ADD HL,HL     ;
 $EFCA ADD HL,HL     ; }
 $EFCB LD BC,$3C00   ; { Add the base address for the ROM character set.
; Now print the character
*$EFCE ADD HL,BC     ; }
 $EFCF LD ($F047),HL ; Store the current address being printed.
 $EFD2 LD A,D        ; { Convert the Y position to a screen offset.
 $EFD3 SUB $17       ;
 $EFD5 NEG           ; }
 $EFD7 LD L,A        ; { Put this in #REGhl.
 $EFD8 LD H,$00      ; }
 $EFDA ADD HL,HL     ; { Multiply by 8 to get the correct offset.
 $EFDB ADD HL,HL     ;
 $EFDC ADD HL,HL     ; }
 $EFDD LD BC,$0007   ; { Add an offset of 7 to point at the bottom of the graphic.
 $EFE0 ADD HL,BC     ; }
 $EFE1 EX DE,HL      ; { Add the base address for the screen address buffer.
 $EFE2 LD HL,$EA60   ; 
 $EFE5 ADD HL,DE     ;
 $EFE6 ADD HL,DE     ; }
 $EFE7 LD ($F049),HL ; Store this.
 $EFEA LD B,$08      ; Print 8 rows.
*$EFEC LD A,(HL)     ; { Put the actual screen address in #REGhl.
 $EFED INC HL        ;
 $EFEE LD H,(HL)     ;
 $EFEF LD L,A        ; }
 $EFF0 POP DE        ; Restore the X co-ordinate.
 $EFF1 PUSH DE       ; Store it again.
 $EFF2 LD D,$00      ; { Add it to the screen address.
 $EFF4 ADD HL,DE     ; }
 $EFF5 EX DE,HL      ; { Convert this into an address in the screen buffer.
 $EFF6 CALL $FE8F    ; }
 $EFF9 LD A,(HL)     ; Get the byte.
 $EFFA INC HL        ; { Move to the next data position and store it.
 $EFFB LD ($F047),HL ; }
 $EFFE EX DE,HL      ; Restore #REGhl.
 $EFFF LD (HL),A     ; Set the byte.
 $F000 LD HL,($F049) ; { Move the current screen address up a row.
 $F003 DEC HL        ; 
 $F004 DEC HL        ; 
 $F005 LD ($F049),HL ; }
 $F008 DJNZ $EFEC    ; { Loop until all rows have been printed.}
 $F00A POP DE        ; { Restore #REGde and #REGhl.
 $F00B POP HL        ; }
 $F00C PUSH HL       ; { Get an offset to the attribute buffer.
 $F00D PUSH DE       ;
 $F00E LD DE,$0230   ;
 $F011 ADD HL,DE     ; }
 $F012 DEC HL        ; Move up a row.
 $F013 POP DE        ; Restore #REGde.
 $F014 PUSH DE       ; Store it again.
 $F015 LD A,E        ; { Put the Y co-ordinate in #REGhl.
 $F016 LD E,D        ;
 $F017 LD D,$00      ;
 $F019 EX DE,HL      ; }
 $F01A LD B,$05      ; { Multiply 2^5 times ie: 32 to get an appropriate address.
*$F01C ADD HL,HL     ;
 $F01D DJNZ $F01C    ; }
 $F01F PUSH DE       ; Store #REGde.
 $F020 LD E,A        ; { Add the X co-ordinate.
 $F021 LD D,$00      ;
 $F023 ADD HL,DE     ; }
 $F024 LD DE,$CF54   ; { Add the base address of the attribute buffer.
 $F027 ADD HL,DE     ; }
 $F028 POP DE        ; Restore #REGde.
 $F029 EX DE,HL      ; { Copy the graphic data.
 $F02A LD A,(HL)     ;
 $F02B EX DE,HL      ;
 $F02C LD (HL),A     ; }
 $F02D POP DE        ; Restore #REGde
 $F02E INC E         ; Move to the next row.
 $F02F POP HL        ; { Restore all registers and return.
 $F030 POP BC        ;
 $F031 POP AF        ;
 $F032 RET           ; }
; This is a custom character
*$F033 SUB $80       ; Subtract #N$80 to get the real value.
 $F035 LD H,$00      ; { Put this in #REGhl.
 $F037 LD L,A        ; }
 $F038 ADD HL,HL     ; { Multiply by 8 to get an offset in the screen buffer.
 $F039 ADD HL,HL     ;
 $F03A ADD HL,HL     ; }
 $F03B LD BC,($F043) ; Get the start of the graphics.
 $F03F JR $EFCE      ; Print the character.

; Pointer to start room data
w$F041 DEFW $2F5D

; Pointer to start room UDGs
w$F043 DEFW $21FD

; Current position drawing the start room
g$F045 DEFW $02,$16

; Address of UDG currently being printed in the start room
g$F047 DEFW $3C88

; Screen position to draw the next UDG in the start room
;
; This is an offset relative to #R$EA60.
g$F049 DEFW $EA7E

; End message
;
; WHY DID MONTY DIE TO FAST
; .
; AREN'T 3 LIVES ENOUGH TO LAST
; .
; THE HAZARDS THAT CONFRONT A MOLE
; .
; IN SEARCH FOR HIS PRECIOUS COAL
; .
; DON'T LET MONTY DIE IN VAIN
; .
; PRESS A KEY AND TRY AGAIN
b$F04B DEFB $17,$08,$19,$00,$04,$09,$04,$00
 $F053 DEFB $0D,$0F,$0E,$14,$19,$00,$04,$09
 $F05B DEFB $05,$00,$13,$0F,$00,$06,$01,$13
 $F063 DEFB $14,$FF,$01,$12,$05,$0E,$11,$14
 $F06B DEFB $00,$1E,$00,$0C,$09,$16,$05,$13
 $F073 DEFB $00,$05,$0E,$0F,$15,$07,$08,$00
 $F07B DEFB $14,$0F,$00,$0C,$01,$13,$14,$FF
 $F083 DEFB $14,$08,$05,$00,$08,$01,$1A,$01
 $F08B DEFB $12,$04,$13,$00,$14,$08,$01,$14
 $F093 DEFB $00,$03,$0F,$0E,$06,$12,$0F,$0E
 $F09B DEFB $14,$00,$01,$00,$0D,$0F,$0C,$05
 $F0A3 DEFB $FF,$09,$0E,$00,$08,$09,$13,$00
 $F0AB DEFB $13,$05,$01,$12,$03,$08,$00,$06
 $F0B3 DEFB $0F,$12,$00,$10,$12,$05,$03,$09
 $F0BB DEFB $0F,$15,$13,$00,$03,$0F,$01,$0C
 $F0C3 DEFB $FF,$04,$0F,$0E,$11,$14,$00,$0C
 $F0CB DEFB $05,$14,$00,$0D,$0F,$0E,$14,$19
 $F0D3 DEFB $00,$04,$09,$05,$00,$09,$0E,$00
 $F0DB DEFB $16,$01,$09,$0E,$FF,$10,$12,$05
 $F0E3 DEFB $13,$13,$00,$01,$00,$0B,$05,$19
 $F0EB DEFB $00,$01,$0E,$04,$00,$14,$12,$19
 $F0F3 DEFB $00,$01,$07,$01,$09,$0E,$FF,$FE

; Unused
u$F0FB EX DE,HL      ;
 $F0FC LD A,($F93C)  ;
 $F0FF OR A          ;
 $F100 JR NZ,$F107   ;
 $F102 SET 6,(HL)    ;
 $F104 EX DE,HL      ;
 $F105 SET 7,(HL)    ;
*$F107 CP $01        ;
 $F109 JR NZ,$F110   ;
 $F10B SET 7,(HL)    ;
 $F10D EX DE,HL      ;
 $F10E SET 6,(HL)    ;
*$F110 CP $02        ;
 $F112 JR NZ,$F119   ;
 $F114 SET 4,(HL)    ;
 $F116 EX DE,HL      ;
 $F117 SET 5,(HL)    ;
*$F119 CP $03        ;
 $F11B JR NZ,$F122   ;
 $F11D SET 5,(HL)    ;
 $F11F EX DE,HL      ;
 $F120 SET 4,(HL)    ;
*$F122 LD HL,($F939) ;
 $F125 LD ($F937),HL ;
 $F128 LD HL,($F935) ;
 $F12B DEC HL        ;
 $F12C LD ($F935),HL ;
 $F12F LD A,H        ;
 $F130 OR L          ;
 $F131 JP NZ,$F064   ;
 $F134 RET           ;

; Unused
u$F135 DEFB $52,$22,$52,$72,$22,$52,$72,$22
 $F13D DEFB $52,$72,$22,$52,$72,$22,$52,$72
 $F145 DEFB $22,$52,$72,$22,$52,$72

; Pointer to start room UDG data
w$F14B DEFW $7C00

; UDGs for start room
;
; #UDGS28,20,2(startroom)(#UDGSADDR($y,$x)(*udg)udg)
b$F14D DEFB $81,$80,$80,$80,$80,$80,$80,$80
 $F155 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F15D DEFB $82,$83,$80,$84,$85,$86,$87,$88
 $F165 DEFB $89,$80,$80,$8A,$83,$81,$80,$8B
 $F16D DEFB $8C,$8D,$8E,$80,$8F,$90,$80,$80
 $F175 DEFB $80,$80,$80,$80,$91,$83,$92,$93
 $F17D DEFB $94,$95,$80,$80,$80,$80,$80,$80
 $F185 DEFB $83,$83,$81,$96,$97,$98,$99,$80
 $F18D DEFB $9A,$9B,$9C,$80,$80,$9D,$9E,$9F
 $F195 DEFB $A0,$A1,$80,$A2,$A3,$80,$80,$80
 $F19D DEFB $80,$80,$80,$80,$83,$83,$83,$81
 $F1A5 DEFB $80,$80,$80,$80,$A4,$A5,$A6,$80
 $F1AD DEFB $80,$80,$80,$80,$80,$A7,$A8,$A9
 $F1B5 DEFB $AA,$80,$80,$80,$80,$80,$80,$80
 $F1BD DEFB $83,$83,$83,$AB,$80,$80,$80,$AC
 $F1C5 DEFB $AD,$AE,$A6,$80,$80,$80,$AF,$B0
 $F1CD DEFB $80,$80,$80,$B1,$B2,$B1,$B1,$B3
 $F1D5 DEFB $B4,$B5,$80,$B6,$B7,$B7,$B8,$AB
 $F1DD DEFB $B9,$BA,$BB,$BC,$BD,$BE,$A6,$80
 $F1E5 DEFB $80,$BF,$C0,$C0,$80,$80,$80,$B1
 $F1ED DEFB $B1,$B1,$B1,$B1,$C1,$C2,$C3,$C4
 $F1F5 DEFB $C5,$C6,$C7,$AB,$C8,$C9,$CA,$CB
 $F1FD DEFB $CC,$CD,$A6,$80,$CE,$CF,$D0,$D1
 $F205 DEFB $80,$80,$80,$D2,$D3,$D4,$D5,$D6
 $F20D DEFB $D7,$D8,$D9,$DA,$DB,$DC,$C7,$AB
 $F215 DEFB $80,$80,$DD,$80,$DE,$80,$DF,$80
 $F21D DEFB $80,$80,$E0,$E1,$E2,$E3,$E4,$E5
 $F225 DEFB $E6,$80,$80,$80,$80,$80,$80,$80
 $F22D DEFB $DB,$E7,$C7,$AB,$E8,$E9,$EA,$EB
 $F235 DEFB $EC,$ED,$EE,$80,$80,$EF,$F0,$F1
 $F23D DEFB $F2,$F3,$EC,$ED,$EE,$F4,$EC,$F4
 $F245 DEFB $EE,$ED,$EC,$EE,$F5,$F5,$F6,$AB
 $F24D DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F255 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F25D DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F265 DEFB $83,$83,$83,$AB,$80,$80,$80,$80
 $F26D DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F275 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F27D DEFB $80,$80,$80,$80,$83,$83,$83,$AB
 $F285 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F28D DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F295 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F29D DEFB $80,$80,$80,$AB,$80,$80,$80,$80
 $F2A5 DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F2AD DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F2B5 DEFB $80,$80,$80,$80,$80,$80,$80,$AB
 $F2BD DEFB $80,$80,$80,$80,$80,$80,$80,$80
 $F2C5 DEFB $80,$80,$80,$F7,$F8,$F8,$80,$80
 $F2CD DEFB $80,$80,$F9,$FA,$80,$80,$80,$80
 $F2D5 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F2DD DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F2E5 DEFB $FB,$FB,$FB,$FB,$FB,$FB,$FB,$B1
 $F2ED DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F2F5 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F2FD DEFB $B1,$B1,$B1,$B1,$83,$83,$83,$83
 $F305 DEFB $83,$83,$83,$B1,$B1,$B1,$B1,$B1
 $F30D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F315 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F31D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F325 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F32D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F335 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F33D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F345 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F34D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F355 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F35D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F365 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F36D DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1
 $F375 DEFB $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1

; Attributes for start room
b$F37D DEFB $6B,$6B,$6B,$6B,$6F,$6F,$6F,$68
 $F385 DEFB $68,$68,$68,$6A,$6A,$6A,$6A,$6A
 $F38D DEFB $68,$68,$40,$60,$65,$68,$6C,$6C
 $F395 DEFB $6C,$6E,$6E,$6E,$6B,$6B,$6B,$6F
 $F39D DEFB $6F,$6F,$6F,$68,$68,$68,$68,$6A
 $F3A5 DEFB $6A,$6A,$6A,$6A,$68,$68,$44,$60
 $F3AD DEFB $65,$68,$6F,$6F,$6F,$6F,$6F,$6F
 $F3B5 DEFB $6B,$6B,$6B,$6B,$6F,$6F,$6F,$68
 $F3BD DEFB $68,$68,$68,$6A,$6A,$6C,$6C,$6C
 $F3C5 DEFB $44,$44,$60,$65,$65,$6F,$6F,$6F
 $F3CD DEFB $6F,$6F,$6F,$6F,$6B,$6B,$6B,$6B
 $F3D5 DEFB $68,$68,$68,$68,$68,$68,$68,$68
 $F3DD DEFB $68,$68,$68,$68,$44,$44,$44,$6C
 $F3E5 DEFB $6C,$6F,$6F,$6F,$6F,$6F,$6F,$6F
 $F3ED DEFB $6F,$6F,$6F,$6F,$6B,$6B,$6B,$68
 $F3F5 DEFB $68,$68,$68,$68,$68,$68,$68,$68
 $F3FD DEFB $44,$44,$44,$07,$45,$07,$07,$45
 $F405 DEFB $68,$68,$68,$68,$4F,$4F,$4F,$6F
 $F40D DEFB $6B,$6B,$6B,$68,$68,$68,$68,$68
 $F415 DEFB $68,$68,$07,$07,$44,$44,$44,$07
 $F41D DEFB $07,$07,$07,$07,$07,$68,$68,$68
 $F425 DEFB $47,$57,$4F,$67,$60,$60,$60,$60
 $F42D DEFB $60,$60,$60,$60,$60,$60,$60,$60
 $F435 DEFB $44,$44,$44,$44,$60,$60,$60,$60
 $F43D DEFB $60,$60,$60,$60,$47,$42,$4F,$67
 $F445 DEFB $64,$64,$60,$60,$60,$60,$60,$60
 $F44D DEFB $60,$60,$60,$44,$44,$44,$44,$44
 $F455 DEFB $60,$60,$60,$60,$60,$60,$60,$60
 $F45D DEFB $47,$42,$4F,$67,$74,$74,$74,$74
 $F465 DEFB $74,$74,$74,$60,$60,$74,$74,$74
 $F46D DEFB $74,$74,$74,$74,$74,$74,$74,$74
 $F475 DEFB $74,$74,$74,$74,$4F,$4F,$4F,$77
 $F47D DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F485 DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F48D DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F495 DEFB $6F,$6F,$6F,$77,$70,$70,$70,$70
 $F49D DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4A5 DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4AD DEFB $70,$70,$70,$70,$6F,$6F,$6F,$77
 $F4B5 DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4BD DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4C5 DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4CD DEFB $7F,$7F,$7F,$77,$70,$70,$70,$70
 $F4D5 DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4DD DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4E5 DEFB $70,$70,$70,$70,$7F,$7F,$7F,$77
 $F4ED DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4F5 DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F4FD DEFB $70,$70,$70,$70,$70,$70,$70,$70
 $F505 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F50D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F515 DEFB $75,$75,$75,$75,$75,$75,$75,$42
 $F51D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F525 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F52D DEFB $42,$42,$42,$42,$75,$75,$75,$75
 $F535 DEFB $75,$75,$75,$42,$42,$42,$42,$42
 $F53D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F545 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F54D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F555 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F55D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F565 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F56D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F575 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F57D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F585 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F58D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F595 DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F59D DEFB $42,$42,$42,$42,$42,$42,$42,$42
 $F5A5 DEFB $42,$42,$42,$42,$42,$42,$42,$42

; Unused
u$F5AD DEFB $A2,$D2,$A2,$52,$A2,$12,$32,$E2
 $F5B5 DEFB $42,$92,$62,$92,$62,$82,$D2,$62
 $F5BD DEFB $92,$62,$82,$D2,$62,$92,$E2,$92
 $F5C5 DEFB $E2,$52,$A2,$82,$92,$E2,$52,$A2
 $F5CD DEFB $92,$A2,$52,$A2,$82,$92,$E2,$52
 $F5D5 DEFB $A2,$92,$32,$62,$92,$62,$82,$92
 $F5DD DEFB $A2,$52,$A2,$C2,$82,$D2,$72,$A2
 $F5E5 DEFB $D2,$A2,$52,$A2,$92,$32,$62,$C2
 $F5ED DEFB $42,$D2,$62,$C2,$52,$32,$62,$C2
 $F5F5 DEFB $92,$62,$92,$62,$92,$62,$82,$D2
 $F5FD DEFB $62,$92,$62,$82,$D2,$62,$92,$62
 $F605 DEFB $82,$C2,$52,$32,$62,$C2,$C2,$52
 $F60D DEFB $32,$62,$C2,$52,$32,$62,$C2,$C2
 $F615 DEFB $52,$32,$62,$D2,$22,$92,$62,$12
 $F61D DEFB $62,$C2,$52,$B2,$62,$C2,$92,$62
 $F625 DEFB $92,$62,$C2,$52,$32,$62,$C2,$92
 $F62D DEFB $A2,$C2,$C2,$92,$A2,$52,$A2,$C2
 $F635 DEFB $52,$B2,$62,$92,$62,$92,$62,$82
 $F63D DEFB $D2,$62,$92,$62,$82,$D2,$62,$92
 $F645 DEFB $62,$92,$E2,$52,$A2,$82,$92,$E2

; See if Monty has picked up enough coal to open a blocking wall
;
; Used by the routine at #R$F7C7.
;
; .
;
; First, work out how much coal has been collected.
c$F64D XOR A          ; Start the count of coal items at 0.
 $F64E LD HL,$964C    ; Look at the buffer at #R$964D.
 $F651 LD B,$40       ; #N$40 items to look at.
*$F653 INC HL         ; { Has the next bit of coal been collected?
 $F654 BIT 7,(HL)     ; }
 $F656 JR NZ,$F659    ; No, so move on.
 $F658 INC A          ; Otherwise, increment the count of collected coal.
*$F659 DJNZ $F653     ; Loop back round to look at the next coal data.
 $F65B LD ($F7D5),A   ; Set this as the number of collected coal pieces.
; Now, get the wall flags.
 $F65E LD IX,$F7D1    ; Set #REGix to the wall flags at #R$F7D1.
 $F662 CP $10         ; Have 16 pieces of coal being collected?
 $F664 JR Z,$F682     ; Jump if so.
 $F666 CP $20         ; Have 32?
 $F668 JR Z,$F68E     ; Jump if so.
 $F66A CP $30         ; Have 48?
 $F66C JR Z,$F69A     ; Jump if so.
 $F66E CP $40         ; Have 64?
 $F670 RET NZ         ; Return if not.
; Handle collecting 64 pieces of coal.
 $F671 LD A,($9649)   ;
 $F674 CP $14         ;
 $F676 JR NZ,$F67D    ;
; There are no walls in this room.
*$F678 SET 0,(IX+$00) ; { Reset the flag and exit.
 $F67C RET            ; }
; Handle collecting 64 pieces of coal (2).
*$F67D SET 2,(IX+$00) ;
 $F681 RET            ;
; Handle collecting 16 pieces of coal.
*$F682 LD A,($9649)   ; { Is Monty in room 6?
 $F685 CP $06         ; }
 $F687 JR Z,$F678     ; Exit if not.
 $F689 SET 5,(IX+$00) ; Set bit 5 (room 6)
 $F68D RET            ;
; Handle collecting 32 pieces of coal.
*$F68E LD A,($9649)   ;
 $F691 CP $0B         ;
 $F693 JR Z,$F678     ;
 $F695 SET 4,(IX+$00) ;
 $F699 RET            ;
; Handle collectiong 48 pieces of coal.
*$F69A LD A,($9649)   ;
 $F69D CP $0F         ;
 $F69F JR Z,$F678     ;
 $F6A1 SET 3,(IX+$00) ;
 $F6A5 RET            ;

; Hide any blocking walls if sufficient coal has been picked up
;
; Used by the routine at #R$F7C7.
c$F6A6 DI             ; Turn off interrupts.
 $F6A7 LD IX,$F7D1    ; Point #REGix at the data for "magic" walls at #R$F7D1.
 $F6AB LD A,($9649)   ; Get the current room (#R$9649).
 $F6AE CP $06         ; Is it room #N$06?
 $F6B0 JR Z,$F6D0     ; Yes, so jump forward.
 $F6B2 CP $0B         ; It is room #N$0B?
 $F6B4 JR Z,$F6DC     ; Yes, so jump forward.
 $F6B6 CP $0F         ; Is it room #N$0F?
 $F6B8 JR Z,$F6E8     ; Yes, so jump forward.
 $F6BA CP $14         ; Is it room #N$14?
 $F6BC JR NZ,$F6F4    ; No, so jump forward.
; Handle wall in room #N$14.
 $F6BE LD C,$04       ;
 $F6C0 LD HL,$7718    ;
 $F6C3 BIT 2,(IX+$00) ;
 $F6C7 RET NZ         ;
; Hide the wall if enough coal is collected.
*$F6C8 BIT 0,(IX+$00) ; Is there a wall here?
 $F6CC CALL NZ,$F71A  ; Hide if it there is.
 $F6CF RET            ;
; Handle wall in room #N$06.
*$F6D0 LD C,$07       ; Set #REGc to the length.
 $F6D2 LD HL,$9710    ; Set #REGhl to the position.
 $F6D5 BIT 5,(IX+$00) ; { Return if the wall shouldn't be opened yet.
 $F6D9 RET NZ         ; }
 $F6DA JR $F6C8       ; Jump forward to open it.
; Handle wall in room #N$0B.
*$F6DC LD C,$05       ; Set #REGc to the length.
 $F6DE LD HL,$8F14    ; Set #REGhl to the position.
 $F6E1 BIT 4,(IX+$00) ; { Return if the wall shouldn't be opened yet.
 $F6E5 RET NZ         ; }
 $F6E6 JR $F6C8       ; Jump forward to open it.
; Handle wall in room #N$0F.
*$F6E8 LD C,$05       ; Set #REGc to the length.
 $F6EA LD HL,$471F    ; Set #REGhl to the position.
 $F6ED BIT 3,(IX+$00) ; { Return if the wall shouldn't be opened yet.
 $F6F1 RET NZ         ; }
 $F6F2 JR $F6C8       ; Jump forward to open it.
; Handle any other room.
*$F6F4 LD A,(IX+$00)  ; { Turn off bits 0, 1, 6 and 7 on the wall flags
 $F6F7 AND $3C        ; and return.
 $F6F9 LD (IX+$00),A  ;
 $F6FC RET            ; }

; Erase a wall from the screen
;
; Used by the entry point at #R$F71A.
;
; H Y co-ordinate
; L Number of rows
; IY Pointer to the store of static characters
c$F6FD LD A,$BF       ; { Subtract the Y co-ordinate from the screen height.
 $F6FF SUB H          ; }
 $F700 LD B,L         ; { Put this in #REGhl.
 $F701 LD L,A         ; 
 $F702 LD H,$00       ; }
 $F704 ADD HL,HL      ; { Multiply this by 4 to get an
 $F705 ADD HL,HL      ; attribute of an offset. }
 $F706 LD DE,$5800    ; { Add the base address of attributes to get the right address.
 $F709 ADD HL,DE      ; }
 $F70A LD E,B         ; { Add the X co-ordinate.
 $F70B LD D,$00       ;
 $F70D ADD HL,DE      ; }
 $F70E LD DE,$0020    ; Increase by 32 characters for each row.
 $F711 LD B,C         ; Set #REGb to the number of rows.
 $F712 LD A,(IY+$00)  ; Get the attribute for character 0 (empty space).
*$F715 LD (HL),A      ; Set it on screen here.
 $F716 ADD HL,DE      ; Move to the next row.
 $F717 DJNZ $F715     ; { Repeat for the number of rows until done.
 $F719 RET            ; }

; Hide a wall after enough coal has been collected.
;
; Used by the entry point at #R$F6A6.
;
; H Y co-ordinate
; L X co-ordinate
; C Width
; IX Pointer to wall flags at #R$F7D1.
c$F71A PUSH HL        ; { Remember #REGhl and #REGbc }
 $F71B PUSH BC        ;
 $F71C LD A,($F7D4)   ; Get the current frame number.
 $F71F NEG            ; { Subtract it from the base Y co-ordinate and store in #R$F7D2 and #R$F7D3.
 $F721 LD D,A         ;
 $F722 LD E,$00       ; 
 $F724 ADD HL,DE      ;
 $F725 LD ($F7D2),HL  ; }
 $F728 LD B,C         ; Put the number of characters in #REGb.
 $F729 LD C,L         ; { Convert the Y co-ordinate to a offset for a screen address.
*$F72A LD L,H         ;
 $F72B LD H,$00       ;
 $F72D ADD HL,HL      ; }
 $F72E LD DE,$EA60    ; { Add to the base pointer at #R$EA60 to get a screen address.
 $F731 ADD HL,DE      ; }
 $F732 LD A,(HL)      ; { Put the screen address in #REGhl.
 $F733 INC HL         ;
 $F734 LD H,(HL)      ;
 $F735 LD L,A         ; }
 $F736 LD E,C         ; { Add the X co-ordinate. 
 $F737 LD D,$00       ;
 $F739 ADD HL,DE      ; }
 $F73A LD (HL),$00    ; Erase the character.
 $F73C LD DE,$9260    ; { Also erase it in the screen buffer (#R$9260).
 $F73F ADD HL,DE      ;
 $F740 LD (HL),$00    ; }
*$F742 LD HL,($F7D2)  ; Get the wall position.
 $F745 LD DE,$F800    ; { Move to the next position
 $F748 ADD HL,DE      ; by subtracting 8 from the Y co-ordinate. }
 $F749 LD ($F7D2),HL  ; Set this as the new position.
 $F74C DJNZ $F72A     ; Loop back if there are more characters to do.
 $F74E LD A,($F7D4)   ; Get current frame number.
 $F751 INC A          ; { Increment it, but if this reaches 8, reset to 0.
 $F752 AND $07        ; }
 $F754 POP BC         ; { Restore co-ordinates and width.
 $F755 POP HL         ; }
 $F756 LD ($F7D4),A   ; { Store next frame number and return if it is 0.
 $F759 RET NZ         ; }
; Erase the wall from the set of graphics, and change it to mid-air.
 $F75A LD IY,$C54E    ; #R$C54E is the store of static graphics for this room.
 $F75E CALL $F6FD     ; Erase the wall.
 $F761 RES 0,(IX+$00) ; Clear the flag to mark a wall as being erased.
 $F765 LD A,($9649)   ; Get the current room (#R$9649).
 $F768 CP $06         ; Is it #N06?
 $F76A JR NZ,$F771    ; Jump forward if not.
 $F76C SET 5,(IX+$00) ; { Set the wall as cleared and return.
 $F770 RET            ; }
*$F771 CP $0B         ; Is this room #N0B?
 $F773 JR NZ,$F77A    ; Jump forward if not.
 $F775 SET 4,(IX+$00) ; { Set the wall as cleared and return.
 $F779 RET            ; }
*$F77A CP $0F         ; Is this room #N0F?
 $F77C JR NZ,$F783    ; Jump forward if not.
 $F77E SET 3,(IX+$00) ; { Set the wall as cleared and return.
 $F782 RET            ; }
*$F783 SET 2,(IX+$00) ; { Must be room #N14. Set the wall as cleared and return.
 $F787 RET            ; }

; Unused
u$F788 LD ($F7D2),HL  ;
 $F78B DJNZ $F76F     ;
 $F78D LD A,($F7D4)   ;
 $F790 INC A          ;
 $F791 AND $07        ;
 $F793 POP BC         ;
 $F794 POP HL         ;
 $F795 LD ($F7D4),A   ;
 $F798 RET NZ         ;
 $F799 LD IY,$C54E    ;
 $F79D CALL $F742     ;
 $F7A0 RES 0,(IX+$00) ;
 $F7A4 LD A,($9649)   ;
 $F7A7 CP $06         ;
 $F7A9 JR NZ,$F7B0    ;
 $F7AB SET 5,(IX+$00) ;
 $F7AF RET            ;
*$F7B0 CP $0B         ;
 $F7B2 JR NZ,$F7B9    ;
 $F7B4 SET 4,(IX+$00) ;
 $F7B8 RET            ;
*$F7B9 CP $0F         ;
 $F7BB JR NZ,$F7C2    ;
 $F7BD SET 3,(IX+$00) ;
 $F7C1 RET            ;
*$F7C2 SET 2,(IX+$00) ;
 $F7C6 RET            ;

; Perform interrupt handler background updates
;
; Used by the routine at #R$8F9F.
c$F7C7 CALL $8F31    ; Update moving platforms.
 $F7CA CALL $F64D    ; Check how much coal has been collected.
 $F7CD CALL $F6A6    ; Hide walls if enough coal has been collected.
 $F7D0 RET           ;

; Flags to indicate which blocking walls can open
;
; .
; If the appropriate bit is set, the wall will open.
; #TABLE( default, center )
; { =h Bit | =h Room }
; { 0 | If set, there is no wall to remove }
; { 1 | }
; { 2 | Room #N$14 }
; { 3 | Room #N$0F }
; { 4 | Room #N$0B }
; { 5 | Room #N$06 }
; { 6 | }
; { 7 | }
; TABLE#
g$F7D1 DEFB $00

; Y co-ordinate for the disappearing wall
g$F7D2 DEFB $00

; X co-ordinate for the disappearing wall
g$F7D3 DEFB $00

; Timer state for the magic wall
;
; .
;
; Start at 0 and increments as the wall disappears.
g$F7D4 DEFB $00

; Number of pieces of coal that have been collected
g$F7D5 DEFB $00

; Start a new game
;
; Used by the routine at #R$F858.
c$F7D6 XOR A         ; Set A to 0 to clear some flags.
 $F7D7 DI            ; Disable interrupts.
 $F7D8 LD ($848F),A  ; Set position on ground (#R$848F) to 0.
 $F7DB LD ($8498),A  ; 
 $F7DE LD ($8D58),A  ; Set distance fallen (#R$8D58) to 0.
 $F7E1 LD ($8D52),A  ; Set room flags (#R$8D52) to 0.
 $F7E4 LD ($8D53),A  ; Set game flags (#R$8D53) to 0.
 $F7E7 LD ($F7D1),A  ; Set wall flags (#R$F7D1) to 0.
 $F7EA LD A,$03      ; { Set 3 lives (#R$964A).
 $F7EC LD ($964A),A  ; }
 $F7EF XOR A         ; { Set score (#R$9217) to 0.
 $F7F0 LD B,$05      ;
 $F7F2 LD HL,$9217   ;
*$F7F5 LD (HL),A     ;
 $F7F6 INC HL        ;
 $F7F7 DJNZ $F7F5    ; }
 $F7F9 LD A,$2C      ; { Set current room to #N$2C (outside).
 $F7FB LD ($9649),A  ; }
 $F7FE LD HL,$869C   ; { Set the pointer to the movement table to #R$869C. }
 $F801 LD ($8492),HL ;
 $F804 LD HL,$4000   ; { Clear the screen.
 $F807 LD DE,$4001   ;
 $F80A LD (HL),$00   ;
 $F80C LD BC,$1AFF   ;
 $F80F LDIR          ; }
 $F811 CALL $8000    ; Display the control options.
 $F814 JP $940C      ; Enter the first room.

; Print the "game over" message and start a new game
;
; Used by the routine at #R$946E.
c$F817 DI            ; Disable interrupts.
 $F818 LD HL,$4000   ; Point #REGhl to the start of the screen.
 $F81B LD IY,$5C3A   ; Restore IY.
 $F81F IM 1          ; Turn IM1 back on.
 $F821 EI            ; Re-enable interrupts.
 $F822 LD DE,$4001   ; { Clear the screen.
 $F825 LD BC,$1AFF   ;
 $F828 LD (HL),$00   ;
 $F82A LDIR          ; }
 $F82C CALL $91E8    ; Print the score
 $F82F LD IX,$F04B   ; Point #REGix at the "game over" message.
 $F833 XOR A         ;
 $F834 LD ($CB17),A  ;
 $F837 LD ($CB92),A  ;
 $F83A LD ($CB91),A  ;
 $F83D LD HL,$5840   ; { Display bright yellow on black.
 $F840 LD DE,$5841   ;
 $F843 LD BC,$027F   ;
 $F846 LD (HL),$46   ;
 $F848 LDIR          ; }
 $F84A CALL $CB03    ; Display the message.
 $F84D XOR A         ; No effect.
 $F84E LD A,$05      ; { Start drawing at column 5.
 $F850 LD ($CB17),A  ; }
 $F853 LD B,$FF      ; Time to pause at the end.
 $F855 JP $F85D      ; Jump forward to close the message.

; Print the "game won" message and start a new game
;
; Used by the routine at #R$940C.
c$F858 CALL $CAD1    ;
 $F85B LD B,$FF      ;
; This entry point is used by the routine at #R$F817.
*$F85D IN A,($FE)    ; { Wait for a key to be pressed.
 $F85F AND $1F       ;
 $F861 XOR $1F       ; }
 $F863 JR NZ,$F869   ; If a key was pressed, jump forward.
 $F865 HALT          ; { Pause and repeat if there are more
 $F866 HALT          ; attempts required.
 $F867 DJNZ $F85D    ; }
*$F869 JP $F7D6      ; Restart the game.

; Unused
u$F86C DEFB $92,$B2,$A2,$C2,$C2,$52,$32,$62
 $F874 DEFB $C2,$52,$22,$D2,$A2,$92,$A2,$52
 $F87C DEFB $A2,$92,$22,$92,$A2,$C2,$C2,$92
 $F884 DEFB $62,$82,$D2,$62,$92,$62,$92,$A2
 $F88C DEFB $C2,$92,$72,$22,$C2,$52,$32,$62
 $F894 DEFB $42,$C2,$52,$B2,$62,$52,$A2,$12
 $F89C DEFB $B2,$A2,$12,$B2,$A2,$12,$B2,$22
 $F8A4 DEFB $C2,$C2,$92,$B2,$A2,$52,$A2,$92
 $F8AC DEFB $32,$32,$62,$C2,$92,$A2,$52,$A2
 $F8B4 DEFB $C2,$92,$62,$82,$52,$62,$52,$E2
 $F8BC DEFB $52,$32,$62,$52,$62,$C2,$92,$62
 $F8C4 DEFB $92,$62,$82,$D2,$72,$A2,$52,$62
 $F8CC DEFB $C2,$42,$D2,$62,$92,$A2,$52,$A2
 $F8D4 DEFB $C2,$92,$A2,$52,$A2,$C2,$52,$32
 $F8DC DEFB $62,$52,$32,$62,$52,$32,$62,$52
 $F8E4 DEFB $A2,$92,$62,$52,$62,$C2,$52,$32
 $F8EC DEFB $62,$52,$A2,$C2,$52,$62,$C2,$52
 $F8F4 DEFB $A2,$12,$B2,$32,$A2,$92,$A2,$92
 $F8FC DEFB $A2,$12,$B2,$A2,$82,$92,$22,$92
 $F904 DEFB $22,$92,$32,$A2,$92,$32,$A2,$92
 $F90C DEFB $B2,$A2,$82,$92,$32,$32,$B2,$22
 $F914 DEFB $92,$32,$32,$B2,$22,$92,$A2,$12
 $F91C DEFB $B2,$A2,$12,$B2,$A2,$12,$B2,$B2
 $F924 DEFB $32,$22,$92,$A2,$82,$92,$A2,$12
 $F92C DEFB $B2,$B2,$22,$92,$A2,$82,$92,$B2
 $F934 DEFB $22,$00,$00,$39,$05,$39,$05,$03
 $F93C DEFB $01,$2A,$A8,$F9,$7D,$87,$87,$87
 $F944 DEFB $95,$5F,$7C,$87,$87,$84,$67,$6B
 $F94C DEFB $22,$AA,$F9,$CD,$B2,$F9,$3E,$AF
 $F954 DEFB $06,$05,$26,$00,$6F,$22,$B0,$F9
 $F95C DEFB $C5,$F5,$CD,$6B,$F9,$F1,$C1,$D6
 $F964 DEFB $20,$10,$EF,$CD,$C6,$F9,$C9,$21
 $F96C DEFB $FA,$FF,$22,$AE,$F9,$2A,$B0,$F9
 $F974 DEFB $06,$10,$CD,$C0,$F9,$22,$AC,$F9
 $F97C DEFB $7E,$23,$66,$6F,$23,$23,$EB,$CD
 $F984 DEFB $86,$FE,$7E,$23,$EB,$77,$23,$EB
 $F98C DEFB $7E,$23,$22,$AE,$F9,$EB,$77,$E5
 $F994 DEFB $D1,$2B,$13,$13,$13,$C5,$01,$18
 $F99C DEFB $00,$ED,$B0,$C1,$2A,$AC,$F9,$2B
 $F9A4 DEFB $2B,$10,$D2,$C9,$00,$00,$00,$05
 $F9AC DEFB $A0,$EA,$1A,$00,$2F,$00,$21,$60
 $F9B4 DEFB $D2,$36,$00,$11,$61,$D2,$01,$FF
 $F9BC DEFB $17,$ED,$B0,$C9,$29,$11,$60,$EA
 $F9C4 DEFB $19,$C9,$06,$05,$21,$01,$01,$22
 $F9CC DEFB $F0,$FA,$C5,$2A,$AA,$F9,$06,$07
 $F9D4 DEFB $C5,$22,$EE,$FA,$CD,$13,$FA,$CB
 $F9DC DEFB $7E,$CC,$33,$FA,$CB,$76,$CC,$40
 $F9E4 DEFB $FA,$CB,$6E,$CC,$4D,$FA,$CB,$66
 $F9EC DEFB $CC,$5A,$FA,$2A,$F0,$FA,$2C,$2C
 $F9F4 DEFB $22,$F0,$FA,$2A,$EE,$FA,$23,$C1
 $F9FC DEFB $10,$D6,$C1,$2A,$AA,$F9,$24,$22
 $FA04 DEFB $AA,$F9,$2A,$F0,$FA,$24,$24,$2E
 $FA0C DEFB $01,$22,$F0,$FA,$10,$BC,$C9,$22
 $FA14 DEFB $F2,$FA,$7D,$6C,$5C,$16,$00,$26
 $FA1C DEFB $00,$29,$29,$29,$29,$29,$29,$00
 $FA24 DEFB $00,$00

; Unused
u$FA26 LD E,A         ;
 $FA27 ADD HL,DE      ;
 $FA28 LD DE,$F135    ;
 $FA2B ADD HL,DE      ;
 $FA2C LD A,(HL)      ;
 $FA2D AND $07        ;
 $FA2F LD ($FAF4),A   ;
 $FA32 RET            ;

; Unused
u$FA33 PUSH HL        ;
 $FA34 LD HL,($FAF0)  ;
 $FA37 DEC H          ;
 $FA38 CALL $FA67     ;
 $FA3B CALL $FA77     ;
 $FA3E POP HL         ;
 $FA3F RET            ;

; Unused
u$FA40 PUSH HL        ;
 $FA41 LD HL,($FAF0)  ;
 $FA44 INC H          ;
 $FA45 CALL $FA67     ;
 $FA48 CALL $FA77     ;
 $FA4B POP HL         ;
 $FA4C RET            ;

; Unused
u$FA4D PUSH HL        ;
 $FA4E LD HL,($FAF0)  ;
 $FA51 DEC L          ;
 $FA52 CALL $FA67     ;
 $FA55 CALL $FA77     ;
 $FA58 POP HL         ;
 $FA59 RET            ;
 $FA5A PUSH HL        ;
 $FA5B LD HL,($FAF0)  ;
 $FA5E INC L          ;
 $FA5F CALL $FA67     ;
 $FA62 CALL $FA77     ;
 $FA65 POP HL         ;
 $FA66 RET            ;

; Unused
u$FA67 LD A,H         ;
 $FA68 ADD A,A        ;
 $FA69 ADD A,A        ;
 $FA6A ADD A,A        ;
 $FA6B ADD A,A        ;
 $FA6C SUB $AF        ;
 $FA6E NEG            ;
 $FA70 LD H,A         ;
 $FA71 LD A,L         ;
 $FA72 ADD A,A        ;
 $FA73 ADD A,$02      ;
 $FA75 LD L,A         ;
 $FA76 RET            ;

; Unused
u$FA77 LD A,L         ;
 $FA78 CP $1E         ;
 $FA7A RET Z          ;
 $FA7B LD A,H         ;
 $FA7C CP $0F         ;
 $FA7E RET Z          ;
 $FA7F CALL $FABF     ;
 $FA82 PUSH HL        ;
 $FA83 LD HL,$FFFA    ;
 $FA86 LD ($F9AE),HL  ;
 $FA89 POP HL         ;
 $FA8A LD A,L         ;
 $FA8B LD ($FAF5),A   ;
 $FA8E LD L,H         ;
 $FA8F LD H,$00       ;
 $FA91 CALL $F9C0     ;
 $FA94 LD B,$10       ;
*$FA96 PUSH BC        ;
 $FA97 LD ($F9AC),HL  ;
 $FA9A LD A,($FAF5)   ;
 $FA9D LD E,A         ;
 $FA9E LD A,(HL)      ;
 $FA9F INC HL         ;
 $FAA0 LD H,(HL)      ;
 $FAA1 LD L,A         ;
 $FAA2 LD D,$00       ;
 $FAA4 ADD HL,DE      ;
 $FAA5 EX DE,HL       ;
 $FAA6 CALL $FE86     ;
 $FAA9 LD A,(HL)      ;
 $FAAA INC HL         ;
 $FAAB EX DE,HL       ;
 $FAAC LD (HL),A      ;
 $FAAD INC HL         ;
 $FAAE EX DE,HL       ;
 $FAAF LD A,(HL)      ;
 $FAB0 INC HL         ;
 $FAB1 LD ($F9AE),HL  ;
 $FAB4 EX DE,HL       ;
 $FAB5 LD (HL),A      ;
 $FAB6 POP BC         ;
 $FAB7 LD HL,($F9AC)  ;
 $FABA DEC HL         ;
 $FABB DEC HL         ;
 $FABC DJNZ $FA96     ;
 $FABE RET            ;

; Unused
;
; Used by the routine at #R$FAEE.
u$FABF PUSH HL        ;
 $FAC0 LD A,H         ;
 $FAC1 AND $F8        ;
 $FAC3 SRL A          ;
 $FAC5 SRL A          ;
 $FAC7 SRL A          ;
 $FAC9 SUB $17        ;
 $FACB NEG            ;
 $FACD LD L,A         ;
 $FACE LD H,$00       ;
 $FAD0 ADD HL,HL      ;
 $FAD1 ADD HL,HL      ;
 $FAD2 ADD HL,HL      ;
 $FAD3 ADD HL,HL      ;
 $FAD4 ADD HL,HL      ;
 $FAD5 LD DE,$CF54    ;
 $FAD8 ADD HL,DE      ;
 $FAD9 POP DE         ;
 $FADA PUSH DE        ;
 $FADB LD D,$00       ;
 $FADD ADD HL,DE      ;
 $FADE LD A,($FAF4)   ;
 $FAE1 LD B,$02       ;
*$FAE3 LD (HL),A      ;
 $FAE4 INC HL         ;
 $FAE5 LD (HL),A      ;
 $FAE6 LD DE,$001F    ;
 $FAE9 ADD HL,DE      ;
 $FAEA DJNZ $FAE3     ;
 $FAEC POP HL         ;
 $FAED RET            ;

; Unused
u$FAEE LD B,$04       ;
 $FAF0 LD BC,$060B    ;
 $FAF3 INC B          ;
 $FAF4 LD (BC),A      ;
 $FAF5 INC E          ;
 $FAF6 CALL PE,$BED5  ;
 $FAF9 JR Z,$FB1C     ;
 $FAFB DEC (HL)       ;
 $FAFC POP AF         ;
 $FAFD LD B,$20       ;
*$FAFF PUSH BC        ;
 $FB00 LD B,$40       ;
*$FB02 LD A,$02       ;
 $FB04 OR (HL)        ;
 $FB05 LD (HL),A      ;
 $FB06 INC HL         ;
 $FB07 DJNZ $FB02     ;
 $FB09 POP BC         ;
 $FB0A DJNZ $FAFF     ;
 $FB0C RET            ;

; Unused
u$FB0D LD H,$AF       ;
 $FB0F LD A,$02       ;
 $FB11 LD ($FAF4),A   ;
 $FB14 LD B,$05       ;
*$FB16 PUSH BC        ;
 $FB17 LD L,$02       ;
 $FB19 LD B,$07       ;
*$FB1B PUSH BC        ;
*$FB1C CALL $FABF     ;
 $FB1F INC L          ;
 $FB20 INC L          ;
 $FB21 INC L          ;
 $FB22 INC L          ;
 $FB23 POP BC         ;
 $FB24 DJNZ $FB1B     ;
 $FB26 POP BC         ;
 $FB27 LD A,H         ;
 $FB28 SUB $20        ;
 $FB2A LD H,A         ;
 $FB2B DJNZ $FB16     ;
 $FB2D RET            ;

; Unused
u$FB2E LD HL,$5800    ;
 $FB31 LD A,($FB3E)   ;
 $FB34 LD (HL),A      ;
 $FB35 LD DE,$5801    ;
 $FB38 LD BC,$02FF    ;
 $FB3B LDIR           ;
 $FB3D RET            ;

; Unused
u$FB3E PUSH HL        ;
 $FB3F POP IX         ;
 $FB41 BIT 6,(IX+$00) ;
 $FB45 RET NZ         ;
 $FB46 LD C,$47       ;
 $FB48 CALL $FBB4     ;
 $FB4B CALL $FC3C     ;
 $FB4E CALL $FC6A     ;
 $FB51 CALL $FCB4     ;
 $FB54 CALL $FCDB     ;
 $FB57 LD A,(IX+$08)  ;
 $FB5A CPL            ;
 $FB5B AND (IX+$09)   ;
 $FB5E AND $07        ;
 $FB60 CP $07         ;
 $FB62 JR NZ,$FB6C    ;
 $FB64 CALL $FDB9     ;
 $FB67 NOP            ;
 $FB68 NOP            ;
 $FB69 NOP            ;
 $FB6A NOP            ;
 $FB6B NOP            ;
*$FB6C CALL $FD25     ;
 $FB6F CALL $FD3D     ;
 $FB72 BIT 5,(IX+$00) ;
 $FB76 JR Z,$FB7F     ;
 $FB78 LD H,(IX+$0D)  ;
 $FB7B LD L,(IX+$0C)  ;
 $FB7E JP (HL)        ;
*$FB7F CALL $FD51     ;
 $FB82 BIT 4,(IX+$00) ;
 $FB86 RET Z          ;
 $FB87 SET 6,(IX+$00) ;
 $FB8B LD HL,$FD7B    ;
 $FB8E LD ($ECE0),HL  ;
 $FB91 LD H,(IX+$09)  ;
 $FB94 LD L,(IX+$08)  ;
 $FB97 LD ($ECDE),HL  ;
 $FB9A CALL $EBE0     ;
 $FB9D RET            ;

; Unused
;
; Used by the routine at #R$FDB9.
u$FB9E CALL $FD9B     ;
 $FBA1 LD A,C         ;
 $FBA2 ADD A,(IX+$03) ;
 $FBA5 AND $03        ;
 $FBA7 LD (IX+$03),A  ;
 $FBAA CALL $FCF3     ;
 $FBAD BIT 7,(IX+$00) ;
 $FBB1 JR NZ,$FB9E    ;
 $FBB3 RET            ;

; Unused
u$FBB4 LD L,(IX+$08)  ;
 $FBB7 LD H,(IX+$09)  ;
 $FBBA LD A,L         ;
 $FBBB CPL            ;
 $FBBC AND H          ;
 $FBBD AND $07        ;
 $FBBF CP $07         ;
 $FBC1 JR Z,$FBED     ;
 $FBC3 LD A,(IX+$03)  ;
; This entry point is used by the routine at #R$8866.
*$FBC6 OR A           ;
 $FBC7 JR NZ,$FBD0    ;
 $FBC9 CALL $FC18     ; Get the attribute address.
 $FBCC CALL $FBFC     ; 
 $FBCF RET            ;
*$FBD0 CP $01         ;
 $FBD2 JR NZ,$FBDB    ;
 $FBD4 CALL $FC18     ;
 $FBD7 CALL $FBFC     ;
 $FBDA RET            ;
*$FBDB CP $02         ;
 $FBDD JR NZ,$FBE6    ;
 $FBDF CALL $FC18     ;
 $FBE2 CALL $FC09     ;
 $FBE5 RET            ;
*$FBE6 CALL $FC18     ;
 $FBE9 CALL $FC09     ;
 $FBEC RET            ;

; Fill a sprite with an attribute
;
; Used by the routines at #R$8866 and #R$FBB4.
;
; H Y co-ordinate
; L X co-ordinate
; C attribute to fill
c$FBED CALL $FC18     ; Get the attribute address
 $FBF0 LD A,C         ; { Put the attribute in the first two columns.
 $FBF1 LD (HL),A      ;
 $FBF2 INC HL         ;
 $FBF3 LD (HL),A      ; }
 $FBF4 LD DE,$001F    ; { Move to the start of the next row.
 $FBF7 ADD HL,DE      ; }
 $FBF8 LD (HL),A      ; { Put the attribute in the next two columns.
 $FBF9 INC HL         ;
 $FBFA LD (HL),A      ; }
 $FBFB RET            ;

; Fill three rows with an attribute
;
; Used by the routine at #R$8751.
;
; C Attribute to fill
c$FBFC LD B,$03       ; Three rows.
 $FBFE LD A,C         ; Put the attribute in A.
 $FBFF LD DE,$001F    ; Place to move to in the next row.
*$FC02 LD (HL),A      ; { Set the attribute.
 $FC03 INC HL         ;
 $FC04 LD (HL),A      ; }
 $FC05 ADD HL,DE      ; Move to the next row.
 $FC06 DJNZ $FC02     ; Jump back if there are more rows.
 $FC08 RET            ;

; Fill two rows with an attribute
;
; Used by the routine at #R$8751.
;
; C Attribute to fill
*$FC09 LD B,$02       ; Two rows.
 $FC0B LD A,C         ; Put the attribute in A.
 $FC0C LD DE,$001E    ; Place to move to in the next row.
*$FC0F LD (HL),A      ; { Set the attribute.
 $FC10 INC HL         ;
 $FC11 LD (HL),A      ;
 $FC12 INC HL         ;
 $FC13 LD (HL),A      ; }
 $FC14 ADD HL,DE      ; Move to the next row.
 $FC15 DJNZ $FC0F     ; Jump back if there are more rows.
 $FC17 RET            ;

; Convert a co-ordinate to an attribute address.
;
; Used by the routines at #R$FBB4 and #R$FBED.
;
; H Y co-ordinate
; L X co-ordinate
; HL On exit, holds an attribute address
c$FC18 LD A,H         ; Get the Y co-ordinate.
 $FC19 SRL A          ; { Convert it to a screen address and put it in #REGd.
 $FC1B SRL A          ;
 $FC1D SRL A          ;
 $FC1F SUB $17        ;
 $FC21 NEG            ;
 $FC23 LD D,A         ; }
 $FC24 LD A,L         ; Get the X co-ordinate.
 $FC25 SRL A          ; { Convert it to a screen address and put it in #REGe.
 $FC27 SRL A          ;
 $FC29 SRL A          ;
 $FC2B LD E,A         ; }
 $FC2C LD H,$00       ; Put the Y co-ordinate screen address in #REGhl.
 $FC2E LD L,D         ;
 $FC2F ADD HL,HL      ; { Multiply by 16 to get an appropriate offset 
 $FC30 ADD HL,HL      ; to the attributes buffer.
 $FC31 ADD HL,HL      ;
 $FC32 ADD HL,HL      ;
 $FC33 ADD HL,HL      ; }
 $FC34 LD D,$00       ; { Add the X co-ordinate screen offset.
 $FC36 ADD HL,DE      ; }
 $FC37 LD DE,$5800    ; { Add the base of the attribute buffer and return.
 $FC3A ADD HL,DE      ; 
 $FC3B RET            ; }

; Unused
u$FC3C LD A,(IX+$03)  ;
 $FC3F OR A           ;
 $FC40 JR NZ,$FC4A    ;
 $FC42 LD A,(IX+$09)  ;
 $FC45 INC A          ;
 $FC46 LD (IX+$09),A  ;
 $FC49 RET            ;
*$FC4A CP $01         ;
 $FC4C JR NZ,$FC56    ;
 $FC4E LD A,(IX+$09)  ;
 $FC51 DEC A          ;
 $FC52 LD (IX+$09),A  ;
 $FC55 RET            ;
*$FC56 CP $02         ;
 $FC58 JR NZ,$FC62    ;
 $FC5A LD A,(IX+$08)  ;
 $FC5D DEC A          ;
 $FC5E LD (IX+$08),A  ;
 $FC61 RET            ;
*$FC62 LD A,(IX+$08)  ;
 $FC65 INC A          ;
 $FC66 LD (IX+$08),A  ;
 $FC69 RET            ;

; Unused
u$FC6A PUSH IX        ;
 $FC6C CALL $FC99     ;
 $FC6F POP HL         ;
 $FC70 LD DE,$0008    ;
 $FC73 ADD HL,DE      ;
 $FC74 LD DE,$ECDE    ;
 $FC77 LD BC,$0002    ;
 $FC7A LDIR           ;
 $FC7C LD H,(IX+$0B)  ;
 $FC7F LD L,(IX+$0A)  ;
 $FC82 LD A,(IX+$10)  ;
 $FC85 SRL A          ;
 $FC87 CP $00         ;
 $FC89 JR Z,$FC92     ;
 $FC8B LD B,A         ;
 $FC8C LD DE,$0020    ;
*$FC8F ADD HL,DE      ;
 $FC90 DJNZ $FC8F     ;
*$FC92 LD ($ECE0),HL  ;
 $FC95 CALL $EBE0     ;
 $FC98 RET            ;

; Unused
;
; Used by the routine at #R$FC6A
u$FC99 LD A,(IX+$10)  ;
 $FC9C SRL A          ;
 $FC9E ADD A,$04      ;
 $FCA0 LD ($FCA5),A   ;
 $FCA3 LD A,(IX+$05)  ;
 $FCA6 LD C,A         ;
 $FCA7 CALL $FBB4     ;
 $FCAA LD A,(IX+$10)  ;
 $FCAD INC A          ;
 $FCAE AND $07        ;
 $FCB0 LD (IX+$10),A  ;
 $FCB3 RET            ;

; Unused
;
; Used by the routine at #R$FB3E
u$FCB4 LD A,(IX+$09)  ;
 $FCB7 BIT 4,A        ;
 $FCB9 RET Z          ;
 $FCBA AND $0F        ;
 $FCBC CP $0F         ;
 $FCBE RET NZ         ;
 $FCBF LD A,(IX+$09)  ;
 $FCC2 AND $F0        ;
 $FCC4 SRL A          ;
 $FCC6 SRL A          ;
 $FCC8 SRL A          ;
 $FCCA SRL A          ;
 $FCCC DEC A          ;
 $FCCD SRL A          ;
 $FCCF SUB $04        ;
 $FCD1 NEG            ;
 $FCD3 LD B,(IX+$02)  ;
 $FCD6 ADD A,B        ;
 $FCD7 LD (IX+$0F),A  ;
 $FCDA RET            ;

; Unused
;
; Used by the routine at #R$FB3E
u$FCDB LD A,(IX+$08)  ;
 $FCDE OR A           ;
 $FCDF AND $1F        ;
 $FCE1 RET NZ         ;
 $FCE2 LD A,(IX+$08)  ;
 $FCE5 RLCA           ;
 $FCE6 RLCA           ;
 $FCE7 RLCA           ;
 $FCE8 AND $0F        ;
 $FCEA DEC A          ;
 $FCEB LD B,(IX+$01)  ;
 $FCEE ADD A,B        ;
 $FCEF LD (IX+$0E),A  ;
 $FCF2 RET            ;

; Unused
;
; Used by the routine at #R$FB9E
u$FCF3 LD H,(IX+$0F)  ;
 $FCF6 LD L,(IX+$0E)  ;
 $FCF9 CALL $FA13     ;
 $FCFC RES 7,(IX+$00) ;
 $FD00 LD A,(IX+$03)  ;
 $FD03 OR A           ;
 $FD04 JR NZ,$FD0E    ;
 $FD06 BIT 7,(HL)     ;
 $FD08 RET NZ         ;
*$FD09 SET 7,(IX+$00) ;
 $FD0D RET            ;
*$FD0E CP $01         ;
 $FD10 JR NZ,$FD17    ;
 $FD12 BIT 6,(HL)     ;
 $FD14 RET NZ         ;
 $FD15 JR $FD09       ;
*$FD17 CP $02         ;
 $FD19 JR NZ,$FD20    ;
 $FD1B BIT 5,(HL)     ;
 $FD1D RET NZ         ;
 $FD1E JR $FD09       ;
*$FD20 BIT 4,(HL)     ;
 $FD22 RET NZ         ;
 $FD23 JR $FD09       ;
*$FD25 RES 5,(IX+$00) ;
 $FD29 LD A,($7FCF)   ;
 $FD2C SUB (IX+$08)   ;
 $FD2F BIT 7,A        ;
 $FD31 JR Z,$FD35     ;
 $FD33 NEG            ;
*$FD35 CP $10         ;
 $FD37 RET NC         ;
 $FD38 SET 5,(IX+$00) ;
 $FD3C RET            ;
*$FD3D LD A,($7FD0)   ;
 $FD40 SUB (IX+$09)   ;
 $FD43 BIT 7,A        ;
 $FD45 JR Z,$FD49     ;
 $FD47 NEG            ;
*$FD49 CP $10         ;
 $FD4B RET NC         ;
 $FD4C SET 5,(IX+$00) ;
 $FD50 RET            ;
*$FD51 RES 4,(IX+$00) ;
 $FD55 LD A,(IX+$09)  ;
 $FD58 CP $B0         ;
 $FD5A JR C,$FD60     ;
 $FD5C SET 4,(IX+$00) ;
*$FD60 CP $10         ;
 $FD62 JR NZ,$FD68    ;
 $FD64 SET 4,(IX+$00) ;
*$FD68 LD A,(IX+$08)  ;
 $FD6B CP $10         ;
 $FD6D JR NC,$FD73    ;
 $FD6F SET 4,(IX+$00) ;
*$FD73 CP $F0         ;
 $FD75 RET C          ;
 $FD76 SET 4,(IX+$00) ;
 $FD7A RET            ;

; Unused
s$FD7B DEFS $20

; Generate a random time for the crusher
;
; Used by the routines at #R$8751 and #R$8DCD.
;
; BC On return, holds new crusher time
c$FD9B LD DE,($5C76) ; Put the previous value in #REGde.
 $FD9F LD H,E        ; { Do some arithmetic to get a new value.
 $FDA0 LD L,$FD      ;
 $FDA2 LD A,D        ;
 $FDA3 OR A          ;
 $FDA4 LD B,$00      ;
 $FDA6 SBC HL,DE     ;
 $FDA8 SBC A,B       ;
 $FDA9 SBC HL,DE     ;
 $FDAB SBC A,B       ;
 $FDAC LD E,A        ;
 $FDAD LD D,B        ;
 $FDAE SBC HL,DE     ;
 $FDB0 JR NC,$FDB3   ;
 $FDB2 INC HL        ; }
*$FDB3 LD ($5C76),HL ; Set the new value in #R$5C76.
 $FDB6 LD B,H        ; { Copy this to #REGbc and return.
 $FDB7 LD C,L        ; }
 $FDB8 RET           ;

; Unused
;
; Used by the routine at #R$FB3E.
u$FDB9 LD A,(IX+$08) ;
 $FDBC CPL           ;
 $FDBD AND (IX+$09)  ;
 $FDC0 BIT 4,A       ;
 $FDC2 RET Z         ;
 $FDC3 LD A,(IX+$09) ;
 $FDC6 AND $1F       ;
 $FDC8 CP $1F        ;
 $FDCA RET NZ        ;
 $FDCB LD A,(IX+$08) ;
 $FDCE AND $0F       ;
 $FDD0 RET NZ        ;
 $FDD1 CALL $FB9E    ;
 $FDD4 RET           ;

; Print all static characters in the current room
;
; Used by the routine at #R$9551.
c$FDD5 LD HL,$AF00   ; Starting position, top left.
 $FDD8 LD IX,$C42A   ; #R$C42A - static characters table
 $FDDC LD IY,$CF94   ; Set #REGiy to the second line in the screen attribute buffer (#R$CF54).
 $FDE0 LD B,$14      ; Draw #N$14 lines.
*$FDE2 PUSH BC       ; Remember this.
 $FDE3 CALL $FDEA    ; Draw a line.
 $FDE6 POP BC        ; Restore number of lines.
 $FDE7 DJNZ $FDE2    ; Loop if there are more lines to draw.
 $FDE9 RET           ; Otherwise return.

; Print a line of characters in a room
;
; Used by the routine at #R$FDD5.
;
; IX pointer to the character data
;
; The characters are a series of 3-bit numbers (0-7) packed contiguously into bytes.
; To extract the relevant character, the appropriate bits need to be taken from
; every 3 byte sequence, which contains 8 characters.
; #TABLE (default, center)
; { =h Bytes | =h Bits | =h Character number }
; { 0 | 5 - 7 | 0 }
; { 0 | 2 - 4 | 1 }
; { 0 - 1 | 0 - 1, 7 | 2 }
; { 1 | 4 - 6 | 3 }
; { 1 | 1 - 3 | 4 }
; { 1 - 2 | 0, 6 - 7 | 5 }
; { 2 | 3 - 5 | 6 }
; { 2 | 0 - 2 | 7 }
; TABLE#
c$FDEA LD B,$04      ; Four sets of 3-byte sequences for each line.
*$FDEC LD A,(IX+$00) ; Get the first byte.
 $FDEF RLCA          ; { Put the top three bits in the bottom.
 $FDF0 RLCA          ;
 $FDF1 RLCA          ; }
 $FDF2 CALL $FE41    ; Print the character.
 $FDF5 LD A,(IX+$00) ; Get the first byte.
 $FDF8 RRCA          ; { Put bits 2-4 in the bottom.
 $FDF9 RRCA          ; }
 $FDFA CALL $FE41    ; Print the character.
 $FDFD LD A,(IX+$00) ; { Put the first byte in #REGa and the second in #REGc.
 $FE00 LD C,(IX+$01) ; }
 $FE03 RL C          ; { Get the top bit of the second byte and the bottom two bits of the first.
 $FE05 RLA           ; }
 $FE06 CALL $FE41    ; Print the character.
 $FE09 LD A,(IX+$01) ; Get the second byte.
 $FE0C RRCA          ; { Put bits 4-6 in the bottom.
 $FE0D RRCA          ;
 $FE0E RRCA          ;
 $FE0F RRCA          ; }
 $FE10 CALL $FE41    ; Print the character.
 $FE13 LD A,(IX+$01) ; Get the second byte.
 $FE16 RRCA          ; Put bits 1-3 in the bottom.
 $FE17 CALL $FE41    ; Print the character.
 $FE1A LD A,(IX+$01) ; { Put the first byte in #REGa and the second in #REGc.
 $FE1D LD C,(IX+$02) ; }
 $FE20 RL C          ; { Get the top two bit of the third byte and the bottom bit of the second.
 $FE22 RLA           ;
 $FE23 RL C          ;
 $FE25 RLA           ; }
 $FE26 CALL $FE41    ; Print the character.
 $FE29 LD A,(IX+$02) ; Get the third byte.
 $FE2C RRCA          ; { Put bits 3-5 in the bottom.
 $FE2D RRCA          ;
 $FE2E RRCA          ; }
 $FE2F CALL $FE41    ; Print the character.
 $FE32 LD A,(IX+$02) ; Get the byte byte; the bottom 3 bits will have the last character.
 $FE35 CALL $FE41    ; Print the character.
 $FE38 INC IX        ; { Move to the next block. 
 $FE3A INC IX        ;
 $FE3C INC IX        ; }
 $FE3E DJNZ $FDEC    ; { Repeat until all characters in the line are printed.
 $FE40 RET           ; }

; Print a character in the room
;
; Used by the routine at #R$FDEA.
;
; A Character to draw is in bits 0-3
; H Y co-ordinate
; L X co-ordinate
c$FE41 PUSH BC       ;
 $FE42 AND $07       ; The bottom 3 bits contain the relevant character.
 $FE44 LD C,A        ; Remember this.
 $FE45 ADD A,A       ; { Shift by 8 to get an offset in the graphics table.
 $FE46 ADD A,A       ;
 $FE47 ADD A,A       ;
 $FE48 ADD A,C       ; }
 $FE49 PUSH HL       ; Remember screen position.
 $FE4A LD E,A        ; { Put the offset in #REGde.
 $FE4B LD D,$00      ; }
 $FE4D LD HL,$C54E   ; #R$C54E is the static character graphics table.
 $FE50 ADD HL,DE     ; { Get the right offset and put it in #REGde.
 $FE51 EX DE,HL      ; }
 $FE52 POP HL        ; Restore screen position.
 $FE53 PUSH HL       ; Remember screen position.
 $FE54 LD C,L        ; Put X co-ordinate in #REGc.
 $FE55 LD L,H        ; { Double Y co-ordinate to get a word offset.
 $FE56 LD H,$00      ;
 $FE58 ADD HL,HL     ; }
 $FE59 PUSH DE       ; Remember address of character.
 $FE5A LD DE,$EA60   ; #R$EA60 is the screen offsets table.
 $FE5D ADD HL,DE     ; { Put the appropriate screen position in #REGhl.
 $FE5E LD A,(HL)     ;
 $FE5F INC HL        ;
 $FE60 LD H,(HL)     ;
 $FE61 LD L,A        ; }
; Now copy the found graphic into the screen buffer.
; The first byte contains the attribute.
 $FE62 LD DE,$9260   ; { Add this value to convert a screen address into an offset from #R$D260.
 $FE65 ADD HL,DE     ; }
 $FE66 LD B,$00      ; Set #REGb to 0 so #REGbc can be used an offset.
 $FE68 POP DE        ; Restore address of character.
 $FE69 ADD HL,BC     ; Add the X offset so #REGhl now points to the right place in the screen buffer.
 $FE6A LD A,(DE)     ; { Copy the next attribute and store it.
 $FE6B LD (IY+$00),A ; }
 $FE6E INC DE        ; Move onto the next byte.
; Now copy the pixel data.
 $FE6F LD B,$08      ; 8 rows to copy.
*$FE71 LD A,(DE)     ; { Copy this row.
 $FE72 LD (HL),A     ; }
 $FE73 INC H         ; Move to the next row.
 $FE74 INC DE        ; Move to the next graphic byte.
 $FE75 DJNZ $FE71    ; Loop while there is more to do.
 $FE77 INC IY        ; Move to the next attribute address.
 $FE79 POP HL        ; { Restore #REGhl and #REGbc.
 $FE7A POP BC        ; }
 $FE7B INC L         ; Move to the next column.
 $FE7C LD A,L        ; { Have we reached the end of a column?
 $FE7D AND $1F       ; }
 $FE7F RET NZ        ; Return if not.
 ; Having reached the end of a column, need to point to the right place.
 $FE80 LD L,A        ; Set the column back to 0.
 $FE81 LD A,H        ; { Move to the next segment on screen.
 $FE82 SUB $08       ;
 $FE84 LD H,A        ; }
 $FE85 RET           ; Return.

; Unused
u$FE86 LD HL,$9260   ;
 $FE89 ADD HL,DE     ;
 $FE8A EX DE,HL      ;
 $FE8B LD HL,($F9AE) ;
 $FE8E RET           ;

; Convert a screen address to a buffer address and store it
;
; Used by the routine at #R$EFBD.
;
; DE Screen address
c$FE8F LD HL,$9260   ; { Add the offset so the address is in the
 $FE92 ADD HL,DE     ; buffer starting at #R$D260 }
 $FE93 EX DE,HL      ; Put this in #REGde.
 $FE94 LD HL,($F047) ; Put the buffer address in #R$F047.
 $FE97 RET           ;

; Unused
s$FE98 DEFS $0A

; Check the attribute at the current position matches the "moving" type
;
; Used by the routine at #R$8B90.
c$FEA2 LD A,($C51C)  ; { Put the expected attribute in #REGb.
 $FEA5 LD B,A        ; }
 $FEA6 LD HL,($5C7B) ; Get the position (#R$5C7B, #R$5C7C).
 $FEA9 INC H         ; { Move up one row and across one column.
 $FEAA LD A,$08      ;
 $FEAC ADD A,L       ;
 $FEAD LD L,A        ; }
 $FEAE CALL $FEC0    ; Get the attribute at this position.
 $FEB1 CP B          ; Does it match?
 $FEB2 RET Z         ; Return if it does.
 $FEB3 LD HL,($5C7B) ; Get the position (#R$5C7B, #R$5C7C).
 $FEB6 LD D,$F1      ; { Move down one row and across one column.
 $FEB8 LD E,$08      ;
 $FEBA ADD HL,DE     ; }
 $FEBB CALL $FEC0    ; Get the attribute at this position.
 $FEBE CP B          ; Does it match?
 $FEBF RET           ; Return with the zero flag set if it does.

; Get the attribute at the specified position.
;
; Used by the routine at #R$FEA2.
;
; H Y co-ordinate
; L X co-ordinate
; A On return, holds the attribute
c$FEC0 PUSH BC       ; Remember #REGbc.
 $FEC1 LD A,L        ; { Put the top 5 bits of the X co-ordinate in #REGc.
 $FEC2 AND $F8       ;
 $FEC4 RRCA          ;
 $FEC5 RRCA          ;
 $FEC6 RRCA          ;
 $FEC7 LD C,A        ; }
 $FEC8 LD A,H        ; { Put the top 5 bits of the Y co-ordinate in #REGb.
 $FEC9 AND $F8       ;
 $FECB RRCA          ;
 $FECC RRCA          ;
 $FECD RRCA          ;
 $FECE LD B,A        ; }
 $FECF LD A,$18      ; { Convert the Y co-ordinate into a screen offset.
 $FED1 SUB B         ;
 $FED2 DEC A         ;
 $FED3 LD B,A        ; }
 $FED4 LD L,B        ; { Multiply this by 32 to get a particular row offset on screen.
 $FED5 LD H,$00      ;
 $FED7 ADD HL,HL     ;
 $FED8 ADD HL,HL     ;
 $FED9 ADD HL,HL     ;
 $FEDA ADD HL,HL     ;
 $FEDB ADD HL,HL     ; }
 $FEDC LD D,$00      ; { Add the X co-ordinate.
 $FEDE LD E,C        ;
 $FEDF ADD HL,DE     ; }
 $FEE0 LD DE,$5800   ; { Add the base address of the attribute buffer.
 $FEE3 ADD HL,DE     ; }
 $FEE4 LD A,(HL)     ; Put the attribute in A.
 $FEE5 POP BC        ; { Restore #REGbc and return.
 $FEE6 RET           ; }

; Unused
s$FEE7 DEFS $19

; Default to keyboard and reset IY
;
; Used by the routine at #R$8000.
c$FF00 LD ($82A3),A  ;
 $FF03 LD IY,$5C3A   ;
 $FF07 RET           ;

; Unused
u$FF08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FF10 DEFB $00,$00,$00,$00,$00,$00,$E0,$57
 $FF18 DEFB $F3,$0D,$CE,$0B,$E4,$50,$CE,$0B
 $FF20 DEFB $E5,$50,$B1,$33,$30,$5D,$05,$00
 $FF28 DEFB $B1,$33,$30,$5D,$00,$00,$2B,$5D
 $FF30 DEFB $27,$5D,$2B,$5D,$1F,$25,$DB,$02
 $FF38 DEFB $4D,$00,$D9,$56,$27,$00,$D8,$56
 $FF40 DEFB $8C,$08,$5C,$0E,$00,$47,$C0,$57
 $FF48 DEFB $71,$0E,$F3,$0D,$21,$17,$C6,$1E
 $FF50 DEFB $FF,$7C,$76,$1B,$03,$13,$00,$3E
 $FF58 DEFB $18,$18,$08

; Halt and run one frame in the first (outdoor) room
;
; Used by the routine at #R$CD41.
c$FF5B HALT          ;
 $FF5C CALL $CB93    ;
 $FF5F RET           ;

; Monty's angel
;
; #GRAFIXSTR($FF60)(Angel)
b$FF60 DEFB $03,$C0,$04,$20,$84,$21,$72,$4E
 $FF68 DEFB $3D,$BC,$10,$08,$10,$04,$20,$04
 $FF70 DEFB $20,$04,$20,$04,$10,$08,$11,$88
 $FF78 DEFB $12,$48,$0C,$30,$00,$00,$00,$00
 $FF80 DEFB $03,$C0,$04,$20,$04,$20,$F2,$4F
 $FF88 DEFB $3D,$BC,$18,$08,$10,$04,$20,$04
 $FF90 DEFB $20,$04,$20,$04,$10,$08,$11,$88
 $FF98 DEFB $12,$48,$0C,$30,$00,$00,$00,$00
 $FFA0 DEFB $03,$C0,$04,$20,$04,$20,$3A,$4C
 $FFA8 DEFB $7D,$BE,$88,$09,$10,$04,$20,$04
 $FFB0 DEFB $20,$04,$20,$04,$10,$08,$11,$88
 $FFB8 DEFB $12,$48,$0C,$30,$00,$00,$00,$00
 $FFC0 DEFB $03,$C0,$04,$20,$04,$20,$F2,$4F
 $FFC8 DEFB $3D,$BC,$18,$08,$10,$04,$20,$04
 $FFD0 DEFB $20,$04,$20,$04,$10,$08,$11,$88
 $FFD8 DEFB $12,$48,$0C,$30,$00,$00,$00,$00

; Dead Monty
;
; #GRAFIX($FFE0)(Monty_dead)
b$FFE0 DEFB $00,$00,$00,$00,$00,$00,$00,$0C
 $FFE8 DEFB $03,$8C,$0C,$DE,$1F,$1E,$BF,$DE
 $FFF0 DEFB $BC,$D9,$BB,$2E,$FB,$6E,$FD,$16
 $FFF8 DEFB $FF,$F8,$7F,$F0,$3F,$E0,$07,$00
